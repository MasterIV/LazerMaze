                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Sun Feb 17 02:32:07 2019
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc238180
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _cursor_init
                             13 	.globl _cursor_reset
                             14 	.globl _cursor_update
                             15 	.globl _cursor_move
                             16 	.globl _cursor_toggle
                             17 	.globl _check_transition
                             18 	.globl _update_background
                             19 	.globl _init_background
                             20 	.globl _project_lazer
                             21 	.globl _determine_lazer_path
                             22 	.globl _determine_next_direction
                             23 	.globl _determine_next_lazer_stat
                             24 	.globl _row_col_to_cel
                             25 	.globl _counter
                             26 	.globl _selected
                             27 	.globl _cursor
                             28 	.globl _lazer_map
                             29 	.globl _level
                             30 	.globl _current_level
                             31 	.globl _level_objects
                             32 	.globl _display_title
                             33 	.globl _display_level
                             34 	.globl _display_victory
                             35 ;--------------------------------------------------------
                             36 ; special function registers
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; special function bits 
                             40 ;--------------------------------------------------------
                             41 ;--------------------------------------------------------
                             42 ; internal ram data
                             43 ;--------------------------------------------------------
                             44 	.area _DATA
   0000                      45 _level_objects::
   0000                      46 	.ds 72
   0048                      47 _current_level::
   0048                      48 	.ds 360
   01B0                      49 _level::
   01B0                      50 	.ds 1
   01B1                      51 _lazer_map::
   01B1                      52 	.ds 72
   01F9                      53 _cursor::
   01F9                      54 	.ds 4
   01FD                      55 _selected::
   01FD                      56 	.ds 1
   01FE                      57 _counter::
   01FE                      58 	.ds 1
                             59 ;--------------------------------------------------------
                             60 ; overlayable items in internal ram 
                             61 ;--------------------------------------------------------
                             62 	.area _OVERLAY
                             63 ;--------------------------------------------------------
                             64 ; indirectly addressable internal ram data
                             65 ;--------------------------------------------------------
                             66 	.area _ISEG
                             67 ;--------------------------------------------------------
                             68 ; bit data
                             69 ;--------------------------------------------------------
                             70 	.area _BSEG
                             71 ;--------------------------------------------------------
                             72 ; external ram data
                             73 ;--------------------------------------------------------
                             74 	.area _XSEG
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area _GSINIT
                             79 	.area _GSFINAL
                             80 	.area _GSINIT
                             81 ;	LazerMaze.c 7
                             82 ;	genAssign
                             83 ;	AOP_HL for _level
   0000 21 B0 01             84 	ld	hl,#_level
   0003 36 00                85 	ld	(hl),#0x00
                             86 ;--------------------------------------------------------
                             87 ; Home
                             88 ;--------------------------------------------------------
                             89 	.area _HOME
                             90 	.area _CODE
                             91 ;--------------------------------------------------------
                             92 ; code
                             93 ;--------------------------------------------------------
                             94 	.area _CODE
                             95 ;	lazer.c 12
                             96 ;	genLabel
                             97 ;	genFunction
                             98 ;	---------------------------------
                             99 ; Function row_col_to_cel
                            100 ; ---------------------------------
   0000                     101 ___row_col_to_cel_start:
   0000                     102 _row_col_to_cel:
                            103 	
                            104 ;	lazer.c 13
                            105 ;	genLeftShift
                            106 ;	AOP_STK for 
   0000 F8 02               107 	lda	hl,2(sp)
   0002 4E                  108 	ld	c,(hl)
   0003 23                  109 	inc	hl
   0004 46                  110 	ld	b,(hl)
   0005 3E 04               111 	ld	a,#0x03+1
   0007 18 04               112 	jr	00104$
   0009                     113 00103$:
   0009 CB 21               114 	sla	c
   000B CB 10               115 	rl	b
   000D                     116 00104$:
   000D 3D                  117 	dec	a
   000E 20 F9               118 	jr	nz,00103$
                            119 ;	genPlus
                            120 ;	AOP_STK for 
                            121 ;	Can't optimise plus by inc, falling back to the normal way
   0010 F8 02               122 	lda	hl,2(sp)
   0012 2A                  123 	ld	a,(hl+)
   0013 66                  124 	ld	h,(hl)
   0014 6F                  125 	ld	l,a
   0015 09                  126 	add	hl,bc
   0016 4D                  127 	ld	c,l
   0017 44                  128 	ld	b,h
                            129 ;	genPlus
                            130 ;	AOP_STK for 
                            131 ;	Can't optimise plus by inc, falling back to the normal way
   0018 F8 04               132 	lda	hl,4(sp)
   001A 2A                  133 	ld	a,(hl+)
   001B 66                  134 	ld	h,(hl)
   001C 6F                  135 	ld	l,a
   001D 09                  136 	add	hl,bc
   001E 4D                  137 	ld	c,l
   001F 44                  138 	ld	b,h
                            139 ;	genRet
   0020 59                  140 	ld	e,c
   0021 50                  141 	ld	d,b
                            142 ;	genLabel
   0022                     143 00101$:
                            144 ;	genEndFunction
                            145 	
   0022 C9                  146 	ret
   0023                     147 ___row_col_to_cel_end:
                            148 ;	lazer.c 16
                            149 ;	genLabel
                            150 ;	genFunction
                            151 ;	---------------------------------
                            152 ; Function determine_next_lazer_stat
                            153 ; ---------------------------------
   0023                     154 ___determine_next_lazer_stat_start:
   0023                     155 _determine_next_lazer_stat:
                            156 	
                            157 ;	lazer.c 17
                            158 ;	genCmpEq
                            159 ;	AOP_STK for 
                            160 ; genCmpEq: left 1, right 1, result 0
   0023 F8 02               161 	lda	hl,2(sp)
   0025 7E                  162 	ld	a,(hl)
   0026 FE 08               163 	cp	a,#0x08
   0028 CA 38 01            164 	jp	z,00133$
   002B                     165 00165$:
                            166 ;	genCmpEq
                            167 ;	AOP_STK for 
                            168 ; genCmpEq: left 1, right 1, result 0
   002B F8 02               169 	lda	hl,2(sp)
   002D 7E                  170 	ld	a,(hl)
   002E FE 18               171 	cp	a,#0x18
   0030 CA A8 00            172 	jp	z,00114$
   0033                     173 00166$:
                            174 ;	genCmpEq
                            175 ;	AOP_STK for 
                            176 ; genCmpEq: left 1, right 1, result 0
   0033 F8 02               177 	lda	hl,2(sp)
   0035 7E                  178 	ld	a,(hl)
   0036 FE 28               179 	cp	a,#0x28
   0038 CA 76 00            180 	jp	z,00107$
   003B                     181 00167$:
                            182 ;	genCmpEq
                            183 ;	AOP_STK for 
                            184 ; genCmpEq: left 1, right 1, result 0
   003B F8 02               185 	lda	hl,2(sp)
   003D 7E                  186 	ld	a,(hl)
   003E FE 38               187 	cp	a,#0x38
   0040 CA 38 01            188 	jp	z,00133$
   0043                     189 00168$:
                            190 ;	genCmpEq
                            191 ;	AOP_STK for 
                            192 ; genCmpEq: left 1, right 1, result 0
   0043 F8 02               193 	lda	hl,2(sp)
   0045 7E                  194 	ld	a,(hl)
   0046 FE 58               195 	cp	a,#0x58
   0048 CA F3 00            196 	jp	z,00120$
   004B                     197 00169$:
                            198 ;	genCmpEq
                            199 ;	AOP_STK for 
                            200 ; genCmpEq: left 1, right 1, result 0
   004B F8 02               201 	lda	hl,2(sp)
   004D 7E                  202 	ld	a,(hl)
   004E FE 60               203 	cp	a,#0x60
   0050 CA 21 01            204 	jp	z,00126$
   0053                     205 00170$:
                            206 ;	genCmpEq
                            207 ;	AOP_STK for 
                            208 ; genCmpEq: left 1, right 1, result 0
   0053 F8 02               209 	lda	hl,2(sp)
   0055 7E                  210 	ld	a,(hl)
   0056 FE 68               211 	cp	a,#0x68
   0058 CA 6A 01            212 	jp	z,00135$
   005B                     213 00171$:
                            214 ;	genCmpEq
                            215 ;	AOP_STK for 
                            216 ; genCmpEq: left 1, right 1, result 0
   005B F8 02               217 	lda	hl,2(sp)
   005D 7E                  218 	ld	a,(hl)
   005E FE 70               219 	cp	a,#0x70
   0060 CA DC 00            220 	jp	z,00117$
   0063                     221 00172$:
                            222 ;	genCmpEq
                            223 ;	AOP_STK for 
                            224 ; genCmpEq: left 1, right 1, result 0
   0063 F8 02               225 	lda	hl,2(sp)
   0065 7E                  226 	ld	a,(hl)
   0066 FE 78               227 	cp	a,#0x78
   0068 CA 0A 01            228 	jp	z,00123$
   006B                     229 00173$:
                            230 ;	genCmpEq
                            231 ;	AOP_STK for 
                            232 ; genCmpEq: left 1, right 1, result 0
   006B F8 02               233 	lda	hl,2(sp)
   006D 7E                  234 	ld	a,(hl)
   006E FE 84               235 	cp	a,#0x84
   0070 CA 6A 01            236 	jp	z,00135$
   0073                     237 00174$:
                            238 ;	genGoto
   0073 C3 6F 01            239 	jp	00137$
                            240 ;	lazer.c 28
                            241 ;	genLabel
   0076                     242 00107$:
                            243 ;	lazer.c 19
                            244 ;	genCmpEq
                            245 ;	AOP_STK for 
                            246 ; genCmpEq: left 1, right 1, result 0
   0076 F8 03               247 	lda	hl,3(sp)
   0078 7E                  248 	ld	a,(hl)
   0079 FE 01               249 	cp	a,#0x01
   007B CA 99 00            250 	jp	z,00101$
   007E                     251 00175$:
                            252 ;	genCmpEq
                            253 ;	AOP_STK for 
                            254 ; genCmpEq: left 1, right 1, result 0
   007E F8 03               255 	lda	hl,3(sp)
   0080 7E                  256 	ld	a,(hl)
   0081 FE 02               257 	cp	a,#0x02
   0083 CA 99 00            258 	jp	z,00101$
   0086                     259 00176$:
                            260 ;	genCmpEq
                            261 ;	AOP_STK for 
                            262 ; genCmpEq: left 1, right 1, result 0
   0086 F8 03               263 	lda	hl,3(sp)
   0088 7E                  264 	ld	a,(hl)
   0089 FE 04               265 	cp	a,#0x04
   008B CA 9E 00            266 	jp	z,00103$
   008E                     267 00177$:
                            268 ;	genCmpEq
                            269 ;	AOP_STK for 
                            270 ; genCmpEq: left 1, right 1, result 0
   008E F8 03               271 	lda	hl,3(sp)
   0090 7E                  272 	ld	a,(hl)
   0091 FE 08               273 	cp	a,#0x08
   0093 CA 9E 00            274 	jp	z,00103$
   0096                     275 00178$:
                            276 ;	genGoto
   0096 C3 A3 00            277 	jp	00105$
                            278 ;	lazer.c 22
                            279 ;	genLabel
   0099                     280 00101$:
                            281 ;	genRet
   0099 1E 04               282 	ld	e,#0x04
   009B C3 71 01            283 	jp	00138$
                            284 ;	lazer.c 25
                            285 ;	genLabel
   009E                     286 00103$:
                            287 ;	genRet
   009E 1E 08               288 	ld	e,#0x08
   00A0 C3 71 01            289 	jp	00138$
                            290 ;	lazer.c 27
                            291 ;	genLabel
   00A3                     292 00105$:
                            293 ;	genRet
   00A3 1E 00               294 	ld	e,#0x00
   00A5 C3 71 01            295 	jp	00138$
                            296 ;	lazer.c 39
                            297 ;	genLabel
   00A8                     298 00114$:
                            299 ;	lazer.c 30
                            300 ;	genCmpEq
                            301 ;	AOP_STK for 
                            302 ; genCmpEq: left 1, right 1, result 0
   00A8 F8 03               303 	lda	hl,3(sp)
   00AA 7E                  304 	ld	a,(hl)
   00AB FE 01               305 	cp	a,#0x01
   00AD CA CD 00            306 	jp	z,00108$
   00B0                     307 00179$:
                            308 ;	genCmpEq
                            309 ;	AOP_STK for 
                            310 ; genCmpEq: left 1, right 1, result 0
   00B0 F8 03               311 	lda	hl,3(sp)
   00B2 7E                  312 	ld	a,(hl)
   00B3 FE 02               313 	cp	a,#0x02
   00B5 CA D2 00            314 	jp	z,00110$
   00B8                     315 00180$:
                            316 ;	genCmpEq
                            317 ;	AOP_STK for 
                            318 ; genCmpEq: left 1, right 1, result 0
   00B8 F8 03               319 	lda	hl,3(sp)
   00BA 7E                  320 	ld	a,(hl)
   00BB FE 04               321 	cp	a,#0x04
   00BD CA D2 00            322 	jp	z,00110$
   00C0                     323 00181$:
                            324 ;	genCmpEq
                            325 ;	AOP_STK for 
                            326 ; genCmpEq: left 1, right 1, result 0
   00C0 F8 03               327 	lda	hl,3(sp)
   00C2 7E                  328 	ld	a,(hl)
   00C3 FE 08               329 	cp	a,#0x08
   00C5 C2 D7 00            330 	jp	nz,00112$
   00C8 18 03               331 	jr	00183$
   00CA                     332 00182$:
   00CA C3 D7 00            333 	jp	00112$
   00CD                     334 00183$:
                            335 ;	lazer.c 33
                            336 ;	genLabel
   00CD                     337 00108$:
                            338 ;	genRet
   00CD 1E 04               339 	ld	e,#0x04
   00CF C3 71 01            340 	jp	00138$
                            341 ;	lazer.c 36
                            342 ;	genLabel
   00D2                     343 00110$:
                            344 ;	genRet
   00D2 1E 08               345 	ld	e,#0x08
   00D4 C3 71 01            346 	jp	00138$
                            347 ;	lazer.c 38
                            348 ;	genLabel
   00D7                     349 00112$:
                            350 ;	genRet
   00D7 1E 00               351 	ld	e,#0x00
   00D9 C3 71 01            352 	jp	00138$
                            353 ;	lazer.c 44
                            354 ;	genLabel
   00DC                     355 00117$:
                            356 ;	lazer.c 41
                            357 ;	genCmpEq
                            358 ;	AOP_STK for 
                            359 ; genCmpEq: left 1, right 1, result 0
   00DC F8 03               360 	lda	hl,3(sp)
   00DE 7E                  361 	ld	a,(hl)
   00DF FE 04               362 	cp	a,#0x04
   00E1 C2 EE 00            363 	jp	nz,00116$
   00E4 18 03               364 	jr	00185$
   00E6                     365 00184$:
   00E6 C3 EE 00            366 	jp	00116$
   00E9                     367 00185$:
                            368 ;	lazer.c 42
                            369 ;	genRet
   00E9 1E 04               370 	ld	e,#0x04
   00EB C3 71 01            371 	jp	00138$
                            372 ;	genLabel
   00EE                     373 00116$:
                            374 ;	lazer.c 44
                            375 ;	genRet
   00EE 1E 00               376 	ld	e,#0x00
   00F0 C3 71 01            377 	jp	00138$
                            378 ;	lazer.c 49
                            379 ;	genLabel
   00F3                     380 00120$:
                            381 ;	lazer.c 46
                            382 ;	genCmpEq
                            383 ;	AOP_STK for 
                            384 ; genCmpEq: left 1, right 1, result 0
   00F3 F8 03               385 	lda	hl,3(sp)
   00F5 7E                  386 	ld	a,(hl)
   00F6 FE 08               387 	cp	a,#0x08
   00F8 C2 05 01            388 	jp	nz,00119$
   00FB 18 03               389 	jr	00187$
   00FD                     390 00186$:
   00FD C3 05 01            391 	jp	00119$
   0100                     392 00187$:
                            393 ;	lazer.c 47
                            394 ;	genRet
   0100 1E 04               395 	ld	e,#0x04
   0102 C3 71 01            396 	jp	00138$
                            397 ;	genLabel
   0105                     398 00119$:
                            399 ;	lazer.c 49
                            400 ;	genRet
   0105 1E 00               401 	ld	e,#0x00
   0107 C3 71 01            402 	jp	00138$
                            403 ;	lazer.c 54
                            404 ;	genLabel
   010A                     405 00123$:
                            406 ;	lazer.c 51
                            407 ;	genCmpEq
                            408 ;	AOP_STK for 
                            409 ; genCmpEq: left 1, right 1, result 0
   010A F8 03               410 	lda	hl,3(sp)
   010C 7E                  411 	ld	a,(hl)
   010D FE 02               412 	cp	a,#0x02
   010F C2 1C 01            413 	jp	nz,00122$
   0112 18 03               414 	jr	00189$
   0114                     415 00188$:
   0114 C3 1C 01            416 	jp	00122$
   0117                     417 00189$:
                            418 ;	lazer.c 52
                            419 ;	genRet
   0117 1E 04               420 	ld	e,#0x04
   0119 C3 71 01            421 	jp	00138$
                            422 ;	genLabel
   011C                     423 00122$:
                            424 ;	lazer.c 54
                            425 ;	genRet
   011C 1E 00               426 	ld	e,#0x00
   011E C3 71 01            427 	jp	00138$
                            428 ;	lazer.c 59
                            429 ;	genLabel
   0121                     430 00126$:
                            431 ;	lazer.c 56
                            432 ;	genCmpEq
                            433 ;	AOP_STK for 
                            434 ; genCmpEq: left 1, right 1, result 0
   0121 F8 03               435 	lda	hl,3(sp)
   0123 7E                  436 	ld	a,(hl)
   0124 FE 01               437 	cp	a,#0x01
   0126 C2 33 01            438 	jp	nz,00125$
   0129 18 03               439 	jr	00191$
   012B                     440 00190$:
   012B C3 33 01            441 	jp	00125$
   012E                     442 00191$:
                            443 ;	lazer.c 57
                            444 ;	genRet
   012E 1E 04               445 	ld	e,#0x04
   0130 C3 71 01            446 	jp	00138$
                            447 ;	genLabel
   0133                     448 00125$:
                            449 ;	lazer.c 59
                            450 ;	genRet
   0133 1E 00               451 	ld	e,#0x00
   0135 C3 71 01            452 	jp	00138$
                            453 ;	lazer.c 71
                            454 ;	genLabel
   0138                     455 00133$:
                            456 ;	lazer.c 62
                            457 ;	genCmpEq
                            458 ;	AOP_STK for 
                            459 ; genCmpEq: left 1, right 1, result 0
   0138 F8 03               460 	lda	hl,3(sp)
   013A 7E                  461 	ld	a,(hl)
   013B FE 01               462 	cp	a,#0x01
   013D CA 5B 01            463 	jp	z,00127$
   0140                     464 00192$:
                            465 ;	genCmpEq
                            466 ;	AOP_STK for 
                            467 ; genCmpEq: left 1, right 1, result 0
   0140 F8 03               468 	lda	hl,3(sp)
   0142 7E                  469 	ld	a,(hl)
   0143 FE 02               470 	cp	a,#0x02
   0145 CA 60 01            471 	jp	z,00129$
   0148                     472 00193$:
                            473 ;	genCmpEq
                            474 ;	AOP_STK for 
                            475 ; genCmpEq: left 1, right 1, result 0
   0148 F8 03               476 	lda	hl,3(sp)
   014A 7E                  477 	ld	a,(hl)
   014B FE 04               478 	cp	a,#0x04
   014D CA 5B 01            479 	jp	z,00127$
   0150                     480 00194$:
                            481 ;	genCmpEq
                            482 ;	AOP_STK for 
                            483 ; genCmpEq: left 1, right 1, result 0
   0150 F8 03               484 	lda	hl,3(sp)
   0152 7E                  485 	ld	a,(hl)
   0153 FE 08               486 	cp	a,#0x08
   0155 CA 60 01            487 	jp	z,00129$
   0158                     488 00195$:
                            489 ;	genGoto
   0158 C3 65 01            490 	jp	00131$
                            491 ;	lazer.c 65
                            492 ;	genLabel
   015B                     493 00127$:
                            494 ;	genRet
   015B 1E 04               495 	ld	e,#0x04
   015D C3 71 01            496 	jp	00138$
                            497 ;	lazer.c 68
                            498 ;	genLabel
   0160                     499 00129$:
                            500 ;	genRet
   0160 1E 08               501 	ld	e,#0x08
   0162 C3 71 01            502 	jp	00138$
                            503 ;	lazer.c 70
                            504 ;	genLabel
   0165                     505 00131$:
                            506 ;	genRet
   0165 1E 00               507 	ld	e,#0x00
   0167 C3 71 01            508 	jp	00138$
                            509 ;	lazer.c 74
                            510 ;	genLabel
   016A                     511 00135$:
                            512 ;	genRet
   016A 1E 04               513 	ld	e,#0x04
   016C C3 71 01            514 	jp	00138$
                            515 ;	lazer.c 76
                            516 ;	genLabel
   016F                     517 00137$:
                            518 ;	lazer.c 77
                            519 ;	genRet
   016F 1E 00               520 	ld	e,#0x00
                            521 ;	genLabel
   0171                     522 00138$:
                            523 ;	genEndFunction
                            524 	
   0171 C9                  525 	ret
   0172                     526 ___determine_next_lazer_stat_end:
                            527 ;	lazer.c 80
                            528 ;	genLabel
                            529 ;	genFunction
                            530 ;	---------------------------------
                            531 ; Function determine_next_direction
                            532 ; ---------------------------------
   0172                     533 ___determine_next_direction_start:
   0172                     534 _determine_next_direction:
                            535 	
                            536 ;	lazer.c 81
                            537 ;	genCmpEq
                            538 ;	AOP_STK for 
                            539 ; genCmpEq: left 1, right 1, result 0
   0172 F8 02               540 	lda	hl,2(sp)
   0174 7E                  541 	ld	a,(hl)
   0175 FE 18               542 	cp	a,#0x18
   0177 CA 10 02            543 	jp	z,00119$
   017A                     544 00157$:
                            545 ;	genCmpEq
                            546 ;	AOP_STK for 
                            547 ; genCmpEq: left 1, right 1, result 0
   017A F8 02               548 	lda	hl,2(sp)
   017C 7E                  549 	ld	a,(hl)
   017D FE 28               550 	cp	a,#0x28
   017F CA D4 01            551 	jp	z,00112$
   0182                     552 00158$:
                            553 ;	genCmpEq
                            554 ;	AOP_STK for 
                            555 ; genCmpEq: left 1, right 1, result 0
   0182 F8 02               556 	lda	hl,2(sp)
   0184 7E                  557 	ld	a,(hl)
   0185 FE 48               558 	cp	a,#0x48
   0187 CA CF 01            559 	jp	z,00101$
   018A                     560 00159$:
                            561 ;	genCmpEq
                            562 ;	AOP_STK for 
                            563 ; genCmpEq: left 1, right 1, result 0
   018A F8 02               564 	lda	hl,2(sp)
   018C 7E                  565 	ld	a,(hl)
   018D FE 4C               566 	cp	a,#0x4C
   018F CA CF 01            567 	jp	z,00101$
   0192                     568 00160$:
                            569 ;	genCmpEq
                            570 ;	AOP_STK for 
                            571 ; genCmpEq: left 1, right 1, result 0
   0192 F8 02               572 	lda	hl,2(sp)
   0194 7E                  573 	ld	a,(hl)
   0195 FE 58               574 	cp	a,#0x58
   0197 CA 63 02            575 	jp	z,00125$
   019A                     576 00161$:
                            577 ;	genCmpEq
                            578 ;	AOP_STK for 
                            579 ; genCmpEq: left 1, right 1, result 0
   019A F8 02               580 	lda	hl,2(sp)
   019C 7E                  581 	ld	a,(hl)
   019D FE 60               582 	cp	a,#0x60
   019F CA 91 02            583 	jp	z,00131$
   01A2                     584 00162$:
                            585 ;	genCmpEq
                            586 ;	AOP_STK for 
                            587 ; genCmpEq: left 1, right 1, result 0
   01A2 F8 02               588 	lda	hl,2(sp)
   01A4 7E                  589 	ld	a,(hl)
   01A5 FE 68               590 	cp	a,#0x68
   01A7 CA CF 01            591 	jp	z,00101$
   01AA                     592 00163$:
                            593 ;	genCmpEq
                            594 ;	AOP_STK for 
                            595 ; genCmpEq: left 1, right 1, result 0
   01AA F8 02               596 	lda	hl,2(sp)
   01AC 7E                  597 	ld	a,(hl)
   01AD FE 70               598 	cp	a,#0x70
   01AF CA 4C 02            599 	jp	z,00122$
   01B2                     600 00164$:
                            601 ;	genCmpEq
                            602 ;	AOP_STK for 
                            603 ; genCmpEq: left 1, right 1, result 0
   01B2 F8 02               604 	lda	hl,2(sp)
   01B4 7E                  605 	ld	a,(hl)
   01B5 FE 78               606 	cp	a,#0x78
   01B7 CA 7A 02            607 	jp	z,00128$
   01BA                     608 00165$:
                            609 ;	genCmpEq
                            610 ;	AOP_STK for 
                            611 ; genCmpEq: left 1, right 1, result 0
   01BA F8 02               612 	lda	hl,2(sp)
   01BC 7E                  613 	ld	a,(hl)
   01BD FE 80               614 	cp	a,#0x80
   01BF CA CF 01            615 	jp	z,00101$
   01C2                     616 00166$:
                            617 ;	genCmpEq
                            618 ;	AOP_STK for 
                            619 ; genCmpEq: left 1, right 1, result 0
   01C2 F8 02               620 	lda	hl,2(sp)
   01C4 7E                  621 	ld	a,(hl)
   01C5 FE 84               622 	cp	a,#0x84
   01C7 C2 A8 02            623 	jp	nz,00132$
   01CA 18 03               624 	jr	00168$
   01CC                     625 00167$:
   01CC C3 A8 02            626 	jp	00132$
   01CF                     627 00168$:
                            628 ;	lazer.c 87
                            629 ;	genLabel
   01CF                     630 00101$:
                            631 ;	genRet
   01CF 1E 00               632 	ld	e,#0x00
   01D1 C3 AB 02            633 	jp	00133$
                            634 ;	lazer.c 100
                            635 ;	genLabel
   01D4                     636 00112$:
                            637 ;	lazer.c 89
                            638 ;	genCmpEq
                            639 ;	AOP_STK for 
                            640 ; genCmpEq: left 1, right 1, result 0
   01D4 F8 03               641 	lda	hl,3(sp)
   01D6 7E                  642 	ld	a,(hl)
   01D7 FE 01               643 	cp	a,#0x01
   01D9 CA F7 01            644 	jp	z,00106$
   01DC                     645 00169$:
                            646 ;	genCmpEq
                            647 ;	AOP_STK for 
                            648 ; genCmpEq: left 1, right 1, result 0
   01DC F8 03               649 	lda	hl,3(sp)
   01DE 7E                  650 	ld	a,(hl)
   01DF FE 02               651 	cp	a,#0x02
   01E1 CA FC 01            652 	jp	z,00107$
   01E4                     653 00170$:
                            654 ;	genCmpEq
                            655 ;	AOP_STK for 
                            656 ; genCmpEq: left 1, right 1, result 0
   01E4 F8 03               657 	lda	hl,3(sp)
   01E6 7E                  658 	ld	a,(hl)
   01E7 FE 04               659 	cp	a,#0x04
   01E9 CA 01 02            660 	jp	z,00108$
   01EC                     661 00171$:
                            662 ;	genCmpEq
                            663 ;	AOP_STK for 
                            664 ; genCmpEq: left 1, right 1, result 0
   01EC F8 03               665 	lda	hl,3(sp)
   01EE 7E                  666 	ld	a,(hl)
   01EF FE 08               667 	cp	a,#0x08
   01F1 CA 06 02            668 	jp	z,00109$
   01F4                     669 00172$:
                            670 ;	genGoto
   01F4 C3 0B 02            671 	jp	00110$
                            672 ;	lazer.c 91
                            673 ;	genLabel
   01F7                     674 00106$:
                            675 ;	genRet
   01F7 1E 08               676 	ld	e,#0x08
   01F9 C3 AB 02            677 	jp	00133$
                            678 ;	lazer.c 93
                            679 ;	genLabel
   01FC                     680 00107$:
                            681 ;	genRet
   01FC 1E 04               682 	ld	e,#0x04
   01FE C3 AB 02            683 	jp	00133$
                            684 ;	lazer.c 95
                            685 ;	genLabel
   0201                     686 00108$:
                            687 ;	genRet
   0201 1E 02               688 	ld	e,#0x02
   0203 C3 AB 02            689 	jp	00133$
                            690 ;	lazer.c 97
                            691 ;	genLabel
   0206                     692 00109$:
                            693 ;	genRet
   0206 1E 01               694 	ld	e,#0x01
   0208 C3 AB 02            695 	jp	00133$
                            696 ;	lazer.c 99
                            697 ;	genLabel
   020B                     698 00110$:
                            699 ;	genRet
   020B 1E 00               700 	ld	e,#0x00
   020D C3 AB 02            701 	jp	00133$
                            702 ;	lazer.c 113
                            703 ;	genLabel
   0210                     704 00119$:
                            705 ;	lazer.c 102
                            706 ;	genCmpEq
                            707 ;	AOP_STK for 
                            708 ; genCmpEq: left 1, right 1, result 0
   0210 F8 03               709 	lda	hl,3(sp)
   0212 7E                  710 	ld	a,(hl)
   0213 FE 01               711 	cp	a,#0x01
   0215 CA 33 02            712 	jp	z,00113$
   0218                     713 00173$:
                            714 ;	genCmpEq
                            715 ;	AOP_STK for 
                            716 ; genCmpEq: left 1, right 1, result 0
   0218 F8 03               717 	lda	hl,3(sp)
   021A 7E                  718 	ld	a,(hl)
   021B FE 02               719 	cp	a,#0x02
   021D CA 38 02            720 	jp	z,00114$
   0220                     721 00174$:
                            722 ;	genCmpEq
                            723 ;	AOP_STK for 
                            724 ; genCmpEq: left 1, right 1, result 0
   0220 F8 03               725 	lda	hl,3(sp)
   0222 7E                  726 	ld	a,(hl)
   0223 FE 04               727 	cp	a,#0x04
   0225 CA 3D 02            728 	jp	z,00115$
   0228                     729 00175$:
                            730 ;	genCmpEq
                            731 ;	AOP_STK for 
                            732 ; genCmpEq: left 1, right 1, result 0
   0228 F8 03               733 	lda	hl,3(sp)
   022A 7E                  734 	ld	a,(hl)
   022B FE 08               735 	cp	a,#0x08
   022D CA 42 02            736 	jp	z,00116$
   0230                     737 00176$:
                            738 ;	genGoto
   0230 C3 47 02            739 	jp	00117$
                            740 ;	lazer.c 104
                            741 ;	genLabel
   0233                     742 00113$:
                            743 ;	genRet
   0233 1E 02               744 	ld	e,#0x02
   0235 C3 AB 02            745 	jp	00133$
                            746 ;	lazer.c 106
                            747 ;	genLabel
   0238                     748 00114$:
                            749 ;	genRet
   0238 1E 01               750 	ld	e,#0x01
   023A C3 AB 02            751 	jp	00133$
                            752 ;	lazer.c 108
                            753 ;	genLabel
   023D                     754 00115$:
                            755 ;	genRet
   023D 1E 08               756 	ld	e,#0x08
   023F C3 AB 02            757 	jp	00133$
                            758 ;	lazer.c 110
                            759 ;	genLabel
   0242                     760 00116$:
                            761 ;	genRet
   0242 1E 04               762 	ld	e,#0x04
   0244 C3 AB 02            763 	jp	00133$
                            764 ;	lazer.c 112
                            765 ;	genLabel
   0247                     766 00117$:
                            767 ;	genRet
   0247 1E 00               768 	ld	e,#0x00
   0249 C3 AB 02            769 	jp	00133$
                            770 ;	lazer.c 118
                            771 ;	genLabel
   024C                     772 00122$:
                            773 ;	lazer.c 115
                            774 ;	genCmpEq
                            775 ;	AOP_STK for 
                            776 ; genCmpEq: left 1, right 1, result 0
   024C F8 03               777 	lda	hl,3(sp)
   024E 7E                  778 	ld	a,(hl)
   024F FE 04               779 	cp	a,#0x04
   0251 C2 5E 02            780 	jp	nz,00121$
   0254 18 03               781 	jr	00178$
   0256                     782 00177$:
   0256 C3 5E 02            783 	jp	00121$
   0259                     784 00178$:
                            785 ;	lazer.c 116
                            786 ;	genRet
   0259 1E 0A               787 	ld	e,#0x0A
   025B C3 AB 02            788 	jp	00133$
                            789 ;	genLabel
   025E                     790 00121$:
                            791 ;	lazer.c 118
                            792 ;	genRet
   025E 1E 00               793 	ld	e,#0x00
   0260 C3 AB 02            794 	jp	00133$
                            795 ;	lazer.c 124
                            796 ;	genLabel
   0263                     797 00125$:
                            798 ;	lazer.c 121
                            799 ;	genCmpEq
                            800 ;	AOP_STK for 
                            801 ; genCmpEq: left 1, right 1, result 0
   0263 F8 03               802 	lda	hl,3(sp)
   0265 7E                  803 	ld	a,(hl)
   0266 FE 08               804 	cp	a,#0x08
   0268 C2 75 02            805 	jp	nz,00124$
   026B 18 03               806 	jr	00180$
   026D                     807 00179$:
   026D C3 75 02            808 	jp	00124$
   0270                     809 00180$:
                            810 ;	lazer.c 122
                            811 ;	genRet
   0270 1E 05               812 	ld	e,#0x05
   0272 C3 AB 02            813 	jp	00133$
                            814 ;	genLabel
   0275                     815 00124$:
                            816 ;	lazer.c 124
                            817 ;	genRet
   0275 1E 00               818 	ld	e,#0x00
   0277 C3 AB 02            819 	jp	00133$
                            820 ;	lazer.c 130
                            821 ;	genLabel
   027A                     822 00128$:
                            823 ;	lazer.c 127
                            824 ;	genCmpEq
                            825 ;	AOP_STK for 
                            826 ; genCmpEq: left 1, right 1, result 0
   027A F8 03               827 	lda	hl,3(sp)
   027C 7E                  828 	ld	a,(hl)
   027D FE 02               829 	cp	a,#0x02
   027F C2 8C 02            830 	jp	nz,00127$
   0282 18 03               831 	jr	00182$
   0284                     832 00181$:
   0284 C3 8C 02            833 	jp	00127$
   0287                     834 00182$:
                            835 ;	lazer.c 128
                            836 ;	genRet
   0287 1E 05               837 	ld	e,#0x05
   0289 C3 AB 02            838 	jp	00133$
                            839 ;	genLabel
   028C                     840 00127$:
                            841 ;	lazer.c 130
                            842 ;	genRet
   028C 1E 00               843 	ld	e,#0x00
   028E C3 AB 02            844 	jp	00133$
                            845 ;	lazer.c 136
                            846 ;	genLabel
   0291                     847 00131$:
                            848 ;	lazer.c 133
                            849 ;	genCmpEq
                            850 ;	AOP_STK for 
                            851 ; genCmpEq: left 1, right 1, result 0
   0291 F8 03               852 	lda	hl,3(sp)
   0293 7E                  853 	ld	a,(hl)
   0294 FE 01               854 	cp	a,#0x01
   0296 C2 A3 02            855 	jp	nz,00130$
   0299 18 03               856 	jr	00184$
   029B                     857 00183$:
   029B C3 A3 02            858 	jp	00130$
   029E                     859 00184$:
                            860 ;	lazer.c 134
                            861 ;	genRet
   029E 1E 0A               862 	ld	e,#0x0A
   02A0 C3 AB 02            863 	jp	00133$
                            864 ;	genLabel
   02A3                     865 00130$:
                            866 ;	lazer.c 136
                            867 ;	genRet
   02A3 1E 00               868 	ld	e,#0x00
   02A5 C3 AB 02            869 	jp	00133$
                            870 ;	lazer.c 137
                            871 ;	genLabel
   02A8                     872 00132$:
                            873 ;	lazer.c 138
                            874 ;	genRet
                            875 ;	AOP_STK for 
   02A8 F8 03               876 	lda	hl,3(sp)
   02AA 5E                  877 	ld	e,(hl)
                            878 ;	genLabel
   02AB                     879 00133$:
                            880 ;	genEndFunction
                            881 	
   02AB C9                  882 	ret
   02AC                     883 ___determine_next_direction_end:
                            884 ;	lazer.c 141
                            885 ;	genLabel
                            886 ;	genFunction
                            887 ;	---------------------------------
                            888 ; Function determine_lazer_path
                            889 ; ---------------------------------
   02AC                     890 ___determine_lazer_path_start:
   02AC                     891 _determine_lazer_path:
   02AC E8 F0               892 	lda	sp,-16(sp)
                            893 ;	lazer.c 152
                            894 ;	genCast
                            895 ;	AOP_STK for 
                            896 ;	AOP_STK for _determine_lazer_path_row_1_1
   02AE F8 18               897 	lda	hl,24(sp)
   02B0 7E                  898 	ld	a,(hl)
   02B1 F8 0E               899 	lda	hl,14(sp)
   02B3 22                  900 	ld	(hl+),a
   02B4 36 00               901 	ld	(hl),#0x00
                            902 ;	lazer.c 153
                            903 ;	genCast
                            904 ;	AOP_STK for 
                            905 ;	AOP_STK for _determine_lazer_path_col_1_1
   02B6 F8 17               906 	lda	hl,23(sp)
   02B8 7E                  907 	ld	a,(hl)
   02B9 F8 0C               908 	lda	hl,12(sp)
   02BB 22                  909 	ld	(hl+),a
   02BC 36 00               910 	ld	(hl),#0x00
                            911 ;	lazer.c 155
                            912 ;	genAssign
                            913 ;	AOP_STK for _determine_lazer_path_row_1_1
                            914 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   02BE 23                  915 	inc	hl
   02BF 2A                  916 	ld	a,(hl+)
   02C0 5E                  917 	ld	e,(hl)
   02C1 F8 0A               918 	lda	hl,10(sp)
   02C3 22                  919 	ld	(hl+),a
   02C4 73                  920 	ld	(hl),e
                            921 ;	lazer.c 156
                            922 ;	genAssign
                            923 ;	AOP_STK for _determine_lazer_path_col_1_1
                            924 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   02C5 23                  925 	inc	hl
   02C6 2A                  926 	ld	a,(hl+)
   02C7 5E                  927 	ld	e,(hl)
   02C8 F8 08               928 	lda	hl,8(sp)
   02CA 22                  929 	ld	(hl+),a
   02CB 73                  930 	ld	(hl),e
                            931 ;	lazer.c 158
                            932 ;	genCmpEq
                            933 ;	AOP_STK for 
                            934 ; genCmpEq: left 1, right 1, result 0
   02CC F8 16               935 	lda	hl,22(sp)
   02CE 7E                  936 	ld	a,(hl)
   02CF B7                  937 	or	a,a
   02D0 CA F6 02            938 	jp	z,00101$
   02D3                     939 00148$:
                            940 ;	genCmpEq
                            941 ;	AOP_STK for 
                            942 ; genCmpEq: left 1, right 1, result 0
   02D3 F8 16               943 	lda	hl,22(sp)
   02D5 7E                  944 	ld	a,(hl)
   02D6 FE 01               945 	cp	a,#0x01
   02D8 CA F9 02            946 	jp	z,00104$
   02DB                     947 00149$:
                            948 ;	genCmpEq
                            949 ;	AOP_STK for 
                            950 ; genCmpEq: left 1, right 1, result 0
   02DB F8 16               951 	lda	hl,22(sp)
   02DD 7E                  952 	ld	a,(hl)
   02DE FE 02               953 	cp	a,#0x02
   02E0 CA 14 03            954 	jp	z,00107$
   02E3                     955 00150$:
                            956 ;	genCmpEq
                            957 ;	AOP_STK for 
                            958 ; genCmpEq: left 1, right 1, result 0
   02E3 F8 16               959 	lda	hl,22(sp)
   02E5 7E                  960 	ld	a,(hl)
   02E6 FE 04               961 	cp	a,#0x04
   02E8 CA 34 03            962 	jp	z,00110$
   02EB                     963 00151$:
                            964 ;	genCmpEq
                            965 ;	AOP_STK for 
                            966 ; genCmpEq: left 1, right 1, result 0
   02EB F8 16               967 	lda	hl,22(sp)
   02ED 7E                  968 	ld	a,(hl)
   02EE FE 08               969 	cp	a,#0x08
   02F0 CA 54 03            970 	jp	z,00113$
   02F3                     971 00152$:
                            972 ;	genGoto
   02F3 C3 6F 03            973 	jp	00114$
                            974 ;	lazer.c 159
                            975 ;	genLabel
   02F6                     976 00101$:
                            977 ;	genRet
   02F6 C3 D9 04            978 	jp	00130$
                            979 ;	lazer.c 164
                            980 ;	genLabel
   02F9                     981 00104$:
                            982 ;	lazer.c 161
                            983 ;	genCmpEq
                            984 ;	AOP_STK for _determine_lazer_path_row_1_1
                            985 ; genCmpEq: left 2, right 2, result 0
   02F9 F8 0E               986 	lda	hl,14(sp)
   02FB 2A                  987 	ld	a,(hl+)
   02FC B6                  988 	or	a,(hl)
   02FD CA 72 03            989 	jp	z,00115$
   0300                     990 00153$:
                            991 ;	lazer.c 162
                            992 ;	genMinus
                            993 ;	AOP_STK for _determine_lazer_path_row_1_1
                            994 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   0300 F8 0E               995 	lda	hl,14(sp)
   0302 5E                  996 	ld	e,(hl)
   0303 23                  997 	inc	hl
   0304 56                  998 	ld	d,(hl)
   0305 21 01 00            999 	ld	hl,#0x0001
   0308 7B                 1000 	ld	a,e
   0309 95                 1001 	sub	a,l
   030A 5F                 1002 	ld	e,a
   030B 7A                 1003 	ld	a,d
   030C 9C                 1004 	sbc	a,h
   030D F8 0B              1005 	lda	hl,11(sp)
   030F 32                 1006 	ld      (hl-),a
   0310 73                 1007 	ld	(hl),e
                           1008 ;	lazer.c 164
                           1009 ;	genGoto
   0311 C3 72 03           1010 	jp	00115$
                           1011 ;	lazer.c 169
                           1012 ;	genLabel
   0314                    1013 00107$:
                           1014 ;	lazer.c 166
                           1015 ;	genCmpEq
                           1016 ;	AOP_STK for _determine_lazer_path_col_1_1
                           1017 ; genCmpEq: left 2, right 2, result 0
   0314 F8 0C              1018 	lda	hl,12(sp)
   0316 7E                 1019 	ld	a,(hl)
   0317 FE 08              1020 	cp	a,#0x08
   0319 C2 22 03           1021 	jp	nz,00154$
   031C 23                 1022 	inc	hl
   031D 7E                 1023 	ld	a,(hl)
   031E B7                 1024 	or	a,a
   031F CA 72 03           1025 	jp	z,00115$
   0322                    1026 00154$:
                           1027 ;	lazer.c 167
                           1028 ;	genPlus
                           1029 ;	AOP_STK for _determine_lazer_path_col_1_1
                           1030 ;	AOP_STK for _determine_lazer_path_next_col_1_1
                           1031 ;	genPlusIncr
                           1032 ;	Can't optimise plus by inc, falling back to the normal way
   0322 F8 0C              1033 	lda	hl,12(sp)
   0324 5E                 1034 	ld	e,(hl)
   0325 23                 1035 	inc	hl
   0326 56                 1036 	ld	d,(hl)
   0327 21 01 00           1037 	ld	hl,#0x0001
   032A 19                 1038 	add	hl,de
   032B 7D                 1039 	ld	a,l
   032C 54                 1040 	ld	d,h
   032D F8 08              1041 	lda	hl,8(sp)
   032F 22                 1042 	ld	(hl+),a
   0330 72                 1043 	ld	(hl),d
                           1044 ;	lazer.c 169
                           1045 ;	genGoto
   0331 C3 72 03           1046 	jp	00115$
                           1047 ;	lazer.c 174
                           1048 ;	genLabel
   0334                    1049 00110$:
                           1050 ;	lazer.c 171
                           1051 ;	genCmpEq
                           1052 ;	AOP_STK for _determine_lazer_path_row_1_1
                           1053 ; genCmpEq: left 2, right 2, result 0
   0334 F8 0E              1054 	lda	hl,14(sp)
   0336 7E                 1055 	ld	a,(hl)
   0337 FE 07              1056 	cp	a,#0x07
   0339 C2 42 03           1057 	jp	nz,00155$
   033C 23                 1058 	inc	hl
   033D 7E                 1059 	ld	a,(hl)
   033E B7                 1060 	or	a,a
   033F CA 72 03           1061 	jp	z,00115$
   0342                    1062 00155$:
                           1063 ;	lazer.c 172
                           1064 ;	genPlus
                           1065 ;	AOP_STK for _determine_lazer_path_row_1_1
                           1066 ;	AOP_STK for _determine_lazer_path_next_row_1_1
                           1067 ;	genPlusIncr
                           1068 ;	Can't optimise plus by inc, falling back to the normal way
   0342 F8 0E              1069 	lda	hl,14(sp)
   0344 5E                 1070 	ld	e,(hl)
   0345 23                 1071 	inc	hl
   0346 56                 1072 	ld	d,(hl)
   0347 21 01 00           1073 	ld	hl,#0x0001
   034A 19                 1074 	add	hl,de
   034B 7D                 1075 	ld	a,l
   034C 54                 1076 	ld	d,h
   034D F8 0A              1077 	lda	hl,10(sp)
   034F 22                 1078 	ld	(hl+),a
   0350 72                 1079 	ld	(hl),d
                           1080 ;	lazer.c 174
                           1081 ;	genGoto
   0351 C3 72 03           1082 	jp	00115$
                           1083 ;	lazer.c 179
                           1084 ;	genLabel
   0354                    1085 00113$:
                           1086 ;	lazer.c 176
                           1087 ;	genCmpEq
                           1088 ;	AOP_STK for _determine_lazer_path_col_1_1
                           1089 ; genCmpEq: left 2, right 2, result 0
   0354 F8 0C              1090 	lda	hl,12(sp)
   0356 2A                 1091 	ld	a,(hl+)
   0357 B6                 1092 	or	a,(hl)
   0358 CA 72 03           1093 	jp	z,00115$
   035B                    1094 00156$:
                           1095 ;	lazer.c 177
                           1096 ;	genMinus
                           1097 ;	AOP_STK for _determine_lazer_path_col_1_1
                           1098 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   035B F8 0C              1099 	lda	hl,12(sp)
   035D 5E                 1100 	ld	e,(hl)
   035E 23                 1101 	inc	hl
   035F 56                 1102 	ld	d,(hl)
   0360 21 01 00           1103 	ld	hl,#0x0001
   0363 7B                 1104 	ld	a,e
   0364 95                 1105 	sub	a,l
   0365 5F                 1106 	ld	e,a
   0366 7A                 1107 	ld	a,d
   0367 9C                 1108 	sbc	a,h
   0368 F8 09              1109 	lda	hl,9(sp)
   036A 32                 1110 	ld      (hl-),a
   036B 73                 1111 	ld	(hl),e
                           1112 ;	lazer.c 179
                           1113 ;	genGoto
   036C C3 72 03           1114 	jp	00115$
                           1115 ;	lazer.c 181
                           1116 ;	genLabel
   036F                    1117 00114$:
                           1118 ;	genRet
   036F C3 D9 04           1119 	jp	00130$
                           1120 ;	lazer.c 182
                           1121 ;	genLabel
   0372                    1122 00115$:
                           1123 ;	lazer.c 185
                           1124 ;	genCmpEq
                           1125 ;	AOP_STK for _determine_lazer_path_next_row_1_1
                           1126 ;	AOP_STK for _determine_lazer_path_row_1_1
                           1127 ; genCmpEq: left 2, right 2, result 0
   0372 F8 0E              1128 	lda	hl,14(sp)
   0374 7E                 1129 	ld	a,(hl)
   0375 F8 0A              1130 	lda	hl,10(sp)
   0377 BE                 1131 	cp	(hl)
   0378 20 0A              1132 	jr	nz,00157$
   037A F8 0F              1133 	lda	hl,15(sp)
   037C 7E                 1134 	ld	a,(hl)
   037D F8 0B              1135 	lda	hl,11(sp)
   037F BE                 1136 	cp	(hl)
   0380 20 02              1137 	jr	nz,00157$
   0382 18 03              1138 	jr	00158$
   0384                    1139 00157$:
   0384 C3 9F 03           1140 	jp	00117$
   0387                    1141 00158$:
                           1142 ;	genCmpEq
                           1143 ;	AOP_STK for _determine_lazer_path_next_col_1_1
                           1144 ;	AOP_STK for _determine_lazer_path_col_1_1
                           1145 ; genCmpEq: left 2, right 2, result 0
   0387 F8 0C              1146 	lda	hl,12(sp)
   0389 7E                 1147 	ld	a,(hl)
   038A F8 08              1148 	lda	hl,8(sp)
   038C BE                 1149 	cp	(hl)
   038D 20 0A              1150 	jr	nz,00159$
   038F F8 0D              1151 	lda	hl,13(sp)
   0391 7E                 1152 	ld	a,(hl)
   0392 F8 09              1153 	lda	hl,9(sp)
   0394 BE                 1154 	cp	(hl)
   0395 20 02              1155 	jr	nz,00159$
   0397 18 03              1156 	jr	00160$
   0399                    1157 00159$:
   0399 C3 9F 03           1158 	jp	00117$
   039C                    1159 00160$:
                           1160 ;	lazer.c 186
                           1161 ;	genRet
   039C C3 D9 04           1162 	jp	00130$
                           1163 ;	genLabel
   039F                    1164 00117$:
                           1165 ;	lazer.c 189
                           1166 ;	genIpush
                           1167 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1168 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   039F F8 08              1169 	lda	hl,8(sp)
   03A1 2A                 1170 	ld	a,(hl+)
   03A2 66                 1171 	ld	h,(hl)
   03A3 6F                 1172 	ld	l,a
   03A4 E5                 1173 	push	hl
                           1174 ;	genIpush
                           1175 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   03A5 F8 0C              1176 	lda	hl,12(sp)
   03A7 2A                 1177 	ld	a,(hl+)
   03A8 66                 1178 	ld	h,(hl)
   03A9 6F                 1179 	ld	l,a
   03AA E5                 1180 	push	hl
                           1181 ;	genCall
   03AB CD 00 00           1182 	call	_row_col_to_cel
                           1183 ;	AOP_STK for _determine_lazer_path_next_cell_1_1
   03AE F8 0B              1184 	lda	hl,11(sp)
   03B0 72                 1185 	ld	(hl),d
   03B1 2B                 1186 	dec	hl
   03B2 73                 1187 	ld	(hl),e
   03B3 E8 04              1188 	lda	sp,4(sp)
                           1189 ;	genAssign
                           1190 ;	AOP_STK for _determine_lazer_path_next_cell_1_1
                           1191 ;	(registers are the same)
                           1192 ;	lazer.c 191
                           1193 ;	genPlus
                           1194 ;	AOP_STK for 
                           1195 ;	AOP_STK for _determine_lazer_path_next_cell_1_1
                           1196 ;	Can't optimise plus by inc, falling back to the normal way
   03B5 F8 12              1197 	lda	hl,18(sp)
   03B7 5E                 1198 	ld	e,(hl)
   03B8 23                 1199 	inc	hl
   03B9 56                 1200 	ld	d,(hl)
   03BA F8 06              1201 	lda	hl,6(sp)
   03BC 2A                 1202 	ld	a,(hl+)
   03BD 66                 1203 	ld	h,(hl)
   03BE 6F                 1204 	ld	l,a
   03BF 19                 1205 	add	hl,de
   03C0 4D                 1206 	ld	c,l
   03C1 44                 1207 	ld	b,h
                           1208 ;	genPointerGet
   03C2 0A                 1209 	ld	a,(bc)
   03C3 4F                 1210 	ld	c,a
                           1211 ;	genAssign
                           1212 ;	AOP_STK for _determine_lazer_path_next_object_1_1
   03C4 F8 04              1213 	lda	hl,4(sp)
   03C6 71                 1214 	ld	(hl),c
                           1215 ;	lazer.c 192
                           1216 ;	genIpush
                           1217 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1218 ;	AOP_STK for 
   03C7 F8 16              1219 	lda	hl,22(sp)
   03C9 7E                 1220 	ld	a,(hl)
   03CA F5                 1221 	push	af
   03CB 33                 1222 	inc	sp
                           1223 ;	genIpush
                           1224 ;	AOP_STK for _determine_lazer_path_next_object_1_1
   03CC F8 05              1225 	lda	hl,5(sp)
   03CE 7E                 1226 	ld	a,(hl)
   03CF F5                 1227 	push	af
   03D0 33                 1228 	inc	sp
                           1229 ;	genCall
   03D1 CD 72 01           1230 	call	_determine_next_direction
   03D4 43                 1231 	ld	b,e
   03D5 E8 02              1232 	lda	sp,2(sp)
                           1233 ;	genAssign
                           1234 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   03D7 F8 05              1235 	lda	hl,5(sp)
   03D9 70                 1236 	ld	(hl),b
                           1237 ;	lazer.c 195
                           1238 ;	genPlus
                           1239 ;	AOP_STK for 
                           1240 ;	AOP_STK for _determine_lazer_path_next_cell_1_1
                           1241 ;	AOP_STK for _determine_lazer_path_sloc0_1_0
                           1242 ;	Can't optimise plus by inc, falling back to the normal way
   03DA F8 14              1243 	lda	hl,20(sp)
   03DC 5E                 1244 	ld	e,(hl)
   03DD 23                 1245 	inc	hl
   03DE 56                 1246 	ld	d,(hl)
   03DF F8 06              1247 	lda	hl,6(sp)
   03E1 2A                 1248 	ld	a,(hl+)
   03E2 66                 1249 	ld	h,(hl)
   03E3 6F                 1250 	ld	l,a
   03E4 19                 1251 	add	hl,de
   03E5 7D                 1252 	ld	a,l
   03E6 54                 1253 	ld	d,h
   03E7 F8 00              1254 	lda	hl,0(sp)
                           1255 ;	genPointerGet
                           1256 ;	AOP_STK for _determine_lazer_path_sloc0_1_0
                           1257 ;	AOP_STK for _determine_lazer_path_curr_lazer_state_1_1
   03E9 22                 1258 	ld	(hl+),a
   03EA 72                 1259 	ld	(hl),d
   03EB 5F                 1260 	ld	e,a
   03EC 1A                 1261 	ld	a,(de)
   03ED 23                 1262 	inc	hl
   03EE 77                 1263 	ld	(hl),a
                           1264 ;	genAssign
                           1265 ;	AOP_STK for _determine_lazer_path_curr_lazer_state_1_1
                           1266 ;	(registers are the same)
                           1267 ;	lazer.c 198
                           1268 ;	genIpush
                           1269 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1270 ;	AOP_STK for 
   03EF F8 16              1271 	lda	hl,22(sp)
   03F1 7E                 1272 	ld	a,(hl)
   03F2 F5                 1273 	push	af
   03F3 33                 1274 	inc	sp
                           1275 ;	genIpush
                           1276 ;	AOP_STK for _determine_lazer_path_next_object_1_1
   03F4 F8 05              1277 	lda	hl,5(sp)
   03F6 7E                 1278 	ld	a,(hl)
   03F7 F5                 1279 	push	af
   03F8 33                 1280 	inc	sp
                           1281 ;	genCall
   03F9 CD 23 00           1282 	call	_determine_next_lazer_stat
                           1283 ;	AOP_STK for _determine_lazer_path_next_lazer_state_1_1
   03FC F8 05              1284 	lda	hl,5(sp)
   03FE 73                 1285 	ld	(hl),e
   03FF E8 02              1286 	lda	sp,2(sp)
                           1287 ;	genAssign
                           1288 ;	AOP_STK for _determine_lazer_path_next_lazer_state_1_1
   0401 F8 03              1289 	lda	hl,3(sp)
   0403 4E                 1290 	ld	c,(hl)
                           1291 ;	lazer.c 199
                           1292 ;	genPointerGet
                           1293 ;	AOP_STK for _determine_lazer_path_sloc0_1_0
   0404 F8 00              1294 	lda	hl,0(sp)
   0406 5E                 1295 	ld	e,(hl)
   0407 23                 1296 	inc	hl
   0408 56                 1297 	ld	d,(hl)
   0409 1A                 1298 	ld	a,(de)
                           1299 ;	genOr
   040A 47                 1300 	ld	b,a
   040B B1                 1301 	or	a,c
                           1302 ;	genAssign (pointer)
                           1303 ;	AOP_STK for _determine_lazer_path_sloc0_1_0
   040C 2B                 1304 	dec	hl
   040D 5E                 1305 	ld	e,(hl)
   040E 23                 1306 	inc	hl
   040F 56                 1307 	ld	d,(hl)
   0410 12                 1308 	ld	(de),a
                           1309 ;	lazer.c 202
                           1310 ;	genCmpEq
                           1311 ; genCmpEq: left 1, right 1, result 0
   0411 79                 1312 	ld	a,c
   0412 B7                 1313 	or	a,a
   0413 CA 2A 04           1314 	jp	z,00119$
   0416                    1315 00161$:
                           1316 ;	genCmpEq
                           1317 ;	AOP_STK for _determine_lazer_path_curr_lazer_state_1_1
                           1318 ; genCmpEq: left 1, right 1, result 1
   0416 F8 02              1319 	lda	hl,2(sp)
   0418 7E                 1320 	ld	a,(hl)
   0419 B9                 1321 	cp	c
   041A 20 04              1322 	jr	nz,00162$
   041C 3E 01              1323 	ld	a,#0x01
   041E 18 01              1324 	jr	00163$
   0420                    1325 00162$:
   0420 AF                 1326 	xor	a,a
   0421                    1327 00163$:
   0421 4F                 1328 	ld	c,a
                           1329 ;	genAnd
                           1330 ;	AOP_STK for _determine_lazer_path_curr_lazer_state_1_1
   0422 F8 02              1331 	lda	hl,2(sp)
   0424 7E                 1332 	ld	a,(hl)
   0425 A1                 1333 	and	a,c
                           1334 ;	genIfx
   0426 B7                 1335 	or	a,a
   0427 CA 2D 04           1336 	jp	z,00120$
                           1337 ;	genLabel
   042A                    1338 00119$:
                           1339 ;	lazer.c 203
                           1340 ;	genRet
   042A C3 D9 04           1341 	jp	00130$
                           1342 ;	genLabel
   042D                    1343 00120$:
                           1344 ;	lazer.c 208
                           1345 ;	genAnd
                           1346 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   042D F8 05              1347 	lda	hl,5(sp)
   042F 7E                 1348 	ld	a,(hl)
   0430 E6 01              1349 	and	a,#0x01
                           1350 ;	genCmpEq
                           1351 ; genCmpEq: left 1, right 1, result 0
   0432 4F                 1352 	ld	c,a
   0433 B7                 1353 	or	a,a
   0434 CA 58 04           1354 	jp	z,00123$
   0437                    1355 00164$:
                           1356 ;	lazer.c 209
                           1357 ;	genCast
                           1358 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   0437 F8 0A              1359 	lda	hl,10(sp)
   0439 4E                 1360 	ld	c,(hl)
                           1361 ;	genCast
                           1362 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   043A 2B                 1363 	dec	hl
   043B 2B                 1364 	dec	hl
   043C 46                 1365 	ld	b,(hl)
                           1366 ;	genIpush
                           1367 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   043D 79                 1368 	ld	a,c
   043E F5                 1369 	push	af
   043F 33                 1370 	inc	sp
                           1371 ;	genIpush
   0440 78                 1372 	ld	a,b
   0441 F5                 1373 	push	af
   0442 33                 1374 	inc	sp
                           1375 ;	genIpush
   0443 3E 01              1376 	ld	a,#0x01
   0445 F5                 1377 	push	af
   0446 33                 1378 	inc	sp
                           1379 ;	genIpush
                           1380 ;	AOP_STK for 
   0447 F8 17              1381 	lda	hl,23(sp)
   0449 2A                 1382 	ld	a,(hl+)
   044A 66                 1383 	ld	h,(hl)
   044B 6F                 1384 	ld	l,a
   044C E5                 1385 	push	hl
                           1386 ;	genIpush
                           1387 ;	AOP_STK for 
   044D F8 17              1388 	lda	hl,23(sp)
   044F 2A                 1389 	ld	a,(hl+)
   0450 66                 1390 	ld	h,(hl)
   0451 6F                 1391 	ld	l,a
   0452 E5                 1392 	push	hl
                           1393 ;	genCall
   0453 CD AC 02           1394 	call	_determine_lazer_path
   0456 E8 07              1395 	lda	sp,7(sp)
                           1396 ;	genLabel
   0458                    1397 00123$:
                           1398 ;	lazer.c 212
                           1399 ;	genAnd
                           1400 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   0458 F8 05              1401 	lda	hl,5(sp)
   045A 7E                 1402 	ld	a,(hl)
   045B E6 02              1403 	and	a,#0x02
                           1404 ;	genCmpEq
                           1405 ; genCmpEq: left 1, right 1, result 0
   045D 4F                 1406 	ld	c,a
   045E B7                 1407 	or	a,a
   045F CA 83 04           1408 	jp	z,00125$
   0462                    1409 00165$:
                           1410 ;	lazer.c 213
                           1411 ;	genCast
                           1412 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   0462 F8 0A              1413 	lda	hl,10(sp)
   0464 4E                 1414 	ld	c,(hl)
                           1415 ;	genCast
                           1416 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   0465 2B                 1417 	dec	hl
   0466 2B                 1418 	dec	hl
   0467 46                 1419 	ld	b,(hl)
                           1420 ;	genIpush
                           1421 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0468 79                 1422 	ld	a,c
   0469 F5                 1423 	push	af
   046A 33                 1424 	inc	sp
                           1425 ;	genIpush
   046B 78                 1426 	ld	a,b
   046C F5                 1427 	push	af
   046D 33                 1428 	inc	sp
                           1429 ;	genIpush
   046E 3E 02              1430 	ld	a,#0x02
   0470 F5                 1431 	push	af
   0471 33                 1432 	inc	sp
                           1433 ;	genIpush
                           1434 ;	AOP_STK for 
   0472 F8 17              1435 	lda	hl,23(sp)
   0474 2A                 1436 	ld	a,(hl+)
   0475 66                 1437 	ld	h,(hl)
   0476 6F                 1438 	ld	l,a
   0477 E5                 1439 	push	hl
                           1440 ;	genIpush
                           1441 ;	AOP_STK for 
   0478 F8 17              1442 	lda	hl,23(sp)
   047A 2A                 1443 	ld	a,(hl+)
   047B 66                 1444 	ld	h,(hl)
   047C 6F                 1445 	ld	l,a
   047D E5                 1446 	push	hl
                           1447 ;	genCall
   047E CD AC 02           1448 	call	_determine_lazer_path
   0481 E8 07              1449 	lda	sp,7(sp)
                           1450 ;	genLabel
   0483                    1451 00125$:
                           1452 ;	lazer.c 216
                           1453 ;	genAnd
                           1454 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   0483 F8 05              1455 	lda	hl,5(sp)
   0485 7E                 1456 	ld	a,(hl)
   0486 E6 04              1457 	and	a,#0x04
                           1458 ;	genCmpEq
                           1459 ; genCmpEq: left 1, right 1, result 0
   0488 4F                 1460 	ld	c,a
   0489 B7                 1461 	or	a,a
   048A CA AE 04           1462 	jp	z,00127$
   048D                    1463 00166$:
                           1464 ;	lazer.c 217
                           1465 ;	genCast
                           1466 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   048D F8 0A              1467 	lda	hl,10(sp)
   048F 4E                 1468 	ld	c,(hl)
                           1469 ;	genCast
                           1470 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   0490 2B                 1471 	dec	hl
   0491 2B                 1472 	dec	hl
   0492 46                 1473 	ld	b,(hl)
                           1474 ;	genIpush
                           1475 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0493 79                 1476 	ld	a,c
   0494 F5                 1477 	push	af
   0495 33                 1478 	inc	sp
                           1479 ;	genIpush
   0496 78                 1480 	ld	a,b
   0497 F5                 1481 	push	af
   0498 33                 1482 	inc	sp
                           1483 ;	genIpush
   0499 3E 04              1484 	ld	a,#0x04
   049B F5                 1485 	push	af
   049C 33                 1486 	inc	sp
                           1487 ;	genIpush
                           1488 ;	AOP_STK for 
   049D F8 17              1489 	lda	hl,23(sp)
   049F 2A                 1490 	ld	a,(hl+)
   04A0 66                 1491 	ld	h,(hl)
   04A1 6F                 1492 	ld	l,a
   04A2 E5                 1493 	push	hl
                           1494 ;	genIpush
                           1495 ;	AOP_STK for 
   04A3 F8 17              1496 	lda	hl,23(sp)
   04A5 2A                 1497 	ld	a,(hl+)
   04A6 66                 1498 	ld	h,(hl)
   04A7 6F                 1499 	ld	l,a
   04A8 E5                 1500 	push	hl
                           1501 ;	genCall
   04A9 CD AC 02           1502 	call	_determine_lazer_path
   04AC E8 07              1503 	lda	sp,7(sp)
                           1504 ;	genLabel
   04AE                    1505 00127$:
                           1506 ;	lazer.c 220
                           1507 ;	genAnd
                           1508 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   04AE F8 05              1509 	lda	hl,5(sp)
   04B0 7E                 1510 	ld	a,(hl)
   04B1 E6 08              1511 	and	a,#0x08
                           1512 ;	genCmpEq
                           1513 ; genCmpEq: left 1, right 1, result 0
   04B3 4F                 1514 	ld	c,a
   04B4 B7                 1515 	or	a,a
   04B5 CA D9 04           1516 	jp	z,00130$
   04B8                    1517 00167$:
                           1518 ;	lazer.c 221
                           1519 ;	genCast
                           1520 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   04B8 F8 0A              1521 	lda	hl,10(sp)
   04BA 4E                 1522 	ld	c,(hl)
                           1523 ;	genCast
                           1524 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   04BB 2B                 1525 	dec	hl
   04BC 2B                 1526 	dec	hl
   04BD 46                 1527 	ld	b,(hl)
                           1528 ;	genIpush
                           1529 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04BE 79                 1530 	ld	a,c
   04BF F5                 1531 	push	af
   04C0 33                 1532 	inc	sp
                           1533 ;	genIpush
   04C1 78                 1534 	ld	a,b
   04C2 F5                 1535 	push	af
   04C3 33                 1536 	inc	sp
                           1537 ;	genIpush
   04C4 3E 08              1538 	ld	a,#0x08
   04C6 F5                 1539 	push	af
   04C7 33                 1540 	inc	sp
                           1541 ;	genIpush
                           1542 ;	AOP_STK for 
   04C8 F8 17              1543 	lda	hl,23(sp)
   04CA 2A                 1544 	ld	a,(hl+)
   04CB 66                 1545 	ld	h,(hl)
   04CC 6F                 1546 	ld	l,a
   04CD E5                 1547 	push	hl
                           1548 ;	genIpush
                           1549 ;	AOP_STK for 
   04CE F8 17              1550 	lda	hl,23(sp)
   04D0 2A                 1551 	ld	a,(hl+)
   04D1 66                 1552 	ld	h,(hl)
   04D2 6F                 1553 	ld	l,a
   04D3 E5                 1554 	push	hl
                           1555 ;	genCall
   04D4 CD AC 02           1556 	call	_determine_lazer_path
   04D7 E8 07              1557 	lda	sp,7(sp)
                           1558 ;	genLabel
   04D9                    1559 00130$:
                           1560 ;	genEndFunction
   04D9 E8 10              1561 	lda	sp,16(sp)
   04DB C9                 1562 	ret
   04DC                    1563 ___determine_lazer_path_end:
                           1564 ;	lazer.c 225
                           1565 ;	genLabel
                           1566 ;	genFunction
                           1567 ;	---------------------------------
                           1568 ; Function project_lazer
                           1569 ; ---------------------------------
   04DC                    1570 ___project_lazer_start:
   04DC                    1571 _project_lazer:
   04DC E8 FB              1572 	lda	sp,-5(sp)
                           1573 ;	lazer.c 234
                           1574 ;	genAssign
                           1575 ;	AOP_STK for _project_lazer_startIdx_1_1
   04DE F8 03              1576 	lda	hl,3(sp)
   04E0 36 00              1577 	ld	(hl),#0x00
   04E2 23                 1578 	inc	hl
   04E3 36 00              1579 	ld	(hl),#0x00
                           1580 ;	genLabel
   04E5                    1581 00107$:
                           1582 ;	lazer.c 235
                           1583 ;	genCmpEq
                           1584 ;	AOP_STK for _project_lazer_startIdx_1_1
                           1585 ; genCmpEq: left 2, right 2, result 0
   04E5 F8 03              1586 	lda	hl,3(sp)
   04E7 7E                 1587 	ld	a,(hl)
   04E8 FE 48              1588 	cp	a,#0x48
   04EA C2 F3 04           1589 	jp	nz,00118$
   04ED 23                 1590 	inc	hl
   04EE 7E                 1591 	ld	a,(hl)
   04EF B7                 1592 	or	a,a
   04F0 CA 15 05           1593 	jp	z,00110$
   04F3                    1594 00118$:
                           1595 ;	lazer.c 236
                           1596 ;	genPlus
                           1597 ;	AOP_STK for 
                           1598 ;	AOP_STK for _project_lazer_startIdx_1_1
                           1599 ;	AOP_STK for _project_lazer_sloc0_1_0
                           1600 ;	Can't optimise plus by inc, falling back to the normal way
   04F3 F8 09              1601 	lda	hl,9(sp)
   04F5 5E                 1602 	ld	e,(hl)
   04F6 23                 1603 	inc	hl
   04F7 56                 1604 	ld	d,(hl)
   04F8 F8 03              1605 	lda	hl,3(sp)
   04FA 2A                 1606 	ld	a,(hl+)
   04FB 66                 1607 	ld	h,(hl)
   04FC 6F                 1608 	ld	l,a
   04FD 19                 1609 	add	hl,de
   04FE 7D                 1610 	ld	a,l
   04FF 54                 1611 	ld	d,h
   0500 F8 00              1612 	lda	hl,0(sp)
   0502 22                 1613 	ld	(hl+),a
   0503 72                 1614 	ld	(hl),d
                           1615 ;	genAssign (pointer)
                           1616 ;	AOP_STK for _project_lazer_sloc0_1_0
   0504 2B                 1617 	dec	hl
   0505 5E                 1618 	ld	e,(hl)
   0506 23                 1619 	inc	hl
   0507 56                 1620 	ld	d,(hl)
   0508 3E 00              1621 	ld	a,#0x00
   050A 12                 1622 	ld	(de),a
                           1623 ;	lazer.c 235
                           1624 ;	genPlus
                           1625 ;	AOP_STK for _project_lazer_startIdx_1_1
                           1626 ;	genPlusIncr
   050B 23                 1627 	inc	hl
   050C 23                 1628 	inc	hl
   050D 34                 1629 	inc	(hl)
   050E 20 02              1630 	jr	nz,00119$
   0510 23                 1631 	inc	hl
   0511 34                 1632 	inc	(hl)
   0512                    1633 00119$:
                           1634 ;	genGoto
   0512 C3 E5 04           1635 	jp	00107$
                           1636 ;	genLabel
   0515                    1637 00110$:
                           1638 ;	lazer.c 243
                           1639 ;	genAssign
                           1640 ;	AOP_STK for _project_lazer_startIdx_1_1
   0515 F8 03              1641 	lda	hl,3(sp)
   0517 36 00              1642 	ld	(hl),#0x00
   0519 23                 1643 	inc	hl
   051A 36 00              1644 	ld	(hl),#0x00
                           1645 ;	genLabel
   051C                    1646 00103$:
                           1647 ;	lazer.c 244
                           1648 ;	genCmpEq
                           1649 ;	AOP_STK for _project_lazer_startIdx_1_1
                           1650 ; genCmpEq: left 2, right 2, result 0
   051C F8 03              1651 	lda	hl,3(sp)
   051E 7E                 1652 	ld	a,(hl)
   051F FE 48              1653 	cp	a,#0x48
   0521 C2 2A 05           1654 	jp	nz,00120$
   0524 23                 1655 	inc	hl
   0525 7E                 1656 	ld	a,(hl)
   0526 B7                 1657 	or	a,a
   0527 CA 4D 05           1658 	jp	z,00106$
   052A                    1659 00120$:
                           1660 ;	lazer.c 245
                           1661 ;	genPlus
                           1662 ;	AOP_STK for 
                           1663 ;	AOP_STK for _project_lazer_startIdx_1_1
                           1664 ;	AOP_STK for _project_lazer_sloc0_1_0
                           1665 ;	Can't optimise plus by inc, falling back to the normal way
   052A F8 07              1666 	lda	hl,7(sp)
   052C 5E                 1667 	ld	e,(hl)
   052D 23                 1668 	inc	hl
   052E 56                 1669 	ld	d,(hl)
   052F F8 03              1670 	lda	hl,3(sp)
   0531 2A                 1671 	ld	a,(hl+)
   0532 66                 1672 	ld	h,(hl)
   0533 6F                 1673 	ld	l,a
   0534 19                 1674 	add	hl,de
   0535 7D                 1675 	ld	a,l
   0536 54                 1676 	ld	d,h
   0537 F8 00              1677 	lda	hl,0(sp)
                           1678 ;	genPointerGet
                           1679 ;	AOP_STK for _project_lazer_sloc0_1_0
   0539 22                 1680 	ld	(hl+),a
   053A 72                 1681 	ld	(hl),d
   053B 5F                 1682 	ld	e,a
   053C 1A                 1683 	ld	a,(de)
                           1684 ;	genCmpEq
                           1685 ; genCmpEq: left 1, right 1, result 0
   053D 4F                 1686 	ld	c,a
   053E FE 80              1687 	cp	a,#0x80
   0540 CA 4D 05           1688 	jp	z,00106$
   0543                    1689 00121$:
                           1690 ;	lazer.c 244
                           1691 ;	genPlus
                           1692 ;	AOP_STK for _project_lazer_startIdx_1_1
                           1693 ;	genPlusIncr
   0543 F8 03              1694 	lda	hl,3(sp)
   0545 34                 1695 	inc	(hl)
   0546 20 02              1696 	jr	nz,00122$
   0548 23                 1697 	inc	hl
   0549 34                 1698 	inc	(hl)
   054A                    1699 00122$:
                           1700 ;	genGoto
   054A C3 1C 05           1701 	jp	00103$
                           1702 ;	genLabel
   054D                    1703 00106$:
                           1704 ;	lazer.c 250
                           1705 ;	genIpush
                           1706 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054D 21 09 00           1707 	ld	hl,#0x0009
   0550 E5                 1708 	push	hl
                           1709 ;	genIpush
                           1710 ;	AOP_STK for _project_lazer_startIdx_1_1
   0551 F8 05              1711 	lda	hl,5(sp)
   0553 2A                 1712 	ld	a,(hl+)
   0554 66                 1713 	ld	h,(hl)
   0555 6F                 1714 	ld	l,a
   0556 E5                 1715 	push	hl
                           1716 ;	genCall
   0557 CD 00 00           1717 	call	__moduint_rrx_s
   055A 42                 1718 	ld	b,d
   055B 4B                 1719 	ld	c,e
   055C E8 04              1720 	lda	sp,4(sp)
                           1721 ;	genCast
                           1722 ;	AOP_STK for _project_lazer_x_1_1
   055E F8 02              1723 	lda	hl,2(sp)
   0560 71                 1724 	ld	(hl),c
                           1725 ;	lazer.c 251
                           1726 ;	genIpush
                           1727 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0561 21 09 00           1728 	ld	hl,#0x0009
   0564 E5                 1729 	push	hl
                           1730 ;	genIpush
                           1731 ;	AOP_STK for _project_lazer_startIdx_1_1
   0565 F8 05              1732 	lda	hl,5(sp)
   0567 2A                 1733 	ld	a,(hl+)
   0568 66                 1734 	ld	h,(hl)
   0569 6F                 1735 	ld	l,a
   056A E5                 1736 	push	hl
                           1737 ;	genCall
   056B CD 00 00           1738 	call	__divuint_rrx_s
   056E 4A                 1739 	ld	c,d
   056F 43                 1740 	ld	b,e
   0570 E8 04              1741 	lda	sp,4(sp)
                           1742 ;	genCast
                           1743 ; Removed redundent load
                           1744 ;	lazer.c 258
                           1745 ;	genIpush
                           1746 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0572 78                 1747 	ld	a,b
   0573 F5                 1748 	push	af
   0574 33                 1749 	inc	sp
                           1750 ;	genIpush
                           1751 ;	AOP_STK for _project_lazer_x_1_1
   0575 F8 03              1752 	lda	hl,3(sp)
   0577 7E                 1753 	ld	a,(hl)
   0578 F5                 1754 	push	af
   0579 33                 1755 	inc	sp
                           1756 ;	genIpush
   057A 3E 01              1757 	ld	a,#0x01
   057C F5                 1758 	push	af
   057D 33                 1759 	inc	sp
                           1760 ;	genIpush
                           1761 ;	AOP_STK for 
   057E F8 0C              1762 	lda	hl,12(sp)
   0580 2A                 1763 	ld	a,(hl+)
   0581 66                 1764 	ld	h,(hl)
   0582 6F                 1765 	ld	l,a
   0583 E5                 1766 	push	hl
                           1767 ;	genIpush
                           1768 ;	AOP_STK for 
   0584 F8 0C              1769 	lda	hl,12(sp)
   0586 2A                 1770 	ld	a,(hl+)
   0587 66                 1771 	ld	h,(hl)
   0588 6F                 1772 	ld	l,a
   0589 E5                 1773 	push	hl
                           1774 ;	genCall
   058A CD AC 02           1775 	call	_determine_lazer_path
   058D E8 07              1776 	lda	sp,7(sp)
                           1777 ;	genLabel
   058F                    1778 00111$:
                           1779 ;	genEndFunction
   058F E8 05              1780 	lda	sp,5(sp)
   0591 C9                 1781 	ret
   0592                    1782 ___project_lazer_end:
                           1783 ;	background.c 10
                           1784 ;	genLabel
                           1785 ;	genFunction
                           1786 ;	---------------------------------
                           1787 ; Function init_background
                           1788 ; ---------------------------------
   0592                    1789 ___init_background_start:
   0592                    1790 _init_background:
   0592 E8 FB              1791 	lda	sp,-5(sp)
                           1792 ;	background.c 13
                           1793 ;	genAssign
                           1794 ;	AOP_STK for _init_background_i_1_1
   0594 F8 04              1795 	lda	hl,4(sp)
   0596 36 00              1796 	ld	(hl),#0x00
                           1797 ;	genLabel
   0598                    1798 00101$:
                           1799 ;	genCmpEq
                           1800 ;	AOP_STK for _init_background_i_1_1
                           1801 ; genCmpEq: left 1, right 1, result 0
   0598 F8 04              1802 	lda	hl,4(sp)
   059A 7E                 1803 	ld	a,(hl)
   059B FE 48              1804 	cp	a,#0x48
   059D CA BB 05           1805 	jp	z,00104$
   05A0                    1806 00121$:
                           1807 ;	background.c 14
                           1808 ;	genPlus
                           1809 ;	AOP_STK for _init_background_i_1_1
                           1810 ;	AOP_STK for _init_background_sloc0_1_0
                           1811 ;	Can't optimise plus by inc, falling back to the normal way
   05A0 11 B1 01           1812 	ld	de,#_lazer_map
   05A3 F8 04              1813 	lda	hl,4(sp)
   05A5 6E                 1814 	ld	l,(hl)
   05A6 26 00              1815 	ld	h,#0x00
   05A8 19                 1816 	add	hl,de
   05A9 7D                 1817 	ld	a,l
   05AA 54                 1818 	ld	d,h
   05AB F8 02              1819 	lda	hl,2(sp)
   05AD 22                 1820 	ld	(hl+),a
   05AE 72                 1821 	ld	(hl),d
                           1822 ;	genAssign (pointer)
                           1823 ;	AOP_STK for _init_background_sloc0_1_0
   05AF 2B                 1824 	dec	hl
   05B0 5E                 1825 	ld	e,(hl)
   05B1 23                 1826 	inc	hl
   05B2 56                 1827 	ld	d,(hl)
   05B3 3E 00              1828 	ld	a,#0x00
   05B5 12                 1829 	ld	(de),a
                           1830 ;	background.c 13
                           1831 ;	genPlus
                           1832 ;	AOP_STK for _init_background_i_1_1
                           1833 ;	genPlusIncr
   05B6 23                 1834 	inc	hl
   05B7 34                 1835 	inc	(hl)
                           1836 ;	genGoto
   05B8 C3 98 05           1837 	jp	00101$
                           1838 ;	genLabel
   05BB                    1839 00104$:
                           1840 ;	background.c 17
                           1841 ;	genAssign
                           1842 ;	AOP_STK for 
   05BB F8 07              1843 	lda	hl,7(sp)
   05BD 46                 1844 	ld	b,(hl)
   05BE 23                 1845 	inc	hl
   05BF 4E                 1846 	ld	c,(hl)
                           1847 ;	genAssign (pointer)
   05C0 58                 1848 	ld	e,b
   05C1 51                 1849 	ld	d,c
   05C2 3E 54              1850 	ld	a,#0x54
   05C4 12                 1851 	ld	(de),a
                           1852 ;	background.c 18
                           1853 ;	genPlus
                           1854 ;	genPlusIncr
                           1855 ;	Can't optimise plus by inc, falling back to the normal way
   05C5 78                 1856 	ld	a,b
   05C6 C6 13              1857 	add	a,#0x13
   05C8 6F                 1858 	ld	l,a
   05C9 79                 1859 	ld	a,c
   05CA CE 00              1860 	adc	a,#0x00
   05CC 67                 1861 	ld	h,a
                           1862 ;	genAssign (pointer)
   05CD 36 55              1863 	ld	(hl),#0x55
                           1864 ;	background.c 19
                           1865 ;	genPlus
                           1866 ;	genPlusIncr
                           1867 ;	Can't optimise plus by inc, falling back to the normal way
   05CF 78                 1868 	ld	a,b
   05D0 C6 54              1869 	add	a,#0x54
   05D2 6F                 1870 	ld	l,a
   05D3 79                 1871 	ld	a,c
   05D4 CE 01              1872 	adc	a,#0x01
   05D6 67                 1873 	ld	h,a
                           1874 ;	genAssign (pointer)
   05D7 36 56              1875 	ld	(hl),#0x56
                           1876 ;	background.c 20
                           1877 ;	genPlus
                           1878 ;	genPlusIncr
                           1879 ;	Can't optimise plus by inc, falling back to the normal way
   05D9 78                 1880 	ld	a,b
   05DA C6 67              1881 	add	a,#0x67
   05DC 6F                 1882 	ld	l,a
   05DD 79                 1883 	ld	a,c
   05DE CE 01              1884 	adc	a,#0x01
   05E0 67                 1885 	ld	h,a
                           1886 ;	genAssign (pointer)
   05E1 36 57              1887 	ld	(hl),#0x57
                           1888 ;	background.c 22
                           1889 ;	genAssign
                           1890 ;	AOP_STK for _init_background_i_1_1
   05E3 F8 04              1891 	lda	hl,4(sp)
   05E5 36 01              1892 	ld	(hl),#0x01
                           1893 ;	genLabel
   05E7                    1894 00105$:
                           1895 ;	genCmpEq
                           1896 ;	AOP_STK for _init_background_i_1_1
                           1897 ; genCmpEq: left 1, right 1, result 0
   05E7 F8 04              1898 	lda	hl,4(sp)
   05E9 7E                 1899 	ld	a,(hl)
   05EA FE 13              1900 	cp	a,#0x13
   05EC CA 32 06           1901 	jp	z,00108$
   05EF                    1902 00122$:
                           1903 ;	background.c 23
                           1904 ;	genPlus
                           1905 ;	AOP_STK for _init_background_i_1_1
                           1906 ;	AOP_STK for _init_background_sloc0_1_0
                           1907 ;	Can't optimise plus by inc, falling back to the normal way
   05EF 58                 1908 	ld	e,b
   05F0 51                 1909 	ld	d,c
   05F1 F8 04              1910 	lda	hl,4(sp)
   05F3 6E                 1911 	ld	l,(hl)
   05F4 26 00              1912 	ld	h,#0x00
   05F6 19                 1913 	add	hl,de
   05F7 7D                 1914 	ld	a,l
   05F8 54                 1915 	ld	d,h
   05F9 F8 02              1916 	lda	hl,2(sp)
   05FB 22                 1917 	ld	(hl+),a
   05FC 72                 1918 	ld	(hl),d
                           1919 ;	genAssign (pointer)
                           1920 ;	AOP_STK for _init_background_sloc0_1_0
   05FD 2B                 1921 	dec	hl
   05FE 5E                 1922 	ld	e,(hl)
   05FF 23                 1923 	inc	hl
   0600 56                 1924 	ld	d,(hl)
   0601 3E 50              1925 	ld	a,#0x50
   0603 12                 1926 	ld	(de),a
                           1927 ;	background.c 24
                           1928 ;	genCast
                           1929 ;	AOP_STK for _init_background_i_1_1
                           1930 ;	AOP_STK for _init_background_sloc0_1_0
   0604 23                 1931 	inc	hl
   0605 7E                 1932 	ld	a,(hl)
   0606 2B                 1933 	dec	hl
   0607 2B                 1934 	dec	hl
   0608 22                 1935 	ld	(hl+),a
   0609 36 00              1936 	ld	(hl),#0x00
                           1937 ;	genPlus
                           1938 ;	AOP_STK for _init_background_sloc0_1_0
                           1939 ;	AOP_STK for _init_background_sloc1_1_0
                           1940 ;	genPlusIncr
                           1941 ;	Can't optimise plus by inc, falling back to the normal way
   060B 2B                 1942 	dec	hl
   060C 5E                 1943 	ld	e,(hl)
   060D 23                 1944 	inc	hl
   060E 56                 1945 	ld	d,(hl)
   060F 21 54 01           1946 	ld	hl,#0x0154
   0612 19                 1947 	add	hl,de
   0613 7D                 1948 	ld	a,l
   0614 54                 1949 	ld	d,h
   0615 F8 00              1950 	lda	hl,0(sp)
   0617 22                 1951 	ld	(hl+),a
   0618 72                 1952 	ld	(hl),d
                           1953 ;	genPlus
                           1954 ;	AOP_STK for _init_background_sloc1_1_0
                           1955 ;	AOP_STK for _init_background_sloc0_1_0
                           1956 ;	Can't optimise plus by inc, falling back to the normal way
   0619 58                 1957 	ld	e,b
   061A 51                 1958 	ld	d,c
   061B 2B                 1959 	dec	hl
   061C 2A                 1960 	ld	a,(hl+)
   061D 66                 1961 	ld	h,(hl)
   061E 6F                 1962 	ld	l,a
   061F 19                 1963 	add	hl,de
   0620 7D                 1964 	ld	a,l
   0621 54                 1965 	ld	d,h
   0622 F8 02              1966 	lda	hl,2(sp)
   0624 22                 1967 	ld	(hl+),a
   0625 72                 1968 	ld	(hl),d
                           1969 ;	genAssign (pointer)
                           1970 ;	AOP_STK for _init_background_sloc0_1_0
   0626 2B                 1971 	dec	hl
   0627 5E                 1972 	ld	e,(hl)
   0628 23                 1973 	inc	hl
   0629 56                 1974 	ld	d,(hl)
   062A 3E 51              1975 	ld	a,#0x51
   062C 12                 1976 	ld	(de),a
                           1977 ;	background.c 22
                           1978 ;	genPlus
                           1979 ;	AOP_STK for _init_background_i_1_1
                           1980 ;	genPlusIncr
   062D 23                 1981 	inc	hl
   062E 34                 1982 	inc	(hl)
                           1983 ;	genGoto
   062F C3 E7 05           1984 	jp	00105$
                           1985 ;	genLabel
   0632                    1986 00108$:
                           1987 ;	background.c 27
                           1988 ;	genAssign
                           1989 ;	AOP_STK for _init_background_i_1_1
   0632 F8 04              1990 	lda	hl,4(sp)
   0634 36 01              1991 	ld	(hl),#0x01
                           1992 ;	genLabel
   0636                    1993 00109$:
                           1994 ;	genCmpEq
                           1995 ;	AOP_STK for _init_background_i_1_1
                           1996 ; genCmpEq: left 1, right 1, result 0
   0636 F8 04              1997 	lda	hl,4(sp)
   0638 7E                 1998 	ld	a,(hl)
   0639 FE 11              1999 	cp	a,#0x11
   063B CA 8D 06           2000 	jp	z,00113$
   063E                    2001 00123$:
                           2002 ;	background.c 28
                           2003 ;	genMult
                           2004 ;	AOP_STK for _init_background_i_1_1
                           2005 ;	AOP_STK for _init_background_sloc1_1_0
   063E F8 04              2006 	lda	hl,4(sp)
   0640 5E                 2007 	ld	e,(hl)
   0641 16 00              2008 	ld	d,#0x00
   0643 6B                 2009 	ld	l,e
   0644 62                 2010 	ld	h,d
   0645 29                 2011 	add	hl,hl
   0646 29                 2012 	add	hl,hl
   0647 19                 2013 	add	hl,de
   0648 29                 2014 	add	hl,hl
   0649 29                 2015 	add	hl,hl
   064A 7D                 2016 	ld	a,l
   064B 54                 2017 	ld	d,h
   064C F8 00              2018 	lda	hl,0(sp)
   064E 22                 2019 	ld	(hl+),a
   064F 72                 2020 	ld	(hl),d
                           2021 ;	genPlus
                           2022 ;	AOP_STK for _init_background_sloc1_1_0
                           2023 ;	AOP_STK for _init_background_sloc0_1_0
                           2024 ;	Can't optimise plus by inc, falling back to the normal way
   0650 58                 2025 	ld	e,b
   0651 51                 2026 	ld	d,c
   0652 2B                 2027 	dec	hl
   0653 2A                 2028 	ld	a,(hl+)
   0654 66                 2029 	ld	h,(hl)
   0655 6F                 2030 	ld	l,a
   0656 19                 2031 	add	hl,de
   0657 7D                 2032 	ld	a,l
   0658 54                 2033 	ld	d,h
   0659 F8 02              2034 	lda	hl,2(sp)
   065B 22                 2035 	ld	(hl+),a
   065C 72                 2036 	ld	(hl),d
                           2037 ;	genAssign (pointer)
                           2038 ;	AOP_STK for _init_background_sloc0_1_0
   065D 2B                 2039 	dec	hl
   065E 5E                 2040 	ld	e,(hl)
   065F 23                 2041 	inc	hl
   0660 56                 2042 	ld	d,(hl)
   0661 3E 52              2043 	ld	a,#0x52
   0663 12                 2044 	ld	(de),a
                           2045 ;	background.c 29
                           2046 ;	genPlus
                           2047 ;	AOP_STK for _init_background_sloc1_1_0
                           2048 ;	AOP_STK for _init_background_sloc0_1_0
                           2049 ;	genPlusIncr
                           2050 ;	Can't optimise plus by inc, falling back to the normal way
   0664 F8 00              2051 	lda	hl,0(sp)
   0666 5E                 2052 	ld	e,(hl)
   0667 23                 2053 	inc	hl
   0668 56                 2054 	ld	d,(hl)
   0669 21 13 00           2055 	ld	hl,#0x0013
   066C 19                 2056 	add	hl,de
   066D 7D                 2057 	ld	a,l
   066E 54                 2058 	ld	d,h
   066F F8 02              2059 	lda	hl,2(sp)
   0671 22                 2060 	ld	(hl+),a
   0672 72                 2061 	ld	(hl),d
                           2062 ;	genPlus
                           2063 ;	AOP_STK for _init_background_sloc0_1_0
                           2064 ;	AOP_STK for _init_background_sloc1_1_0
                           2065 ;	Can't optimise plus by inc, falling back to the normal way
   0673 58                 2066 	ld	e,b
   0674 51                 2067 	ld	d,c
   0675 2B                 2068 	dec	hl
   0676 2A                 2069 	ld	a,(hl+)
   0677 66                 2070 	ld	h,(hl)
   0678 6F                 2071 	ld	l,a
   0679 19                 2072 	add	hl,de
   067A 7D                 2073 	ld	a,l
   067B 54                 2074 	ld	d,h
   067C F8 00              2075 	lda	hl,0(sp)
   067E 22                 2076 	ld	(hl+),a
   067F 72                 2077 	ld	(hl),d
                           2078 ;	genAssign (pointer)
                           2079 ;	AOP_STK for _init_background_sloc1_1_0
   0680 2B                 2080 	dec	hl
   0681 5E                 2081 	ld	e,(hl)
   0682 23                 2082 	inc	hl
   0683 56                 2083 	ld	d,(hl)
   0684 3E 53              2084 	ld	a,#0x53
   0686 12                 2085 	ld	(de),a
                           2086 ;	background.c 27
                           2087 ;	genPlus
                           2088 ;	AOP_STK for _init_background_i_1_1
                           2089 ;	genPlusIncr
   0687 F8 04              2090 	lda	hl,4(sp)
   0689 34                 2091 	inc	(hl)
                           2092 ;	genGoto
   068A C3 36 06           2093 	jp	00109$
                           2094 ;	genLabel
   068D                    2095 00113$:
                           2096 ;	genEndFunction
   068D E8 05              2097 	lda	sp,5(sp)
   068F C9                 2098 	ret
   0690                    2099 ___init_background_end:
                           2100 ;	background.c 33
                           2101 ;	genLabel
                           2102 ;	genFunction
                           2103 ;	---------------------------------
                           2104 ; Function update_background
                           2105 ; ---------------------------------
   0690                    2106 ___update_background_start:
   0690                    2107 _update_background:
   0690 E8 CD              2108 	lda	sp,-51(sp)
                           2109 ;	background.c 38
                           2110 ;	genIpush
                           2111 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0692 21 B1 01           2112 	ld	hl,#_lazer_map
   0695 E5                 2113 	push	hl
                           2114 ;	genIpush
                           2115 ;	AOP_STK for 
   0696 F8 37              2116 	lda	hl,55(sp)
   0698 2A                 2117 	ld	a,(hl+)
   0699 66                 2118 	ld	h,(hl)
   069A 6F                 2119 	ld	l,a
   069B E5                 2120 	push	hl
                           2121 ;	genCall
   069C CD DC 04           2122 	call	_project_lazer
   069F E8 04              2123 	lda	sp,4(sp)
                           2124 ;	background.c 63
                           2125 ;	genAssign
                           2126 ;	AOP_STK for _update_background_x_1_1
   06A1 F8 31              2127 	lda	hl,49(sp)
   06A3 36 00              2128 	ld	(hl),#0x00
   06A5 23                 2129 	inc	hl
   06A6 36 00              2130 	ld	(hl),#0x00
                           2131 ;	genLabel
   06A8                    2132 00105$:
                           2133 ;	genCmpEq
                           2134 ;	AOP_STK for _update_background_x_1_1
                           2135 ; genCmpEq: left 2, right 2, result 0
   06A8 F8 31              2136 	lda	hl,49(sp)
   06AA 7E                 2137 	ld	a,(hl)
   06AB FE 08              2138 	cp	a,#0x08
   06AD C2 B6 06           2139 	jp	nz,00115$
   06B0 23                 2140 	inc	hl
   06B1 7E                 2141 	ld	a,(hl)
   06B2 B7                 2142 	or	a,a
   06B3 CA 7D 08           2143 	jp	z,00109$
   06B6                    2144 00115$:
                           2145 ;	background.c 64
                           2146 ;	genAssign
                           2147 ;	AOP_STK for _update_background_y_1_1
   06B6 F8 2F              2148 	lda	hl,47(sp)
   06B8 36 00              2149 	ld	(hl),#0x00
   06BA 23                 2150 	inc	hl
   06BB 36 00              2151 	ld	(hl),#0x00
                           2152 ;	genLabel
   06BD                    2153 00101$:
                           2154 ;	genCmpEq
                           2155 ;	AOP_STK for _update_background_y_1_1
                           2156 ; genCmpEq: left 2, right 2, result 1
   06BD F8 2F              2157 	lda	hl,47(sp)
   06BF 7E                 2158 	ld	a,(hl)
   06C0 FE 09              2159 	cp	a,#0x09
   06C2 C2 CF 06           2160 	jp	nz,00116$
   06C5 23                 2161 	inc	hl
   06C6 7E                 2162 	ld	a,(hl)
   06C7 B7                 2163 	or	a,a
   06C8 C2 CF 06           2164 	jp	nz,00116$
   06CB 3E 01              2165 	ld	a,#0x01
   06CD 18 01              2166 	jr	00117$
   06CF                    2167 00116$:
   06CF AF                 2168 	xor	a,a
   06D0                    2169 00117$:
                           2170 ;	genIfx
   06D0 B7                 2171 	or	a,a
   06D1 C2 73 08           2172 	jp	nz,00107$
                           2173 ;	background.c 65
                           2174 ;	genLeftShift
                           2175 ;	AOP_STK for _update_background_x_1_1
                           2176 ;	AOP_STK for _update_background_sloc0_1_0
   06D4 F8 31              2177 	lda	hl,49(sp)
   06D6 7E                 2178 	ld	a,(hl)
   06D7 F8 29              2179 	lda	hl,41(sp)
   06D9 77                 2180 	ld	(hl),a
   06DA F8 32              2181 	lda	hl,50(sp)
   06DC 7E                 2182 	ld	a,(hl)
   06DD F8 2A              2183 	lda	hl,42(sp)
   06DF 77                 2184 	ld	(hl),a
   06E0 3E 04              2185 	ld	a,#0x03+1
   06E2 18 07              2186 	jr	00119$
   06E4                    2187 00118$:
   06E4 F8 29              2188 	lda	hl,41(sp)
   06E6 CB 26              2189 	sla	(hl)
   06E8 23                 2190 	inc	hl
   06E9 CB 16              2191 	rl	(hl)
   06EB                    2192 00119$:
   06EB 3D                 2193 	dec	a
   06EC 20 F6              2194 	jr	nz,00118$
                           2195 ;	genPlus
                           2196 ;	AOP_STK for _update_background_y_1_1
                           2197 ;	AOP_STK for _update_background_sloc0_1_0
                           2198 ;	AOP_STK for _update_background_sloc2_1_0
                           2199 ;	Can't optimise plus by inc, falling back to the normal way
   06EE F8 2F              2200 	lda	hl,47(sp)
   06F0 5E                 2201 	ld	e,(hl)
   06F1 23                 2202 	inc	hl
   06F2 56                 2203 	ld	d,(hl)
   06F3 F8 29              2204 	lda	hl,41(sp)
   06F5 2A                 2205 	ld	a,(hl+)
   06F6 66                 2206 	ld	h,(hl)
   06F7 6F                 2207 	ld	l,a
   06F8 19                 2208 	add	hl,de
   06F9 7D                 2209 	ld	a,l
   06FA 54                 2210 	ld	d,h
   06FB F8 25              2211 	lda	hl,37(sp)
   06FD 22                 2212 	ld	(hl+),a
   06FE 72                 2213 	ld	(hl),d
                           2214 ;	genPlus
                           2215 ;	AOP_STK for _update_background_sloc2_1_0
                           2216 ;	AOP_STK for _update_background_x_1_1
                           2217 ;	AOP_STK for _update_background_sloc1_1_0
                           2218 ;	Can't optimise plus by inc, falling back to the normal way
   06FF 2B                 2219 	dec	hl
   0700 5E                 2220 	ld	e,(hl)
   0701 23                 2221 	inc	hl
   0702 56                 2222 	ld	d,(hl)
   0703 F8 31              2223 	lda	hl,49(sp)
   0705 2A                 2224 	ld	a,(hl+)
   0706 66                 2225 	ld	h,(hl)
   0707 6F                 2226 	ld	l,a
   0708 19                 2227 	add	hl,de
   0709 7D                 2228 	ld	a,l
   070A 54                 2229 	ld	d,h
   070B F8 27              2230 	lda	hl,39(sp)
   070D 22                 2231 	ld	(hl+),a
   070E 72                 2232 	ld	(hl),d
                           2233 ;	genAssign
                           2234 ;	AOP_STK for _update_background_sloc1_1_0
                           2235 ;	AOP_STK for _update_background_offset_1_1
   070F 2B                 2236 	dec	hl
   0710 2A                 2237 	ld	a,(hl+)
   0711 5E                 2238 	ld	e,(hl)
   0712 F8 2D              2239 	lda	hl,45(sp)
   0714 22                 2240 	ld	(hl+),a
   0715 73                 2241 	ld	(hl),e
                           2242 ;	background.c 66
                           2243 ;	genPlus
                           2244 ;	AOP_STK for 
                           2245 ;	AOP_STK for _update_background_offset_1_1
                           2246 ;	AOP_STK for _update_background_sloc3_1_0
                           2247 ;	Can't optimise plus by inc, falling back to the normal way
   0716 F8 35              2248 	lda	hl,53(sp)
   0718 5E                 2249 	ld	e,(hl)
   0719 23                 2250 	inc	hl
   071A 56                 2251 	ld	d,(hl)
   071B F8 2D              2252 	lda	hl,45(sp)
   071D 2A                 2253 	ld	a,(hl+)
   071E 66                 2254 	ld	h,(hl)
   071F 6F                 2255 	ld	l,a
   0720 19                 2256 	add	hl,de
   0721 7D                 2257 	ld	a,l
   0722 54                 2258 	ld	d,h
   0723 F8 23              2259 	lda	hl,35(sp)
                           2260 ;	genPointerGet
                           2261 ;	AOP_STK for _update_background_sloc3_1_0
                           2262 ;	AOP_STK for _update_background_sloc7_1_0
   0725 22                 2263 	ld	(hl+),a
   0726 72                 2264 	ld	(hl),d
   0727 5F                 2265 	ld	e,a
   0728 1A                 2266 	ld	a,(de)
   0729 F8 1E              2267 	lda	hl,30(sp)
   072B 77                 2268 	ld	(hl),a
                           2269 ;	genPlus
                           2270 ;	AOP_STK for _update_background_offset_1_1
                           2271 ;	AOP_STK for _update_background_sloc4_1_0
                           2272 ;	Can't optimise plus by inc, falling back to the normal way
   072C 11 B1 01           2273 	ld	de,#_lazer_map
   072F F8 2D              2274 	lda	hl,45(sp)
   0731 2A                 2275 	ld	a,(hl+)
   0732 66                 2276 	ld	h,(hl)
   0733 6F                 2277 	ld	l,a
   0734 19                 2278 	add	hl,de
   0735 7D                 2279 	ld	a,l
   0736 54                 2280 	ld	d,h
   0737 F8 21              2281 	lda	hl,33(sp)
                           2282 ;	genPointerGet
                           2283 ;	AOP_STK for _update_background_sloc4_1_0
                           2284 ;	AOP_STK for _update_background_sloc6_1_0
   0739 22                 2285 	ld	(hl+),a
   073A 72                 2286 	ld	(hl),d
   073B 5F                 2287 	ld	e,a
   073C 1A                 2288 	ld	a,(de)
   073D F8 1F              2289 	lda	hl,31(sp)
                           2290 ;	genPlus
                           2291 ;	AOP_STK for _update_background_sloc7_1_0
                           2292 ;	AOP_STK for _update_background_sloc6_1_0
                           2293 ;	AOP_STK for _update_background_sloc5_1_0
                           2294 ;	Can't optimise plus by inc, falling back to the normal way
   073F 32                 2295 	ld      (hl-),a
   0740 2A                 2296 	ld	a,(hl+)
   0741 86                 2297 	add	a,(hl)
   0742 23                 2298 	inc	hl
                           2299 ;	genCast
                           2300 ;	AOP_STK for _update_background_sloc5_1_0
                           2301 ;	AOP_STK for _update_background_tile_1_1
   0743 77                 2302 	ld      (hl),a
                           2303 ; Removed redundent load
   0744 F8 2B              2304 	lda	hl,43(sp)
   0746 22                 2305 	ld	(hl+),a
   0747 36 00              2306 	ld	(hl),#0x00
                           2307 ;	genAssign
                           2308 ;	AOP_STK for _update_background_tile_1_1
                           2309 ;	(registers are the same)
                           2310 ;	background.c 67
                           2311 ;	genLeftShift
                           2312 ;	AOP_STK for _update_background_y_1_1
   0749 F8 2F              2313 	lda	hl,47(sp)
   074B 4E                 2314 	ld	c,(hl)
   074C 23                 2315 	inc	hl
   074D 46                 2316 	ld	b,(hl)
   074E CB 21              2317 	sla	c
   0750 CB 10              2318 	rl	b
                           2319 ;	genPlus
                           2320 ;	AOP_STK for _update_background_sloc0_1_0
                           2321 ;	AOP_STK for _update_background_sloc8_1_0
                           2322 ;	Can't optimise plus by inc, falling back to the normal way
   0752 F8 29              2323 	lda	hl,41(sp)
   0754 2A                 2324 	ld	a,(hl+)
   0755 66                 2325 	ld	h,(hl)
   0756 6F                 2326 	ld	l,a
   0757 09                 2327 	add	hl,bc
   0758 7D                 2328 	ld	a,l
   0759 54                 2329 	ld	d,h
   075A F8 1C              2330 	lda	hl,28(sp)
   075C 22                 2331 	ld	(hl+),a
   075D 72                 2332 	ld	(hl),d
                           2333 ;	genLeftShift
                           2334 ;	AOP_STK for _update_background_x_1_1
                           2335 ;	AOP_STK for _update_background_sloc9_1_0
   075E F8 31              2336 	lda	hl,49(sp)
   0760 7E                 2337 	ld	a,(hl)
   0761 F8 1A              2338 	lda	hl,26(sp)
   0763 77                 2339 	ld	(hl),a
   0764 F8 32              2340 	lda	hl,50(sp)
   0766 7E                 2341 	ld	a,(hl)
   0767 F8 1B              2342 	lda	hl,27(sp)
   0769 77                 2343 	ld	(hl),a
   076A 3E 06              2344 	ld	a,#0x05+1
   076C 18 07              2345 	jr	00123$
   076E                    2346 00122$:
   076E F8 1A              2347 	lda	hl,26(sp)
   0770 CB 26              2348 	sla	(hl)
   0772 23                 2349 	inc	hl
   0773 CB 16              2350 	rl	(hl)
   0775                    2351 00123$:
   0775 3D                 2352 	dec	a
   0776 20 F6              2353 	jr	nz,00122$
                           2354 ;	genPlus
                           2355 ;	AOP_STK for _update_background_sloc8_1_0
                           2356 ;	AOP_STK for _update_background_sloc9_1_0
                           2357 ;	AOP_STK for _update_background_sloc10_1_0
                           2358 ;	Can't optimise plus by inc, falling back to the normal way
   0778 F8 1C              2359 	lda	hl,28(sp)
   077A 5E                 2360 	ld	e,(hl)
   077B 23                 2361 	inc	hl
   077C 56                 2362 	ld	d,(hl)
   077D F8 1A              2363 	lda	hl,26(sp)
   077F 2A                 2364 	ld	a,(hl+)
   0780 66                 2365 	ld	h,(hl)
   0781 6F                 2366 	ld	l,a
   0782 19                 2367 	add	hl,de
   0783 7D                 2368 	ld	a,l
   0784 54                 2369 	ld	d,h
   0785 F8 18              2370 	lda	hl,24(sp)
   0787 22                 2371 	ld	(hl+),a
   0788 72                 2372 	ld	(hl),d
                           2373 ;	genPlus
                           2374 ;	AOP_STK for _update_background_sloc10_1_0
                           2375 ;	AOP_STK for _update_background_sloc11_1_0
                           2376 ;	genPlusIncr
                           2377 ;	Can't optimise plus by inc, falling back to the normal way
   0789 2B                 2378 	dec	hl
   078A 5E                 2379 	ld	e,(hl)
   078B 23                 2380 	inc	hl
   078C 56                 2381 	ld	d,(hl)
   078D 21 15 00           2382 	ld	hl,#0x0015
   0790 19                 2383 	add	hl,de
   0791 7D                 2384 	ld	a,l
   0792 54                 2385 	ld	d,h
   0793 F8 16              2386 	lda	hl,22(sp)
   0795 22                 2387 	ld	(hl+),a
   0796 72                 2388 	ld	(hl),d
                           2389 ;	genAssign
                           2390 ;	AOP_STK for _update_background_sloc11_1_0
                           2391 ;	AOP_STK for _update_background_offset_1_1
   0797 2B                 2392 	dec	hl
   0798 2A                 2393 	ld	a,(hl+)
   0799 5E                 2394 	ld	e,(hl)
   079A F8 2D              2395 	lda	hl,45(sp)
   079C 22                 2396 	ld	(hl+),a
   079D 73                 2397 	ld	(hl),e
                           2398 ;	background.c 69
                           2399 ;	genPlus
                           2400 ;	AOP_STK for 
                           2401 ;	AOP_STK for _update_background_offset_1_1
                           2402 ;	AOP_STK for _update_background_sloc12_1_0
                           2403 ;	Can't optimise plus by inc, falling back to the normal way
   079E F8 37              2404 	lda	hl,55(sp)
   07A0 5E                 2405 	ld	e,(hl)
   07A1 23                 2406 	inc	hl
   07A2 56                 2407 	ld	d,(hl)
   07A3 F8 2D              2408 	lda	hl,45(sp)
   07A5 2A                 2409 	ld	a,(hl+)
   07A6 66                 2410 	ld	h,(hl)
   07A7 6F                 2411 	ld	l,a
   07A8 19                 2412 	add	hl,de
   07A9 7D                 2413 	ld	a,l
   07AA 54                 2414 	ld	d,h
   07AB F8 14              2415 	lda	hl,20(sp)
   07AD 22                 2416 	ld	(hl+),a
   07AE 72                 2417 	ld	(hl),d
                           2418 ;	genCast
                           2419 ;	AOP_STK for _update_background_tile_1_1
   07AF F8 2B              2420 	lda	hl,43(sp)
   07B1 7E                 2421 	ld	a,(hl)
                           2422 ;	genAssign (pointer)
                           2423 ;	AOP_STK for _update_background_sloc12_1_0
   07B2 F8 14              2424 	lda	hl,20(sp)
   07B4 5E                 2425 	ld	e,(hl)
   07B5 23                 2426 	inc	hl
   07B6 56                 2427 	ld	d,(hl)
   07B7 12                 2428 	ld	(de),a
                           2429 ;	background.c 70
                           2430 ;	genPlus
                           2431 ;	AOP_STK for _update_background_offset_1_1
                           2432 ;	AOP_STK for _update_background_sloc13_1_0
                           2433 ;	genPlusIncr
                           2434 ;	Can't optimise plus by inc, falling back to the normal way
   07B8 F8 2D              2435 	lda	hl,45(sp)
   07BA 5E                 2436 	ld	e,(hl)
   07BB 23                 2437 	inc	hl
   07BC 56                 2438 	ld	d,(hl)
   07BD 21 01 00           2439 	ld	hl,#0x0001
   07C0 19                 2440 	add	hl,de
   07C1 7D                 2441 	ld	a,l
   07C2 54                 2442 	ld	d,h
   07C3 F8 12              2443 	lda	hl,18(sp)
   07C5 22                 2444 	ld	(hl+),a
   07C6 72                 2445 	ld	(hl),d
                           2446 ;	genPlus
                           2447 ;	AOP_STK for 
                           2448 ;	AOP_STK for _update_background_sloc13_1_0
                           2449 ;	AOP_STK for _update_background_sloc14_1_0
                           2450 ;	Can't optimise plus by inc, falling back to the normal way
   07C7 F8 37              2451 	lda	hl,55(sp)
   07C9 5E                 2452 	ld	e,(hl)
   07CA 23                 2453 	inc	hl
   07CB 56                 2454 	ld	d,(hl)
   07CC F8 12              2455 	lda	hl,18(sp)
   07CE 2A                 2456 	ld	a,(hl+)
   07CF 66                 2457 	ld	h,(hl)
   07D0 6F                 2458 	ld	l,a
   07D1 19                 2459 	add	hl,de
   07D2 7D                 2460 	ld	a,l
   07D3 54                 2461 	ld	d,h
   07D4 F8 10              2462 	lda	hl,16(sp)
   07D6 22                 2463 	ld	(hl+),a
   07D7 72                 2464 	ld	(hl),d
                           2465 ;	genPlus
                           2466 ;	AOP_STK for _update_background_tile_1_1
                           2467 ;	AOP_STK for _update_background_sloc15_1_0
                           2468 ;	genPlusIncr
                           2469 ;	Can't optimise plus by inc, falling back to the normal way
   07D8 F8 2B              2470 	lda	hl,43(sp)
   07DA 5E                 2471 	ld	e,(hl)
   07DB 23                 2472 	inc	hl
   07DC 56                 2473 	ld	d,(hl)
   07DD 21 01 00           2474 	ld	hl,#0x0001
   07E0 19                 2475 	add	hl,de
   07E1 7D                 2476 	ld	a,l
   07E2 54                 2477 	ld	d,h
   07E3 F8 0E              2478 	lda	hl,14(sp)
   07E5 22                 2479 	ld	(hl+),a
   07E6 72                 2480 	ld	(hl),d
                           2481 ;	genCast
                           2482 ;	AOP_STK for _update_background_sloc15_1_0
   07E7 2B                 2483 	dec	hl
                           2484 ;	genAssign (pointer)
                           2485 ;	AOP_STK for _update_background_sloc14_1_0
   07E8 2A                 2486 	ld	a,(hl+)
   07E9 23                 2487 	inc	hl
   07EA 5E                 2488 	ld	e,(hl)
   07EB 23                 2489 	inc	hl
   07EC 56                 2490 	ld	d,(hl)
   07ED 12                 2491 	ld	(de),a
                           2492 ;	background.c 71
                           2493 ;	genPlus
                           2494 ;	AOP_STK for _update_background_offset_1_1
                           2495 ;	AOP_STK for _update_background_sloc16_1_0
                           2496 ;	genPlusIncr
                           2497 ;	Can't optimise plus by inc, falling back to the normal way
   07EE F8 2D              2498 	lda	hl,45(sp)
   07F0 5E                 2499 	ld	e,(hl)
   07F1 23                 2500 	inc	hl
   07F2 56                 2501 	ld	d,(hl)
   07F3 21 14 00           2502 	ld	hl,#0x0014
   07F6 19                 2503 	add	hl,de
   07F7 7D                 2504 	ld	a,l
   07F8 54                 2505 	ld	d,h
   07F9 F8 0C              2506 	lda	hl,12(sp)
   07FB 22                 2507 	ld	(hl+),a
   07FC 72                 2508 	ld	(hl),d
                           2509 ;	genPlus
                           2510 ;	AOP_STK for 
                           2511 ;	AOP_STK for _update_background_sloc16_1_0
                           2512 ;	AOP_STK for _update_background_sloc17_1_0
                           2513 ;	Can't optimise plus by inc, falling back to the normal way
   07FD F8 37              2514 	lda	hl,55(sp)
   07FF 5E                 2515 	ld	e,(hl)
   0800 23                 2516 	inc	hl
   0801 56                 2517 	ld	d,(hl)
   0802 F8 0C              2518 	lda	hl,12(sp)
   0804 2A                 2519 	ld	a,(hl+)
   0805 66                 2520 	ld	h,(hl)
   0806 6F                 2521 	ld	l,a
   0807 19                 2522 	add	hl,de
   0808 7D                 2523 	ld	a,l
   0809 54                 2524 	ld	d,h
   080A F8 0A              2525 	lda	hl,10(sp)
   080C 22                 2526 	ld	(hl+),a
   080D 72                 2527 	ld	(hl),d
                           2528 ;	genPlus
                           2529 ;	AOP_STK for _update_background_tile_1_1
                           2530 ;	AOP_STK for _update_background_sloc18_1_0
                           2531 ;	genPlusIncr
                           2532 ;	Can't optimise plus by inc, falling back to the normal way
   080E F8 2B              2533 	lda	hl,43(sp)
   0810 5E                 2534 	ld	e,(hl)
   0811 23                 2535 	inc	hl
   0812 56                 2536 	ld	d,(hl)
   0813 21 02 00           2537 	ld	hl,#0x0002
   0816 19                 2538 	add	hl,de
   0817 7D                 2539 	ld	a,l
   0818 54                 2540 	ld	d,h
   0819 F8 08              2541 	lda	hl,8(sp)
   081B 22                 2542 	ld	(hl+),a
   081C 72                 2543 	ld	(hl),d
                           2544 ;	genCast
                           2545 ;	AOP_STK for _update_background_sloc18_1_0
   081D 2B                 2546 	dec	hl
                           2547 ;	genAssign (pointer)
                           2548 ;	AOP_STK for _update_background_sloc17_1_0
   081E 2A                 2549 	ld	a,(hl+)
   081F 23                 2550 	inc	hl
   0820 5E                 2551 	ld	e,(hl)
   0821 23                 2552 	inc	hl
   0822 56                 2553 	ld	d,(hl)
   0823 12                 2554 	ld	(de),a
                           2555 ;	background.c 72
                           2556 ;	genPlus
                           2557 ;	AOP_STK for _update_background_offset_1_1
                           2558 ;	AOP_STK for _update_background_sloc19_1_0
                           2559 ;	genPlusIncr
                           2560 ;	Can't optimise plus by inc, falling back to the normal way
   0824 F8 2D              2561 	lda	hl,45(sp)
   0826 5E                 2562 	ld	e,(hl)
   0827 23                 2563 	inc	hl
   0828 56                 2564 	ld	d,(hl)
   0829 21 15 00           2565 	ld	hl,#0x0015
   082C 19                 2566 	add	hl,de
   082D 7D                 2567 	ld	a,l
   082E 54                 2568 	ld	d,h
   082F F8 06              2569 	lda	hl,6(sp)
   0831 22                 2570 	ld	(hl+),a
   0832 72                 2571 	ld	(hl),d
                           2572 ;	genPlus
                           2573 ;	AOP_STK for 
                           2574 ;	AOP_STK for _update_background_sloc19_1_0
                           2575 ;	AOP_STK for _update_background_sloc20_1_0
                           2576 ;	Can't optimise plus by inc, falling back to the normal way
   0833 F8 37              2577 	lda	hl,55(sp)
   0835 5E                 2578 	ld	e,(hl)
   0836 23                 2579 	inc	hl
   0837 56                 2580 	ld	d,(hl)
   0838 F8 06              2581 	lda	hl,6(sp)
   083A 2A                 2582 	ld	a,(hl+)
   083B 66                 2583 	ld	h,(hl)
   083C 6F                 2584 	ld	l,a
   083D 19                 2585 	add	hl,de
   083E 7D                 2586 	ld	a,l
   083F 54                 2587 	ld	d,h
   0840 F8 04              2588 	lda	hl,4(sp)
   0842 22                 2589 	ld	(hl+),a
   0843 72                 2590 	ld	(hl),d
                           2591 ;	genPlus
                           2592 ;	AOP_STK for _update_background_tile_1_1
                           2593 ;	AOP_STK for _update_background_sloc21_1_0
                           2594 ;	genPlusIncr
                           2595 ;	Can't optimise plus by inc, falling back to the normal way
   0844 F8 2B              2596 	lda	hl,43(sp)
   0846 5E                 2597 	ld	e,(hl)
   0847 23                 2598 	inc	hl
   0848 56                 2599 	ld	d,(hl)
   0849 21 03 00           2600 	ld	hl,#0x0003
   084C 19                 2601 	add	hl,de
   084D 7D                 2602 	ld	a,l
   084E 54                 2603 	ld	d,h
   084F F8 02              2604 	lda	hl,2(sp)
   0851 22                 2605 	ld	(hl+),a
   0852 72                 2606 	ld	(hl),d
                           2607 ;	genCast
                           2608 ;	AOP_STK for _update_background_sloc21_1_0
   0853 2B                 2609 	dec	hl
                           2610 ;	genAssign (pointer)
                           2611 ;	AOP_STK for _update_background_sloc20_1_0
   0854 2A                 2612 	ld	a,(hl+)
   0855 23                 2613 	inc	hl
   0856 5E                 2614 	ld	e,(hl)
   0857 23                 2615 	inc	hl
   0858 56                 2616 	ld	d,(hl)
   0859 12                 2617 	ld	(de),a
                           2618 ;	background.c 64
                           2619 ;	genPlus
                           2620 ;	AOP_STK for _update_background_y_1_1
                           2621 ;	AOP_STK for _update_background_sloc22_1_0
                           2622 ;	genPlusIncr
                           2623 ;	Can't optimise plus by inc, falling back to the normal way
   085A F8 2F              2624 	lda	hl,47(sp)
   085C 5E                 2625 	ld	e,(hl)
   085D 23                 2626 	inc	hl
   085E 56                 2627 	ld	d,(hl)
   085F 21 01 00           2628 	ld	hl,#0x0001
   0862 19                 2629 	add	hl,de
   0863 7D                 2630 	ld	a,l
   0864 54                 2631 	ld	d,h
   0865 F8 00              2632 	lda	hl,0(sp)
   0867 22                 2633 	ld	(hl+),a
   0868 72                 2634 	ld	(hl),d
                           2635 ;	genAssign
                           2636 ;	AOP_STK for _update_background_sloc22_1_0
                           2637 ;	AOP_STK for _update_background_y_1_1
   0869 2B                 2638 	dec	hl
   086A 2A                 2639 	ld	a,(hl+)
   086B 5E                 2640 	ld	e,(hl)
   086C F8 2F              2641 	lda	hl,47(sp)
   086E 22                 2642 	ld	(hl+),a
   086F 73                 2643 	ld	(hl),e
                           2644 ;	genGoto
   0870 C3 BD 06           2645 	jp	00101$
                           2646 ;	genLabel
   0873                    2647 00107$:
                           2648 ;	background.c 63
                           2649 ;	genPlus
                           2650 ;	AOP_STK for _update_background_x_1_1
                           2651 ;	genPlusIncr
   0873 F8 31              2652 	lda	hl,49(sp)
   0875 34                 2653 	inc	(hl)
   0876 20 02              2654 	jr	nz,00124$
   0878 23                 2655 	inc	hl
   0879 34                 2656 	inc	(hl)
   087A                    2657 00124$:
                           2658 ;	genGoto
   087A C3 A8 06           2659 	jp	00105$
                           2660 ;	genLabel
   087D                    2661 00109$:
                           2662 ;	genEndFunction
   087D E8 33              2663 	lda	sp,51(sp)
   087F C9                 2664 	ret
   0880                    2665 ___update_background_end:
                           2666 ;	transition.c 1
                           2667 ;	genLabel
                           2668 ;	genFunction
                           2669 ;	---------------------------------
                           2670 ; Function check_transition
                           2671 ; ---------------------------------
   0880                    2672 ___check_transition_start:
   0880                    2673 _check_transition:
   0880 E8 F1              2674 	lda	sp,-15(sp)
                           2675 ;	transition.c 2
                           2676 ;	genAssign
                           2677 ;	AOP_STK for _check_transition_objectives_1_1
   0882 F8 09              2678 	lda	hl,9(sp)
   0884 36 00              2679 	ld	(hl),#0x00
   0886 23                 2680 	inc	hl
   0887 36 00              2681 	ld	(hl),#0x00
                           2682 ;	genAssign
                           2683 ;	AOP_STK for _check_transition_defeat_1_1
   0889 F8 07              2684 	lda	hl,7(sp)
   088B 36 00              2685 	ld	(hl),#0x00
   088D 23                 2686 	inc	hl
   088E 36 00              2687 	ld	(hl),#0x00
                           2688 ;	transition.c 5
                           2689 ;	genAssign
                           2690 ;	AOP_STK for _check_transition_x_1_1
   0890 F8 0D              2691 	lda	hl,13(sp)
   0892 36 01              2692 	ld	(hl),#0x01
   0894 23                 2693 	inc	hl
   0895 36 00              2694 	ld	(hl),#0x00
                           2695 ;	genLabel
   0897                    2696 00114$:
                           2697 ;	genCmpEq
                           2698 ;	AOP_STK for _check_transition_x_1_1
                           2699 ; genCmpEq: left 2, right 2, result 0
   0897 F8 0D              2700 	lda	hl,13(sp)
   0899 7E                 2701 	ld	a,(hl)
   089A FE 13              2702 	cp	a,#0x13
   089C C2 A5 08           2703 	jp	nz,00128$
   089F 23                 2704 	inc	hl
   08A0 7E                 2705 	ld	a,(hl)
   08A1 B7                 2706 	or	a,a
   08A2 CA 48 09           2707 	jp	z,00117$
   08A5                    2708 00128$:
                           2709 ;	transition.c 6
                           2710 ;	genAssign
                           2711 ;	AOP_STK for _check_transition_y_1_1
   08A5 F8 0B              2712 	lda	hl,11(sp)
   08A7 36 14              2713 	ld	(hl),#0x14
   08A9 23                 2714 	inc	hl
   08AA 36 00              2715 	ld	(hl),#0x00
                           2716 ;	genLabel
   08AC                    2717 00110$:
                           2718 ;	genCmpEq
                           2719 ;	AOP_STK for _check_transition_y_1_1
                           2720 ; genCmpEq: left 2, right 2, result 1
   08AC F8 0B              2721 	lda	hl,11(sp)
   08AE 7E                 2722 	ld	a,(hl)
   08AF FE 54              2723 	cp	a,#0x54
   08B1 C2 BF 08           2724 	jp	nz,00129$
   08B4 23                 2725 	inc	hl
   08B5 7E                 2726 	ld	a,(hl)
   08B6 FE 01              2727 	cp	a,#0x01
   08B8 C2 BF 08           2728 	jp	nz,00129$
   08BB 3E 01              2729 	ld	a,#0x01
   08BD 18 01              2730 	jr	00130$
   08BF                    2731 00129$:
   08BF AF                 2732 	xor	a,a
   08C0                    2733 00130$:
                           2734 ;	genIfx
   08C0 B7                 2735 	or	a,a
   08C1 C2 36 09           2736 	jp	nz,00116$
                           2737 ;	transition.c 7
                           2738 ;	genPlus
                           2739 ;	AOP_STK for _check_transition_y_1_1
                           2740 ;	AOP_STK for _check_transition_x_1_1
                           2741 ;	AOP_STK for _check_transition_sloc0_1_0
                           2742 ;	Can't optimise plus by inc, falling back to the normal way
   08C4 F8 0B              2743 	lda	hl,11(sp)
   08C6 5E                 2744 	ld	e,(hl)
   08C7 23                 2745 	inc	hl
   08C8 56                 2746 	ld	d,(hl)
   08C9 23                 2747 	inc	hl
   08CA 2A                 2748 	ld	a,(hl+)
   08CB 66                 2749 	ld	h,(hl)
   08CC 6F                 2750 	ld	l,a
   08CD 19                 2751 	add	hl,de
   08CE 7D                 2752 	ld	a,l
   08CF 54                 2753 	ld	d,h
   08D0 F8 04              2754 	lda	hl,4(sp)
   08D2 22                 2755 	ld	(hl+),a
   08D3 72                 2756 	ld	(hl),d
                           2757 ;	genPlus
                           2758 ;	AOP_STK for _check_transition_sloc0_1_0
                           2759 ;	AOP_STK for _check_transition_sloc1_1_0
                           2760 ;	Can't optimise plus by inc, falling back to the normal way
   08D4 11 48 00           2761 	ld	de,#_current_level
   08D7 2B                 2762 	dec	hl
   08D8 2A                 2763 	ld	a,(hl+)
   08D9 66                 2764 	ld	h,(hl)
   08DA 6F                 2765 	ld	l,a
   08DB 19                 2766 	add	hl,de
   08DC 7D                 2767 	ld	a,l
   08DD 54                 2768 	ld	d,h
   08DE F8 02              2769 	lda	hl,2(sp)
                           2770 ;	genPointerGet
                           2771 ;	AOP_STK for _check_transition_sloc1_1_0
                           2772 ;	AOP_STK for _check_transition_tile_1_1
   08E0 22                 2773 	ld	(hl+),a
   08E1 72                 2774 	ld	(hl),d
   08E2 5F                 2775 	ld	e,a
   08E3 1A                 2776 	ld	a,(de)
   08E4 F8 06              2777 	lda	hl,6(sp)
                           2778 ;	genAssign
                           2779 ;	AOP_STK for _check_transition_tile_1_1
                           2780 ;	(registers are the same)
                           2781 ;	transition.c 9
                           2782 ;	genCmpEq
                           2783 ;	AOP_STK for _check_transition_tile_1_1
                           2784 ; genCmpEq: left 1, right 1, result 1
   08E6 77                 2785 	ld      (hl),a
                           2786 ; Removed redundent load
   08E7 FE 68              2787 	cp	a,#0x68
   08E9 C2 F0 08           2788 	jp	nz,00131$
   08EC 3E 01              2789 	ld	a,#0x01
   08EE 18 01              2790 	jr	00132$
   08F0                    2791 00131$:
   08F0 AF                 2792 	xor	a,a
   08F1                    2793 00132$:
                           2794 ;	genIfx
   08F1 B7                 2795 	or	a,a
   08F2 CA 05 09           2796 	jp	z,00102$
                           2797 ;	transition.c 10
                           2798 ;	genPlus
                           2799 ;	AOP_STK for _check_transition_objectives_1_1
                           2800 ;	genPlusIncr
                           2801 ;	Can't optimise plus by inc, falling back to the normal way
   08F5 F8 09              2802 	lda	hl,9(sp)
   08F7 5E                 2803 	ld	e,(hl)
   08F8 23                 2804 	inc	hl
   08F9 56                 2805 	ld	d,(hl)
   08FA 21 01 00           2806 	ld	hl,#0x0001
   08FD 19                 2807 	add	hl,de
   08FE 45                 2808 	ld	b,l
   08FF 4C                 2809 	ld	c,h
                           2810 ;	genAssign
                           2811 ;	AOP_STK for _check_transition_objectives_1_1
   0900 F8 09              2812 	lda	hl,9(sp)
   0902 70                 2813 	ld	(hl),b
   0903 23                 2814 	inc	hl
   0904 71                 2815 	ld	(hl),c
                           2816 ;	genLabel
   0905                    2817 00102$:
                           2818 ;	transition.c 11
                           2819 ;	genCmpEq
                           2820 ;	AOP_STK for _check_transition_tile_1_1
                           2821 ; genCmpEq: left 1, right 1, result 1
   0905 F8 06              2822 	lda	hl,6(sp)
   0907 7E                 2823 	ld	a,(hl)
   0908 FE 88              2824 	cp	a,#0x88
   090A C2 11 09           2825 	jp	nz,00133$
   090D 3E 01              2826 	ld	a,#0x01
   090F 18 01              2827 	jr	00134$
   0911                    2828 00133$:
   0911 AF                 2829 	xor	a,a
   0912                    2830 00134$:
                           2831 ;	genIfx
   0912 B7                 2832 	or	a,a
   0913 CA 1D 09           2833 	jp	z,00112$
                           2834 ;	transition.c 12
                           2835 ;	genAssign
                           2836 ;	AOP_STK for _check_transition_defeat_1_1
   0916 F8 07              2837 	lda	hl,7(sp)
   0918 36 01              2838 	ld	(hl),#0x01
   091A 23                 2839 	inc	hl
   091B 36 00              2840 	ld	(hl),#0x00
                           2841 ;	genLabel
   091D                    2842 00112$:
                           2843 ;	transition.c 6
                           2844 ;	genPlus
                           2845 ;	AOP_STK for _check_transition_y_1_1
                           2846 ;	AOP_STK for _check_transition_sloc2_1_0
                           2847 ;	genPlusIncr
                           2848 ;	Can't optimise plus by inc, falling back to the normal way
   091D F8 0B              2849 	lda	hl,11(sp)
   091F 5E                 2850 	ld	e,(hl)
   0920 23                 2851 	inc	hl
   0921 56                 2852 	ld	d,(hl)
   0922 21 28 00           2853 	ld	hl,#0x0028
   0925 19                 2854 	add	hl,de
   0926 7D                 2855 	ld	a,l
   0927 54                 2856 	ld	d,h
   0928 F8 00              2857 	lda	hl,0(sp)
   092A 22                 2858 	ld	(hl+),a
   092B 72                 2859 	ld	(hl),d
                           2860 ;	genAssign
                           2861 ;	AOP_STK for _check_transition_sloc2_1_0
                           2862 ;	AOP_STK for _check_transition_y_1_1
   092C 2B                 2863 	dec	hl
   092D 2A                 2864 	ld	a,(hl+)
   092E 5E                 2865 	ld	e,(hl)
   092F F8 0B              2866 	lda	hl,11(sp)
   0931 22                 2867 	ld	(hl+),a
   0932 73                 2868 	ld	(hl),e
                           2869 ;	genGoto
   0933 C3 AC 08           2870 	jp	00110$
                           2871 ;	genLabel
   0936                    2872 00116$:
                           2873 ;	transition.c 5
                           2874 ;	genPlus
                           2875 ;	AOP_STK for _check_transition_x_1_1
                           2876 ;	genPlusIncr
                           2877 ;	Can't optimise plus by inc, falling back to the normal way
   0936 F8 0D              2878 	lda	hl,13(sp)
   0938 5E                 2879 	ld	e,(hl)
   0939 23                 2880 	inc	hl
   093A 56                 2881 	ld	d,(hl)
   093B 21 02 00           2882 	ld	hl,#0x0002
   093E 19                 2883 	add	hl,de
   093F 7D                 2884 	ld	a,l
   0940 54                 2885 	ld	d,h
   0941 F8 0D              2886 	lda	hl,13(sp)
   0943 22                 2887 	ld	(hl+),a
   0944 72                 2888 	ld	(hl),d
                           2889 ;	genGoto
   0945 C3 97 08           2890 	jp	00114$
                           2891 ;	genLabel
   0948                    2892 00117$:
                           2893 ;	transition.c 15
                           2894 ;	genIfx
                           2895 ;	AOP_STK for _check_transition_defeat_1_1
   0948 F8 07              2896 	lda	hl,7(sp)
   094A 2A                 2897 	ld	a,(hl+)
   094B B6                 2898 	or	a,(hl)
   094C CA 70 09           2899 	jp	z,00108$
                           2900 ;	transition.c 16
                           2901 ;	genIpush
                           2902 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   094F 21 F4 01           2903 	ld	hl,#0x01F4
   0952 E5                 2904 	push	hl
                           2905 ;	genCall
   0953 CD 00 00           2906 	call	_delay
   0956 E8 02              2907 	lda	sp,2(sp)
                           2908 ;	transition.c 17
                           2909 ;	genIpush
                           2910 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0958 21 96 09           2911 	ld	hl,#__str_0
   095B E5                 2912 	push	hl
                           2913 ;	genCall
   095C CD 00 00           2914 	call	_printf
   095F E8 02              2915 	lda	sp,2(sp)
                           2916 ;	transition.c 18
                           2917 ;	genIpush
                           2918 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0961 3E FF              2919 	ld	a,#0xFF
   0963 F5                 2920 	push	af
   0964 33                 2921 	inc	sp
                           2922 ;	genCall
   0965 CD 00 00           2923 	call	_waitpad
   0968 E8 01              2924 	lda	sp,1(sp)
                           2925 ;	transition.c 19
                           2926 ;	genCall
                           2927 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   096A CD BA 0E           2928 	call	_display_level
                           2929 ;	genGoto
   096D C3 93 09           2930 	jp	00118$
                           2931 ;	genLabel
   0970                    2932 00108$:
                           2933 ;	transition.c 20
                           2934 ;	genIfx
                           2935 ;	AOP_STK for _check_transition_objectives_1_1
   0970 F8 09              2936 	lda	hl,9(sp)
   0972 2A                 2937 	ld	a,(hl+)
   0973 B6                 2938 	or	a,(hl)
   0974 C2 93 09           2939 	jp	nz,00118$
                           2940 ;	transition.c 21
                           2941 ;	genIpush
                           2942 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0977 21 F4 01           2943 	ld	hl,#0x01F4
   097A E5                 2944 	push	hl
                           2945 ;	genCall
   097B CD 00 00           2946 	call	_delay
   097E E8 02              2947 	lda	sp,2(sp)
                           2948 ;	transition.c 22
                           2949 ;	genPlus
                           2950 ;	AOP_HL for _level
                           2951 ;	genPlusIncr
   0980 21 B0 01           2952 	ld	hl,#_level
   0983 34                 2953 	inc	(hl)
                           2954 ;	transition.c 23
                           2955 ;	genCall
                           2956 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0984 CD 17 0F           2957 	call	_display_victory
                           2958 ;	transition.c 24
                           2959 ;	genIpush
                           2960 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0987 3E FF              2961 	ld	a,#0xFF
   0989 F5                 2962 	push	af
   098A 33                 2963 	inc	sp
                           2964 ;	genCall
   098B CD 00 00           2965 	call	_waitpad
   098E E8 01              2966 	lda	sp,1(sp)
                           2967 ;	transition.c 25
                           2968 ;	genCall
                           2969 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0990 CD BA 0E           2970 	call	_display_level
                           2971 ;	genLabel
   0993                    2972 00118$:
                           2973 ;	genEndFunction
   0993 E8 0F              2974 	lda	sp,15(sp)
   0995 C9                 2975 	ret
   0996                    2976 ___check_transition_end:
   0996                    2977 __str_0:
   0996 4C 6F 6F 73 65 72  2978 	.ascii "Looser!"
        21
   099D 00                 2979 	.db 0x00
                           2980 ;	cursor.c 17
                           2981 ;	genLabel
                           2982 ;	genFunction
                           2983 ;	---------------------------------
                           2984 ; Function cursor_toggle
                           2985 ; ---------------------------------
   099E                    2986 ___cursor_toggle_start:
   099E                    2987 _cursor_toggle:
   099E E8 FC              2988 	lda	sp,-4(sp)
                           2989 ;	cursor.c 19
                           2990 ;	genPointerGet
   09A0 11 F9 01           2991 	ld	de,#_cursor
   09A3 1A                 2992 	ld	a,(de)
                           2993 ;	genMinus
   09A4 4F                 2994 	ld	c,a
   09A5 C6 F8              2995 	add	a,#0xF8
                           2996 ;	genRightShift
                           2997 ;	AOP_STK for _cursor_toggle_x_1_1
   09A7 4F                 2998 	ld	c,a
   09A8 CB 3F              2999 	srl	a
   09AA CB 3F              3000 	srl	a
   09AC CB 3F              3001 	srl	a
   09AE CB 3F              3002 	srl	a
   09B0 F8 02              3003 	lda	hl,2(sp)
   09B2 77                 3004 	ld	(hl),a
                           3005 ;	cursor.c 20
                           3006 ;	genPlus
                           3007 ;	genPlusIncr
                           3008 ;	Can't optimise plus by inc, falling back to the normal way
   09B3 3E F9              3009 	ld	a,#<_cursor
   09B5 C6 01              3010 	add	a,#0x01
   09B7 47                 3011 	ld	b,a
   09B8 3E 01              3012 	ld	a,#>_cursor
   09BA CE 00              3013 	adc	a,#0x00
   09BC 4F                 3014 	ld	c,a
                           3015 ;	genPointerGet
   09BD 58                 3016 	ld	e,b
   09BE 51                 3017 	ld	d,c
   09BF 1A                 3018 	ld	a,(de)
                           3019 ;	genMinus
   09C0 47                 3020 	ld	b,a
   09C1 C6 F0              3021 	add	a,#0xF0
   09C3 47                 3022 	ld	b,a
                           3023 ;	genRightShift
                           3024 ; Removed redundent load
   09C4 CB 38              3025 	srl	b
   09C6 CB 38              3026 	srl	b
   09C8 CB 38              3027 	srl	b
   09CA CB 38              3028 	srl	b
                           3029 ;	cursor.c 21
                           3030 ;	genMult
   09CC 58                 3031 	ld	e,b
   09CD 16 00              3032 	ld	d,#0x00
   09CF 6B                 3033 	ld	l,e
   09D0 62                 3034 	ld	h,d
   09D1 29                 3035 	add	hl,hl
   09D2 29                 3036 	add	hl,hl
   09D3 29                 3037 	add	hl,hl
   09D4 19                 3038 	add	hl,de
   09D5 45                 3039 	ld	b,l
   09D6 4C                 3040 	ld	c,h
                           3041 ;	genCast
                           3042 ;	AOP_STK for _cursor_toggle_x_1_1
                           3043 ;	AOP_STK for _cursor_toggle_sloc0_1_0
   09D7 F8 02              3044 	lda	hl,2(sp)
   09D9 7E                 3045 	ld	a,(hl)
   09DA 2B                 3046 	dec	hl
   09DB 2B                 3047 	dec	hl
   09DC 22                 3048 	ld	(hl+),a
   09DD 36 00              3049 	ld	(hl),#0x00
                           3050 ;	genPlus
                           3051 ;	AOP_STK for _cursor_toggle_sloc0_1_0
                           3052 ;	Can't optimise plus by inc, falling back to the normal way
   09DF 2B                 3053 	dec	hl
   09E0 5E                 3054 	ld	e,(hl)
   09E1 23                 3055 	inc	hl
   09E2 56                 3056 	ld	d,(hl)
   09E3 68                 3057 	ld	l,b
   09E4 61                 3058 	ld	h,c
   09E5 19                 3059 	add	hl,de
   09E6 45                 3060 	ld	b,l
   09E7 4C                 3061 	ld	c,h
                           3062 ;	genCast
                           3063 ; Removed redundent load
                           3064 ;	cursor.c 23
                           3065 ;	genPlus
                           3066 ;	genPlusIncr
   09E8 21 FB 01           3067 	ld	hl,#_cursor + 2
                           3068 ;	genAssign (pointer)
   09EB 36 00              3069 	ld	(hl),#0x00
                           3070 ;	cursor.c 24
                           3071 ;	genPlus
                           3072 ;	genPlusIncr
   09ED 23                 3073 	inc	hl
                           3074 ;	genAssign (pointer)
   09EE 36 00              3075 	ld	(hl),#0x00
                           3076 ;	cursor.c 25
                           3077 ;	genAssign
                           3078 ;	AOP_HL for _counter
   09F0 21 FE 01           3079 	ld	hl,#_counter
   09F3 36 08              3080 	ld	(hl),#0x08
                           3081 ;	cursor.c 27
                           3082 ;	genPlus
                           3083 ;	AOP_STK for _cursor_toggle_sloc0_1_0
                           3084 ;	Can't optimise plus by inc, falling back to the normal way
   09F5 11 00 00           3085 	ld	de,#_level_objects
   09F8 68                 3086 	ld	l,b
   09F9 26 00              3087 	ld	h,#0x00
   09FB 19                 3088 	add	hl,de
   09FC 7D                 3089 	ld	a,l
   09FD 54                 3090 	ld	d,h
   09FE F8 00              3091 	lda	hl,0(sp)
                           3092 ;	genPointerGet
                           3093 ;	AOP_STK for _cursor_toggle_sloc0_1_0
                           3094 ;	AOP_STK for _cursor_toggle_currentObject_1_1
   0A00 22                 3095 	ld	(hl+),a
   0A01 72                 3096 	ld	(hl),d
   0A02 5F                 3097 	ld	e,a
   0A03 1A                 3098 	ld	a,(de)
   0A04 23                 3099 	inc	hl
   0A05 23                 3100 	inc	hl
                           3101 ;	genAssign
                           3102 ;	AOP_STK for _cursor_toggle_currentObject_1_1
   0A06 77                 3103 	ld      (hl),a
   0A07 4F                 3104 	ld      c,a
                           3105 ;	cursor.c 28
                           3106 ;	genIfx
                           3107 ;	AOP_HL for _selected
   0A08 AF                 3108 	xor	a,a
   0A09 21 FD 01           3109 	ld	hl,#_selected
   0A0C B6                 3110 	or	a,(hl)
   0A0D CA 82 0A           3111 	jp	z,00113$
                           3112 ;	cursor.c 29
                           3113 ;	genCmpEq
                           3114 ; genCmpEq: left 1, right 1, result 0
   0A10 79                 3115 	ld	a,c
   0A11 FE 08              3116 	cp	a,#0x08
                           3117 ;	cursor.c 30
                           3118 ;	genRet
                           3119 ;	genLabel
   0A13 CA 19 0A           3120 	jp	z,00102$
   0A16                    3121 00127$:
   0A16 C3 27 0B           3122 	jp	00115$
   0A19                    3123 00102$:
                           3124 ;	cursor.c 32
                           3125 ;	genIpush
                           3126 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A19 C5                 3127 	push	bc
   0A1A 21 05 00           3128 	ld	hl,#0x0005
   0A1D E5                 3129 	push	hl
                           3130 ;	genCall
   0A1E CD 00 00           3131 	call	_set_sprite_tile
   0A21 E8 02              3132 	lda	sp,2(sp)
   0A23 E1                 3133 	pop	hl
   0A24 4D                 3134 	ld	c,l
                           3135 ;	cursor.c 33
                           3136 ;	genIpush
                           3137 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A25 C5                 3138 	push	bc
   0A26 21 06 00           3139 	ld	hl,#0x0006
   0A29 E5                 3140 	push	hl
                           3141 ;	genCall
   0A2A CD 00 00           3142 	call	_set_sprite_tile
   0A2D E8 02              3143 	lda	sp,2(sp)
   0A2F E1                 3144 	pop	hl
   0A30 4D                 3145 	ld	c,l
                           3146 ;	cursor.c 34
                           3147 ;	genIpush
                           3148 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A31 C5                 3149 	push	bc
   0A32 21 09 00           3150 	ld	hl,#0x0009
   0A35 E5                 3151 	push	hl
                           3152 ;	genCall
   0A36 CD 00 00           3153 	call	_set_sprite_tile
   0A39 E8 02              3154 	lda	sp,2(sp)
   0A3B E1                 3155 	pop	hl
   0A3C 4D                 3156 	ld	c,l
                           3157 ;	cursor.c 35
                           3158 ;	genIpush
                           3159 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A3D C5                 3160 	push	bc
   0A3E 21 0A 00           3161 	ld	hl,#0x000A
   0A41 E5                 3162 	push	hl
                           3163 ;	genCall
   0A42 CD 00 00           3164 	call	_set_sprite_tile
   0A45 E8 02              3165 	lda	sp,2(sp)
   0A47 E1                 3166 	pop	hl
   0A48 4D                 3167 	ld	c,l
                           3168 ;	cursor.c 38
                           3169 ;	genAssign (pointer)
                           3170 ;	AOP_STK for _cursor_toggle_sloc0_1_0
                           3171 ;	AOP_HL for _selected
   0A49 F8 00              3172 	lda	hl,0(sp)
   0A4B 5E                 3173 	ld	e,(hl)
   0A4C 23                 3174 	inc	hl
   0A4D 56                 3175 	ld	d,(hl)
   0A4E 21 FD 01           3176 	ld	hl,#_selected
   0A51 7E                 3177 	ld	a,(hl)
   0A52 12                 3178 	ld	(de),a
                           3179 ;	cursor.c 39
                           3180 ;	genAssign
                           3181 ;	AOP_HL for _selected
   0A53 36 00              3182 	ld	(hl),#0x00
                           3183 ;	cursor.c 41
                           3184 ;	genIpush
                           3185 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A55 C5                 3186 	push	bc
   0A56 21 48 00           3187 	ld	hl,#_current_level
   0A59 E5                 3188 	push	hl
                           3189 ;	genIpush
   0A5A 21 00 00           3190 	ld	hl,#_level_objects
   0A5D E5                 3191 	push	hl
                           3192 ;	genCall
   0A5E CD 90 06           3193 	call	_update_background
   0A61 E8 04              3194 	lda	sp,4(sp)
   0A63 E1                 3195 	pop	hl
   0A64 4D                 3196 	ld	c,l
                           3197 ;	cursor.c 42
                           3198 ;	genIpush
                           3199 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A65 C5                 3200 	push	bc
   0A66 21 48 00           3201 	ld	hl,#_current_level
   0A69 E5                 3202 	push	hl
                           3203 ;	genIpush
   0A6A 21 14 12           3204 	ld	hl,#0x1214
   0A6D E5                 3205 	push	hl
                           3206 ;	genIpush
   0A6E 21 00 00           3207 	ld	hl,#0x0000
   0A71 E5                 3208 	push	hl
                           3209 ;	genCall
   0A72 CD 00 00           3210 	call	_set_bkg_tiles
   0A75 E8 06              3211 	lda	sp,6(sp)
   0A77 E1                 3212 	pop	hl
   0A78 4D                 3213 	ld	c,l
                           3214 ;	cursor.c 43
                           3215 ;	genCall
                           3216 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A79 C5                 3217 	push	bc
   0A7A CD 80 08           3218 	call	_check_transition
   0A7D E1                 3219 	pop	hl
   0A7E 4D                 3220 	ld	c,l
                           3221 ;	genGoto
   0A7F C3 27 0B           3222 	jp	00115$
                           3223 ;	genLabel
   0A82                    3224 00113$:
                           3225 ;	cursor.c 46
                           3226 ;	genCmpEq
                           3227 ; genCmpEq: left 1, right 1, result 0
   0A82 79                 3228 	ld	a,c
   0A83 FE 28              3229 	cp	a,#0x28
   0A85 CA B5 0A           3230 	jp	z,00104$
   0A88                    3231 00128$:
                           3232 ;	cursor.c 47
                           3233 ;	genCmpEq
                           3234 ; genCmpEq: left 1, right 1, result 0
   0A88 79                 3235 	ld	a,c
   0A89 FE 18              3236 	cp	a,#0x18
   0A8B CA B5 0A           3237 	jp	z,00104$
   0A8E                    3238 00129$:
                           3239 ;	cursor.c 48
                           3240 ;	genCmpEq
                           3241 ; genCmpEq: left 1, right 1, result 0
   0A8E 79                 3242 	ld	a,c
   0A8F FE 48              3243 	cp	a,#0x48
   0A91 CA B5 0A           3244 	jp	z,00104$
   0A94                    3245 00130$:
                           3246 ;	cursor.c 49
                           3247 ;	genCmpEq
                           3248 ; genCmpEq: left 1, right 1, result 0
   0A94 79                 3249 	ld	a,c
   0A95 FE 38              3250 	cp	a,#0x38
   0A97 CA B5 0A           3251 	jp	z,00104$
   0A9A                    3252 00131$:
                           3253 ;	cursor.c 50
                           3254 ;	genCmpEq
                           3255 ; genCmpEq: left 1, right 1, result 0
   0A9A 79                 3256 	ld	a,c
   0A9B FE 58              3257 	cp	a,#0x58
   0A9D CA B5 0A           3258 	jp	z,00104$
   0AA0                    3259 00132$:
                           3260 ;	cursor.c 51
                           3261 ;	genCmpEq
                           3262 ; genCmpEq: left 1, right 1, result 0
   0AA0 79                 3263 	ld	a,c
   0AA1 FE 70              3264 	cp	a,#0x70
   0AA3 CA B5 0A           3265 	jp	z,00104$
   0AA6                    3266 00133$:
                           3267 ;	cursor.c 52
                           3268 ;	genCmpEq
                           3269 ; genCmpEq: left 1, right 1, result 0
   0AA6 79                 3270 	ld	a,c
   0AA7 FE 60              3271 	cp	a,#0x60
   0AA9 CA B5 0A           3272 	jp	z,00104$
   0AAC                    3273 00134$:
                           3274 ;	cursor.c 54
                           3275 ;	genCmpEq
                           3276 ; genCmpEq: left 1, right 1, result 0
   0AAC 79                 3277 	ld	a,c
   0AAD FE 78              3278 	cp	a,#0x78
                           3279 ;	genRet
                           3280 ;	genLabel
   0AAF CA B5 0A           3281 	jp	z,00104$
   0AB2                    3282 00135$:
   0AB2 C3 27 0B           3283 	jp	00115$
   0AB5                    3284 00104$:
                           3285 ;	cursor.c 56
                           3286 ;	genAssign
                           3287 ;	AOP_HL for _selected
   0AB5 21 FD 01           3288 	ld	hl,#_selected
   0AB8 71                 3289 	ld	(hl),c
                           3290 ;	cursor.c 57
                           3291 ;	genAssign (pointer)
                           3292 ;	AOP_STK for _cursor_toggle_sloc0_1_0
   0AB9 F8 00              3293 	lda	hl,0(sp)
   0ABB 5E                 3294 	ld	e,(hl)
   0ABC 23                 3295 	inc	hl
   0ABD 56                 3296 	ld	d,(hl)
   0ABE 3E 08              3297 	ld	a,#0x08
   0AC0 12                 3298 	ld	(de),a
                           3299 ;	cursor.c 59
                           3300 ;	genIpush
                           3301 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3302 ;	AOP_HL for _selected
   0AC1 21 FD 01           3303 	ld	hl,#_selected
   0AC4 7E                 3304 	ld	a,(hl)
   0AC5 F5                 3305 	push	af
   0AC6 33                 3306 	inc	sp
                           3307 ;	genIpush
   0AC7 3E 05              3308 	ld	a,#0x05
   0AC9 F5                 3309 	push	af
   0ACA 33                 3310 	inc	sp
                           3311 ;	genCall
   0ACB CD 00 00           3312 	call	_set_sprite_tile
   0ACE E8 02              3313 	lda	sp,2(sp)
                           3314 ;	cursor.c 60
                           3315 ;	genPlus
                           3316 ;	AOP_HL for _selected
                           3317 ;	genPlusIncr
   0AD0 21 FD 01           3318 	ld	hl,#_selected
   0AD3 4E                 3319 	ld	c,(hl)
   0AD4 0C                 3320 	inc	c
                           3321 ;	genIpush
                           3322 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AD5 79                 3323 	ld	a,c
   0AD6 F5                 3324 	push	af
   0AD7 33                 3325 	inc	sp
                           3326 ;	genIpush
   0AD8 3E 06              3327 	ld	a,#0x06
   0ADA F5                 3328 	push	af
   0ADB 33                 3329 	inc	sp
                           3330 ;	genCall
   0ADC CD 00 00           3331 	call	_set_sprite_tile
   0ADF E8 02              3332 	lda	sp,2(sp)
                           3333 ;	cursor.c 61
                           3334 ;	genPlus
                           3335 ;	AOP_HL for _selected
                           3336 ;	genPlusIncr
   0AE1 21 FD 01           3337 	ld	hl,#_selected
   0AE4 4E                 3338 	ld	c,(hl)
   0AE5 0C                 3339 	inc	c
   0AE6 0C                 3340 	inc	c
                           3341 ;	genIpush
                           3342 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AE7 79                 3343 	ld	a,c
   0AE8 F5                 3344 	push	af
   0AE9 33                 3345 	inc	sp
                           3346 ;	genIpush
   0AEA 3E 09              3347 	ld	a,#0x09
   0AEC F5                 3348 	push	af
   0AED 33                 3349 	inc	sp
                           3350 ;	genCall
   0AEE CD 00 00           3351 	call	_set_sprite_tile
   0AF1 E8 02              3352 	lda	sp,2(sp)
                           3353 ;	cursor.c 62
                           3354 ;	genPlus
                           3355 ;	AOP_HL for _selected
                           3356 ;	genPlusIncr
   0AF3 21 FD 01           3357 	ld	hl,#_selected
   0AF6 4E                 3358 	ld	c,(hl)
   0AF7 0C                 3359 	inc	c
   0AF8 0C                 3360 	inc	c
   0AF9 0C                 3361 	inc	c
                           3362 ;	genIpush
                           3363 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AFA 79                 3364 	ld	a,c
   0AFB F5                 3365 	push	af
   0AFC 33                 3366 	inc	sp
                           3367 ;	genIpush
   0AFD 3E 0A              3368 	ld	a,#0x0A
   0AFF F5                 3369 	push	af
   0B00 33                 3370 	inc	sp
                           3371 ;	genCall
   0B01 CD 00 00           3372 	call	_set_sprite_tile
   0B04 E8 02              3373 	lda	sp,2(sp)
                           3374 ;	cursor.c 64
                           3375 ;	genIpush
                           3376 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B06 21 48 00           3377 	ld	hl,#_current_level
   0B09 E5                 3378 	push	hl
                           3379 ;	genIpush
   0B0A 21 00 00           3380 	ld	hl,#_level_objects
   0B0D E5                 3381 	push	hl
                           3382 ;	genCall
   0B0E CD 90 06           3383 	call	_update_background
   0B11 E8 04              3384 	lda	sp,4(sp)
                           3385 ;	cursor.c 65
                           3386 ;	genIpush
                           3387 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B13 21 48 00           3388 	ld	hl,#_current_level
   0B16 E5                 3389 	push	hl
                           3390 ;	genIpush
   0B17 21 14 12           3391 	ld	hl,#0x1214
   0B1A E5                 3392 	push	hl
                           3393 ;	genIpush
   0B1B 21 00 00           3394 	ld	hl,#0x0000
   0B1E E5                 3395 	push	hl
                           3396 ;	genCall
   0B1F CD 00 00           3397 	call	_set_bkg_tiles
   0B22 E8 06              3398 	lda	sp,6(sp)
                           3399 ;	cursor.c 66
                           3400 ;	genCall
                           3401 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B24 CD 80 08           3402 	call	_check_transition
                           3403 ;	genLabel
   0B27                    3404 00115$:
                           3405 ;	genEndFunction
   0B27 E8 04              3406 	lda	sp,4(sp)
   0B29 C9                 3407 	ret
   0B2A                    3408 ___cursor_toggle_end:
                           3409 ;	cursor.c 70
                           3410 ;	genLabel
                           3411 ;	genFunction
                           3412 ;	---------------------------------
                           3413 ; Function cursor_move
                           3414 ; ---------------------------------
   0B2A                    3415 ___cursor_move_start:
   0B2A                    3416 _cursor_move:
   0B2A E8 FA              3417 	lda	sp,-6(sp)
                           3418 ;	cursor.c 71
                           3419 ;	genPointerGet
   0B2C 11 F9 01           3420 	ld	de,#_cursor
   0B2F 1A                 3421 	ld	a,(de)
   0B30 4F                 3422 	ld	c,a
                           3423 ;	genLeftShift
                           3424 ;	AOP_STK for 
                           3425 ;	AOP_STK for _cursor_move_sloc0_1_0
   0B31 F8 08              3426 	lda	hl,8(sp)
   0B33 7E                 3427 	ld	a,(hl)
   0B34 F8 00              3428 	lda	hl,0(sp)
   0B36 77                 3429 	ld	(hl),a
   0B37 F8 09              3430 	lda	hl,9(sp)
   0B39 7E                 3431 	ld	a,(hl)
   0B3A F8 01              3432 	lda	hl,1(sp)
   0B3C 77                 3433 	ld	(hl),a
   0B3D 3E 04              3434 	ld	a,#0x03+1
   0B3F 18 07              3435 	jr	00117$
   0B41                    3436 00116$:
   0B41 F8 00              3437 	lda	hl,0(sp)
   0B43 CB 26              3438 	sla	(hl)
   0B45 23                 3439 	inc	hl
   0B46 CB 16              3440 	rl	(hl)
   0B48                    3441 00117$:
   0B48 3D                 3442 	dec	a
   0B49 20 F6              3443 	jr	nz,00116$
                           3444 ;	genCast
                           3445 ; Removed redundent load
   0B4B 06 00              3446 	ld	b,#0x00
                           3447 ;	genPlus
                           3448 ;	AOP_STK for _cursor_move_sloc0_1_0
                           3449 ;	Can't optimise plus by inc, falling back to the normal way
   0B4D F8 00              3450 	lda	hl,0(sp)
   0B4F 2A                 3451 	ld	a,(hl+)
   0B50 66                 3452 	ld	h,(hl)
   0B51 6F                 3453 	ld	l,a
   0B52 09                 3454 	add	hl,bc
   0B53 4D                 3455 	ld	c,l
   0B54 44                 3456 	ld	b,h
                           3457 ;	genAssign
                           3458 ;	AOP_STK for _cursor_move_destx_1_1
   0B55 F8 04              3459 	lda	hl,4(sp)
   0B57 71                 3460 	ld	(hl),c
   0B58 23                 3461 	inc	hl
   0B59 70                 3462 	ld	(hl),b
                           3463 ;	cursor.c 72
                           3464 ;	genPlus
                           3465 ;	genPlusIncr
   0B5A 01 FA 01           3466 	ld	bc,#_cursor + 1
                           3467 ;	genPointerGet
   0B5D 0A                 3468 	ld	a,(bc)
   0B5E 4F                 3469 	ld	c,a
                           3470 ;	genLeftShift
                           3471 ;	AOP_STK for 
                           3472 ;	AOP_STK for _cursor_move_sloc0_1_0
   0B5F F8 0A              3473 	lda	hl,10(sp)
   0B61 7E                 3474 	ld	a,(hl)
   0B62 F8 00              3475 	lda	hl,0(sp)
   0B64 77                 3476 	ld	(hl),a
   0B65 F8 0B              3477 	lda	hl,11(sp)
   0B67 7E                 3478 	ld	a,(hl)
   0B68 F8 01              3479 	lda	hl,1(sp)
   0B6A 77                 3480 	ld	(hl),a
   0B6B 3E 04              3481 	ld	a,#0x03+1
   0B6D 18 07              3482 	jr	00119$
   0B6F                    3483 00118$:
   0B6F F8 00              3484 	lda	hl,0(sp)
   0B71 CB 26              3485 	sla	(hl)
   0B73 23                 3486 	inc	hl
   0B74 CB 16              3487 	rl	(hl)
   0B76                    3488 00119$:
   0B76 3D                 3489 	dec	a
   0B77 20 F6              3490 	jr	nz,00118$
                           3491 ;	genCast
                           3492 ; Removed redundent load
   0B79 06 00              3493 	ld	b,#0x00
                           3494 ;	genPlus
                           3495 ;	AOP_STK for _cursor_move_sloc0_1_0
                           3496 ;	Can't optimise plus by inc, falling back to the normal way
   0B7B F8 00              3497 	lda	hl,0(sp)
   0B7D 2A                 3498 	ld	a,(hl+)
   0B7E 66                 3499 	ld	h,(hl)
   0B7F 6F                 3500 	ld	l,a
   0B80 09                 3501 	add	hl,bc
   0B81 4D                 3502 	ld	c,l
   0B82 44                 3503 	ld	b,h
                           3504 ;	genAssign
                           3505 ;	(registers are the same)
                           3506 ;	cursor.c 76
                           3507 ;	genCmpLt
                           3508 ;	AOP_STK for _cursor_move_destx_1_1
   0B83 F8 05              3509 	lda	hl,5(sp)
   0B85 7E                 3510 	ld	a,(hl)
   0B86 EE 80              3511 	xor	a,#0x80
   0B88 5F                 3512 	ld	e,a
   0B89 16 80              3513 	ld	d,#0x80
   0B8B 2B                 3514 	dec	hl
   0B8C 7E                 3515 	ld	a,(hl)
   0B8D D6 08              3516 	sub	a,#0x08
   0B8F 7B                 3517 	ld	a,e
   0B90 9A                 3518 	sbc	a,d
   0B91 DA C0 0B           3519 	jp	c,00101$
                           3520 ;	genCmpGt
                           3521 ;	AOP_STK for _cursor_move_destx_1_1
   0B94 1E 80              3522 	ld	e,#0x80
   0B96 23                 3523 	inc	hl
   0B97 7E                 3524 	ld	a,(hl)
   0B98 EE 80              3525 	xor	a,#0x80
   0B9A 57                 3526 	ld	d,a
   0B9B 3E 88              3527 	ld	a,#0x88
   0B9D 2B                 3528 	dec	hl
   0B9E 96                 3529 	sub	a,(hl)
   0B9F 7B                 3530 	ld	a,e
   0BA0 9A                 3531 	sbc	a,d
   0BA1 DA C0 0B           3532 	jp	c,00101$
                           3533 ;	genCmpLt
   0BA4 78                 3534 	ld	a,b
   0BA5 EE 80              3535 	xor	a,#0x80
   0BA7 5F                 3536 	ld	e,a
   0BA8 16 80              3537 	ld	d,#0x80
   0BAA 79                 3538 	ld	a,c
   0BAB D6 10              3539 	sub	a,#0x10
   0BAD 7B                 3540 	ld	a,e
   0BAE 9A                 3541 	sbc	a,d
   0BAF DA C0 0B           3542 	jp	c,00101$
                           3543 ;	genCmpGt
   0BB2 1E 80              3544 	ld	e,#0x80
   0BB4 78                 3545 	ld	a,b
   0BB5 EE 80              3546 	xor	a,#0x80
   0BB7 57                 3547 	ld	d,a
   0BB8 3E 80              3548 	ld	a,#0x80
   0BBA 91                 3549 	sub	a,c
   0BBB 7B                 3550 	ld	a,e
   0BBC 9A                 3551 	sbc	a,d
   0BBD D2 C3 0B           3552 	jp	nc,00102$
                           3553 ;	genLabel
   0BC0                    3554 00101$:
                           3555 ;	cursor.c 77
                           3556 ;	genRet
   0BC0 C3 64 0C           3557 	jp	00109$
                           3558 ;	genLabel
   0BC3                    3559 00102$:
                           3560 ;	cursor.c 81
                           3561 ;	genMinus
   0BC3 79                 3562 	ld	a,c
   0BC4 C6 F0              3563 	add	a,#0xF0
   0BC6 4F                 3564 	ld	c,a
   0BC7 78                 3565 	ld	a,b
   0BC8 CE FF              3566 	adc	a,#0xFF
   0BCA 47                 3567 	ld	b,a
                           3568 ;	genRightShift
                           3569 ;	AOP_STK for _cursor_move_destindex_1_1
   0BCB F8 02              3570 	lda	hl,2(sp)
   0BCD 71                 3571 	ld	(hl),c
   0BCE 23                 3572 	inc	hl
   0BCF 70                 3573 	ld	(hl),b
   0BD0 CB 2E              3574 	sra	(hl)
   0BD2 2B                 3575 	dec	hl
   0BD3 CB 1E              3576 	rr	(hl)
   0BD5 23                 3577 	inc	hl
   0BD6 CB 2E              3578 	sra	(hl)
   0BD8 2B                 3579 	dec	hl
   0BD9 CB 1E              3580 	rr	(hl)
   0BDB 23                 3581 	inc	hl
   0BDC CB 2E              3582 	sra	(hl)
   0BDE 2B                 3583 	dec	hl
   0BDF CB 1E              3584 	rr	(hl)
   0BE1 23                 3585 	inc	hl
   0BE2 CB 2E              3586 	sra	(hl)
   0BE4 2B                 3587 	dec	hl
   0BE5 CB 1E              3588 	rr	(hl)
                           3589 ;	cursor.c 82
                           3590 ;	genMinus
                           3591 ;	AOP_STK for _cursor_move_destx_1_1
   0BE7 23                 3592 	inc	hl
   0BE8 23                 3593 	inc	hl
   0BE9 5E                 3594 	ld	e,(hl)
   0BEA 23                 3595 	inc	hl
   0BEB 56                 3596 	ld	d,(hl)
   0BEC 21 08 00           3597 	ld	hl,#0x0008
   0BEF 7B                 3598 	ld	a,e
   0BF0 95                 3599 	sub	a,l
   0BF1 5F                 3600 	ld	e,a
   0BF2 7A                 3601 	ld	a,d
   0BF3 9C                 3602 	sbc	a,h
   0BF4 47                 3603 	ld	b,a
   0BF5 4B                 3604 	ld	c,e
                           3605 ;	genRightShift
   0BF6 CB 28              3606 	sra	b
   0BF8 CB 19              3607 	rr	c
   0BFA CB 28              3608 	sra	b
   0BFC CB 19              3609 	rr	c
   0BFE CB 28              3610 	sra	b
   0C00 CB 19              3611 	rr	c
   0C02 CB 28              3612 	sra	b
   0C04 CB 19              3613 	rr	c
                           3614 ;	genLeftShift
                           3615 ;	AOP_STK for _cursor_move_destindex_1_1
                           3616 ;	AOP_STK for _cursor_move_sloc0_1_0
   0C06 F8 02              3617 	lda	hl,2(sp)
   0C08 7E                 3618 	ld	a,(hl)
   0C09 2B                 3619 	dec	hl
   0C0A 2B                 3620 	dec	hl
   0C0B 77                 3621 	ld	(hl),a
   0C0C F8 03              3622 	lda	hl,3(sp)
   0C0E 7E                 3623 	ld	a,(hl)
   0C0F 2B                 3624 	dec	hl
   0C10 2B                 3625 	dec	hl
   0C11 77                 3626 	ld	(hl),a
   0C12 3E 04              3627 	ld	a,#0x03+1
   0C14 18 07              3628 	jr	00125$
   0C16                    3629 00124$:
   0C16 F8 00              3630 	lda	hl,0(sp)
   0C18 CB 26              3631 	sla	(hl)
   0C1A 23                 3632 	inc	hl
   0C1B CB 16              3633 	rl	(hl)
   0C1D                    3634 00125$:
   0C1D 3D                 3635 	dec	a
   0C1E 20 F6              3636 	jr	nz,00124$
                           3637 ;	genPlus
                           3638 ;	AOP_STK for _cursor_move_sloc0_1_0
                           3639 ;	Can't optimise plus by inc, falling back to the normal way
   0C20 F8 00              3640 	lda	hl,0(sp)
   0C22 2A                 3641 	ld	a,(hl+)
   0C23 66                 3642 	ld	h,(hl)
   0C24 6F                 3643 	ld	l,a
   0C25 09                 3644 	add	hl,bc
   0C26 4D                 3645 	ld	c,l
   0C27 44                 3646 	ld	b,h
                           3647 ;	genPlus
                           3648 ;	AOP_STK for _cursor_move_destindex_1_1
                           3649 ;	Can't optimise plus by inc, falling back to the normal way
   0C28 F8 02              3650 	lda	hl,2(sp)
   0C2A 2A                 3651 	ld	a,(hl+)
   0C2B 66                 3652 	ld	h,(hl)
   0C2C 6F                 3653 	ld	l,a
   0C2D 09                 3654 	add	hl,bc
   0C2E 7D                 3655 	ld	a,l
   0C2F 54                 3656 	ld	d,h
   0C30 F8 02              3657 	lda	hl,2(sp)
   0C32 22                 3658 	ld	(hl+),a
   0C33 72                 3659 	ld	(hl),d
                           3660 ;	cursor.c 83
                           3661 ;	genIfx
                           3662 ;	AOP_HL for _selected
   0C34 AF                 3663 	xor	a,a
   0C35 21 FD 01           3664 	ld	hl,#_selected
   0C38 B6                 3665 	or	a,(hl)
   0C39 CA 51 0C           3666 	jp	z,00107$
                           3667 ;	genPlus
                           3668 ;	AOP_STK for _cursor_move_destindex_1_1
                           3669 ;	Can't optimise plus by inc, falling back to the normal way
   0C3C 11 00 00           3670 	ld	de,#_level_objects
   0C3F F8 02              3671 	lda	hl,2(sp)
   0C41 2A                 3672 	ld	a,(hl+)
   0C42 66                 3673 	ld	h,(hl)
   0C43 6F                 3674 	ld	l,a
   0C44 19                 3675 	add	hl,de
   0C45 4D                 3676 	ld	c,l
   0C46 44                 3677 	ld	b,h
                           3678 ;	genPointerGet
   0C47 0A                 3679 	ld	a,(bc)
                           3680 ;	genCmpEq
                           3681 ; genCmpEq: left 1, right 1, result 0
   0C48 4F                 3682 	ld	c,a
   0C49 FE 08              3683 	cp	a,#0x08
                           3684 ;	cursor.c 84
                           3685 ;	genRet
                           3686 ;	genLabel
   0C4B CA 51 0C           3687 	jp	z,00107$
   0C4E                    3688 00126$:
   0C4E C3 64 0C           3689 	jp	00109$
   0C51                    3690 00107$:
                           3691 ;	cursor.c 86
                           3692 ;	genPlus
                           3693 ;	genPlusIncr
   0C51 01 FB 01           3694 	ld	bc,#_cursor + 2
                           3695 ;	genCast
                           3696 ;	AOP_STK for 
   0C54 F8 08              3697 	lda	hl,8(sp)
   0C56 7E                 3698 	ld	a,(hl)
                           3699 ;	genAssign (pointer)
   0C57 02                 3700 	ld	(bc),a
                           3701 ;	cursor.c 87
                           3702 ;	genPlus
                           3703 ;	genPlusIncr
   0C58 01 FC 01           3704 	ld	bc,#_cursor + 3
                           3705 ;	genCast
                           3706 ;	AOP_STK for 
   0C5B 23                 3707 	inc	hl
   0C5C 23                 3708 	inc	hl
   0C5D 7E                 3709 	ld	a,(hl)
                           3710 ;	genAssign (pointer)
   0C5E 02                 3711 	ld	(bc),a
                           3712 ;	cursor.c 88
                           3713 ;	genAssign
                           3714 ;	AOP_HL for _counter
   0C5F 21 FE 01           3715 	ld	hl,#_counter
   0C62 36 08              3716 	ld	(hl),#0x08
                           3717 ;	genLabel
   0C64                    3718 00109$:
                           3719 ;	genEndFunction
   0C64 E8 06              3720 	lda	sp,6(sp)
   0C66 C9                 3721 	ret
   0C67                    3722 ___cursor_move_end:
                           3723 ;	cursor.c 91
                           3724 ;	genLabel
                           3725 ;	genFunction
                           3726 ;	---------------------------------
                           3727 ; Function cursor_update
                           3728 ; ---------------------------------
   0C67                    3729 ___cursor_update_start:
   0C67                    3730 _cursor_update:
   0C67 E8 F3              3731 	lda	sp,-13(sp)
                           3732 ;	cursor.c 93
                           3733 ;	genCall
                           3734 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C69 CD 00 00           3735 	call	_joypad
   0C6C 4B                 3736 	ld	c,e
                           3737 ;	genAssign
                           3738 ;	(registers are the same)
                           3739 ;	cursor.c 95
                           3740 ;	genCmpEq
                           3741 ;	AOP_HL for _counter
                           3742 ; genCmpEq: left 1, right 1, result 0
   0C6D 21 FE 01           3743 	ld	hl,#_counter
   0C70 7E                 3744 	ld	a,(hl)
   0C71 B7                 3745 	or	a,a
   0C72 C2 E1 0C           3746 	jp	nz,00108$
   0C75 18 03              3747 	jr	00131$
   0C77                    3748 00130$:
   0C77 C3 E1 0C           3749 	jp	00108$
   0C7A                    3750 00131$:
                           3751 ;	cursor.c 96
                           3752 ;	genCmpEq
                           3753 ; genCmpEq: left 1, right 1, result 0
   0C7A 79                 3754 	ld	a,c
   0C7B FE 01              3755 	cp	a,#0x01
   0C7D CA CB 0C           3756 	jp	z,00104$
   0C80                    3757 00132$:
                           3758 ;	genCmpEq
                           3759 ; genCmpEq: left 1, right 1, result 0
   0C80 79                 3760 	ld	a,c
   0C81 FE 02              3761 	cp	a,#0x02
   0C83 CA BB 0C           3762 	jp	z,00103$
   0C86                    3763 00133$:
                           3764 ;	genCmpEq
                           3765 ; genCmpEq: left 1, right 1, result 0
   0C86 79                 3766 	ld	a,c
   0C87 FE 04              3767 	cp	a,#0x04
   0C89 CA 9B 0C           3768 	jp	z,00101$
   0C8C                    3769 00134$:
                           3770 ;	genCmpEq
                           3771 ; genCmpEq: left 1, right 1, result 0
   0C8C 79                 3772 	ld	a,c
   0C8D FE 08              3773 	cp	a,#0x08
   0C8F CA AB 0C           3774 	jp	z,00102$
   0C92                    3775 00135$:
                           3776 ;	genCmpEq
                           3777 ; genCmpEq: left 1, right 1, result 0
   0C92 79                 3778 	ld	a,c
   0C93 FE 10              3779 	cp	a,#0x10
   0C95 CA DB 0C           3780 	jp	z,00105$
   0C98                    3781 00136$:
                           3782 ;	genGoto
   0C98 C3 1F 0D           3783 	jp	00109$
                           3784 ;	cursor.c 97
                           3785 ;	genLabel
   0C9B                    3786 00101$:
                           3787 ;	genIpush
                           3788 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C9B 21 FE FF           3789 	ld	hl,#0xFFFFFFFE
   0C9E E5                 3790 	push	hl
                           3791 ;	genIpush
   0C9F 21 00 00           3792 	ld	hl,#0x0000
   0CA2 E5                 3793 	push	hl
                           3794 ;	genCall
   0CA3 CD 2A 0B           3795 	call	_cursor_move
   0CA6 E8 04              3796 	lda	sp,4(sp)
                           3797 ;	genGoto
   0CA8 C3 1F 0D           3798 	jp	00109$
                           3799 ;	cursor.c 98
                           3800 ;	genLabel
   0CAB                    3801 00102$:
                           3802 ;	genIpush
                           3803 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CAB 21 02 00           3804 	ld	hl,#0x0002
   0CAE E5                 3805 	push	hl
                           3806 ;	genIpush
   0CAF 21 00 00           3807 	ld	hl,#0x0000
   0CB2 E5                 3808 	push	hl
                           3809 ;	genCall
   0CB3 CD 2A 0B           3810 	call	_cursor_move
   0CB6 E8 04              3811 	lda	sp,4(sp)
                           3812 ;	genGoto
   0CB8 C3 1F 0D           3813 	jp	00109$
                           3814 ;	cursor.c 99
                           3815 ;	genLabel
   0CBB                    3816 00103$:
                           3817 ;	genIpush
                           3818 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CBB 21 00 00           3819 	ld	hl,#0x0000
   0CBE E5                 3820 	push	hl
                           3821 ;	genIpush
   0CBF 21 FE FF           3822 	ld	hl,#0xFFFFFFFE
   0CC2 E5                 3823 	push	hl
                           3824 ;	genCall
   0CC3 CD 2A 0B           3825 	call	_cursor_move
   0CC6 E8 04              3826 	lda	sp,4(sp)
                           3827 ;	genGoto
   0CC8 C3 1F 0D           3828 	jp	00109$
                           3829 ;	cursor.c 100
                           3830 ;	genLabel
   0CCB                    3831 00104$:
                           3832 ;	genIpush
                           3833 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CCB 21 00 00           3834 	ld	hl,#0x0000
   0CCE E5                 3835 	push	hl
                           3836 ;	genIpush
   0CCF 21 02 00           3837 	ld	hl,#0x0002
   0CD2 E5                 3838 	push	hl
                           3839 ;	genCall
   0CD3 CD 2A 0B           3840 	call	_cursor_move
   0CD6 E8 04              3841 	lda	sp,4(sp)
                           3842 ;	genGoto
   0CD8 C3 1F 0D           3843 	jp	00109$
                           3844 ;	cursor.c 101
                           3845 ;	genLabel
   0CDB                    3846 00105$:
                           3847 ;	genCall
                           3848 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CDB CD 9E 09           3849 	call	_cursor_toggle
                           3850 ;	cursor.c 102
                           3851 ;	genGoto
   0CDE C3 1F 0D           3852 	jp	00109$
                           3853 ;	genLabel
   0CE1                    3854 00108$:
                           3855 ;	cursor.c 104
                           3856 ;	genPointerGet
   0CE1 11 F9 01           3857 	ld	de,#_cursor
   0CE4 1A                 3858 	ld	a,(de)
   0CE5 4F                 3859 	ld	c,a
                           3860 ;	genPlus
                           3861 ;	AOP_STK for _cursor_update_sloc0_1_0
                           3862 ;	genPlusIncr
                           3863 ;	Can't optimise plus by inc, falling back to the normal way
   0CE6 11 F9 01           3864 	ld	de,#_cursor
   0CE9 21 02 00           3865 	ld	hl,#0x0002
   0CEC 19                 3866 	add	hl,de
   0CED 7D                 3867 	ld	a,l
   0CEE 54                 3868 	ld	d,h
   0CEF F8 09              3869 	lda	hl,9(sp)
                           3870 ;	genPointerGet
                           3871 ;	AOP_STK for _cursor_update_sloc0_1_0
   0CF1 22                 3872 	ld	(hl+),a
   0CF2 72                 3873 	ld	(hl),d
   0CF3 5F                 3874 	ld	e,a
   0CF4 1A                 3875 	ld	a,(de)
   0CF5 47                 3876 	ld	b,a
                           3877 ;	genPlus
                           3878 ;	Can't optimise plus by inc, falling back to the normal way
   0CF6 79                 3879 	ld	a,c
   0CF7 80                 3880 	add	a,b
                           3881 ;	genAssign (pointer)
   0CF8 11 F9 01           3882 	ld	de,#_cursor
   0CFB 12                 3883 	ld	(de),a
                           3884 ;	cursor.c 105
                           3885 ;	genPlus
                           3886 ;	genPlusIncr
   0CFC 01 FA 01           3887 	ld	bc,#_cursor + 1
                           3888 ;	genPointerGet
                           3889 ;	AOP_STK for _cursor_update_sloc0_1_0
   0CFF 0A                 3890 	ld	a,(bc)
   0D00 2B                 3891 	dec	hl
   0D01 77                 3892 	ld	(hl),a
                           3893 ;	genPlus
                           3894 ;	AOP_STK for _cursor_update_sloc1_1_0
                           3895 ;	genPlusIncr
                           3896 ;	Can't optimise plus by inc, falling back to the normal way
   0D02 11 F9 01           3897 	ld	de,#_cursor
   0D05 21 03 00           3898 	ld	hl,#0x0003
   0D08 19                 3899 	add	hl,de
   0D09 7D                 3900 	ld	a,l
   0D0A 54                 3901 	ld	d,h
   0D0B F8 07              3902 	lda	hl,7(sp)
                           3903 ;	genPointerGet
                           3904 ;	AOP_STK for _cursor_update_sloc1_1_0
                           3905 ;	AOP_STK for _cursor_update_sloc2_1_0
   0D0D 22                 3906 	ld	(hl+),a
   0D0E 72                 3907 	ld	(hl),d
   0D0F 5F                 3908 	ld	e,a
   0D10 1A                 3909 	ld	a,(de)
   0D11 2B                 3910 	dec	hl
   0D12 2B                 3911 	dec	hl
   0D13 77                 3912 	ld	(hl),a
                           3913 ;	genPlus
                           3914 ;	AOP_STK for _cursor_update_sloc0_1_0
                           3915 ;	AOP_STK for _cursor_update_sloc2_1_0
                           3916 ;	Can't optimise plus by inc, falling back to the normal way
   0D14 F8 09              3917 	lda	hl,9(sp)
   0D16 7E                 3918 	ld	a,(hl)
   0D17 F8 06              3919 	lda	hl,6(sp)
   0D19 86                 3920 	add	a,(hl)
                           3921 ;	genAssign (pointer)
   0D1A 02                 3922 	ld	(bc),a
                           3923 ;	cursor.c 106
                           3924 ;	genMinus
                           3925 ;	AOP_HL for _counter
   0D1B 21 FE 01           3926 	ld	hl,#_counter
   0D1E 35                 3927 	dec	(hl)
                           3928 ;	genLabel
   0D1F                    3929 00109$:
                           3930 ;	cursor.c 109
                           3931 ;	genAssign
                           3932 ;	AOP_STK for _cursor_update_i_1_1
   0D1F F8 0C              3933 	lda	hl,12(sp)
   0D21 36 00              3934 	ld	(hl),#0x00
                           3935 ;	genLabel
   0D23                    3936 00114$:
                           3937 ;	genCmpEq
                           3938 ;	AOP_STK for _cursor_update_i_1_1
                           3939 ; genCmpEq: left 1, right 1, result 0
   0D23 F8 0C              3940 	lda	hl,12(sp)
   0D25 7E                 3941 	ld	a,(hl)
   0D26 FE 04              3942 	cp	a,#0x04
   0D28 CA AC 0D           3943 	jp	z,00118$
   0D2B                    3944 00137$:
                           3945 ;	cursor.c 110
                           3946 ;	genAssign
                           3947 ;	AOP_STK for _cursor_update_j_1_1
   0D2B F8 0B              3948 	lda	hl,11(sp)
   0D2D 36 00              3949 	ld	(hl),#0x00
                           3950 ;	genLabel
   0D2F                    3951 00110$:
                           3952 ;	genCmpEq
                           3953 ;	AOP_STK for _cursor_update_j_1_1
                           3954 ; genCmpEq: left 1, right 1, result 1
   0D2F F8 0B              3955 	lda	hl,11(sp)
   0D31 7E                 3956 	ld	a,(hl)
   0D32 FE 04              3957 	cp	a,#0x04
   0D34 C2 3B 0D           3958 	jp	nz,00138$
   0D37 3E 01              3959 	ld	a,#0x01
   0D39 18 01              3960 	jr	00139$
   0D3B                    3961 00138$:
   0D3B AF                 3962 	xor	a,a
   0D3C                    3963 00139$:
                           3964 ;	genIfx
   0D3C B7                 3965 	or	a,a
   0D3D C2 A6 0D           3966 	jp	nz,00116$
                           3967 ;	cursor.c 112
                           3968 ;	genPlus
                           3969 ;	genPlusIncr
   0D40 01 FA 01           3970 	ld	bc,#_cursor + 1
                           3971 ;	genPointerGet
                           3972 ;	AOP_STK for _cursor_update_sloc2_1_0
   0D43 0A                 3973 	ld	a,(bc)
   0D44 F8 06              3974 	lda	hl,6(sp)
   0D46 77                 3975 	ld	(hl),a
                           3976 ;	genLeftShift
                           3977 ;	AOP_STK for _cursor_update_i_1_1
                           3978 ;	AOP_STK for _cursor_update_sloc1_1_0
   0D47 F8 0C              3979 	lda	hl,12(sp)
   0D49 7E                 3980 	ld	a,(hl)
   0D4A CB 27              3981 	sla	a
   0D4C CB 17              3982 	rl	a
   0D4E CB 17              3983 	rl	a
   0D50 E6 F8              3984 	and	a,#0xF8
   0D52 F8 07              3985 	lda	hl,7(sp)
                           3986 ;	genPlus
                           3987 ;	AOP_STK for _cursor_update_sloc2_1_0
                           3988 ;	AOP_STK for _cursor_update_sloc1_1_0
                           3989 ;	AOP_STK for _cursor_update_sloc0_1_0
                           3990 ;	Can't optimise plus by inc, falling back to the normal way
   0D54 32                 3991 	ld      (hl-),a
   0D55 2A                 3992 	ld	a,(hl+)
   0D56 86                 3993 	add	a,(hl)
   0D57 23                 3994 	inc	hl
   0D58 23                 3995 	inc	hl
   0D59 77                 3996 	ld	(hl),a
                           3997 ;	genPointerGet
                           3998 ;	AOP_STK for _cursor_update_sloc3_1_0
   0D5A 11 F9 01           3999 	ld	de,#_cursor
   0D5D 1A                 4000 	ld	a,(de)
   0D5E F8 05              4001 	lda	hl,5(sp)
   0D60 77                 4002 	ld	(hl),a
                           4003 ;	genLeftShift
                           4004 ;	AOP_STK for _cursor_update_j_1_1
                           4005 ;	AOP_STK for _cursor_update_sloc4_1_0
   0D61 F8 0B              4006 	lda	hl,11(sp)
   0D63 7E                 4007 	ld	a,(hl)
   0D64 CB 27              4008 	sla	a
   0D66 CB 17              4009 	rl	a
   0D68 CB 17              4010 	rl	a
   0D6A E6 F8              4011 	and	a,#0xF8
   0D6C F8 04              4012 	lda	hl,4(sp)
                           4013 ;	genPlus
                           4014 ;	AOP_STK for _cursor_update_sloc3_1_0
                           4015 ;	AOP_STK for _cursor_update_sloc4_1_0
                           4016 ;	AOP_STK for _cursor_update_sloc5_1_0
                           4017 ;	Can't optimise plus by inc, falling back to the normal way
   0D6E 22                 4018 	ld	(hl+),a
   0D6F 7E                 4019 	ld	a,(hl)
   0D70 2B                 4020 	dec	hl
   0D71 86                 4021 	add	a,(hl)
   0D72 2B                 4022 	dec	hl
   0D73 77                 4023 	ld	(hl),a
                           4024 ;	genLeftShift
                           4025 ;	AOP_STK for _cursor_update_i_1_1
                           4026 ;	AOP_STK for _cursor_update_sloc6_1_0
   0D74 F8 0C              4027 	lda	hl,12(sp)
   0D76 7E                 4028 	ld	a,(hl)
   0D77 87                 4029 	add	a,a
   0D78 87                 4030 	add	a,a
   0D79 F8 02              4031 	lda	hl,2(sp)
                           4032 ;	genPlus
                           4033 ;	AOP_STK for _cursor_update_sloc6_1_0
                           4034 ;	AOP_STK for _cursor_update_j_1_1
                           4035 ;	AOP_STK for _cursor_update_sloc7_1_0
                           4036 ;	Can't optimise plus by inc, falling back to the normal way
   0D7B 77                 4037 	ld      (hl),a
                           4038 ; Removed redundent load
   0D7C F8 0B              4039 	lda	hl,11(sp)
   0D7E 86                 4040 	add	a,(hl)
   0D7F F8 01              4041 	lda	hl,1(sp)
   0D81 77                 4042 	ld	(hl),a
                           4043 ;	genIpush
                           4044 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D82 C5                 4045 	push	bc
                           4046 ;	AOP_STK for _cursor_update_sloc0_1_0
   0D83 F8 0B              4047 	lda	hl,11(sp)
   0D85 7E                 4048 	ld	a,(hl)
   0D86 F5                 4049 	push	af
   0D87 33                 4050 	inc	sp
                           4051 ;	genIpush
                           4052 ;	AOP_STK for _cursor_update_sloc5_1_0
   0D88 F8 06              4053 	lda	hl,6(sp)
   0D8A 7E                 4054 	ld	a,(hl)
   0D8B F5                 4055 	push	af
   0D8C 33                 4056 	inc	sp
                           4057 ;	genIpush
                           4058 ;	AOP_STK for _cursor_update_sloc7_1_0
   0D8D 2B                 4059 	dec	hl
   0D8E 2B                 4060 	dec	hl
   0D8F 7E                 4061 	ld	a,(hl)
   0D90 F5                 4062 	push	af
   0D91 33                 4063 	inc	sp
                           4064 ;	genCall
   0D92 CD 00 00           4065 	call	_move_sprite
   0D95 E8 03              4066 	lda	sp,3(sp)
   0D97 C1                 4067 	pop	bc
                           4068 ;	cursor.c 110
                           4069 ;	genPlus
                           4070 ;	AOP_STK for _cursor_update_j_1_1
                           4071 ;	AOP_STK for _cursor_update_sloc8_1_0
                           4072 ;	genPlusIncr
                           4073 ;	Can't optimise plus by inc, falling back to the normal way
   0D98 F8 0B              4074 	lda	hl,11(sp)
   0D9A 7E                 4075 	ld	a,(hl)
   0D9B C6 01              4076 	add	a,#0x01
   0D9D F8 00              4077 	lda	hl,0(sp)
                           4078 ;	genAssign
                           4079 ;	AOP_STK for _cursor_update_sloc8_1_0
                           4080 ;	AOP_STK for _cursor_update_j_1_1
   0D9F 77                 4081 	ld      (hl),a
                           4082 ; Removed redundent load
   0DA0 F8 0B              4083 	lda	hl,11(sp)
   0DA2 77                 4084 	ld	(hl),a
                           4085 ;	genGoto
   0DA3 C3 2F 0D           4086 	jp	00110$
                           4087 ;	genLabel
   0DA6                    4088 00116$:
                           4089 ;	cursor.c 109
                           4090 ;	genPlus
                           4091 ;	AOP_STK for _cursor_update_i_1_1
                           4092 ;	genPlusIncr
   0DA6 F8 0C              4093 	lda	hl,12(sp)
   0DA8 34                 4094 	inc	(hl)
                           4095 ;	genGoto
   0DA9 C3 23 0D           4096 	jp	00114$
                           4097 ;	genLabel
   0DAC                    4098 00118$:
                           4099 ;	genEndFunction
   0DAC E8 0D              4100 	lda	sp,13(sp)
   0DAE C9                 4101 	ret
   0DAF                    4102 ___cursor_update_end:
                           4103 ;	cursor.c 117
                           4104 ;	genLabel
                           4105 ;	genFunction
                           4106 ;	---------------------------------
                           4107 ; Function cursor_reset
                           4108 ; ---------------------------------
   0DAF                    4109 ___cursor_reset_start:
   0DAF                    4110 _cursor_reset:
                           4111 	
                           4112 ;	cursor.c 118
                           4113 ;	genAssign
                           4114 ;	AOP_HL for _counter
   0DAF 21 FE 01           4115 	ld	hl,#_counter
   0DB2 36 00              4116 	ld	(hl),#0x00
                           4117 ;	cursor.c 119
                           4118 ;	genAssign
                           4119 ;	AOP_HL for _selected
   0DB4 21 FD 01           4120 	ld	hl,#_selected
   0DB7 36 00              4121 	ld	(hl),#0x00
                           4122 ;	cursor.c 120
                           4123 ;	genAssign (pointer)
   0DB9 11 F9 01           4124 	ld	de,#_cursor
   0DBC 3E 08              4125 	ld	a,#0x08
   0DBE 12                 4126 	ld	(de),a
                           4127 ;	cursor.c 121
                           4128 ;	genPlus
                           4129 ;	genPlusIncr
   0DBF 21 FA 01           4130 	ld	hl,#_cursor + 1
                           4131 ;	genAssign (pointer)
   0DC2 36 10              4132 	ld	(hl),#0x10
                           4133 ;	cursor.c 122
                           4134 ;	genPlus
                           4135 ;	genPlusIncr
   0DC4 23                 4136 	inc	hl
                           4137 ;	genAssign (pointer)
   0DC5 36 00              4138 	ld	(hl),#0x00
                           4139 ;	cursor.c 123
                           4140 ;	genPlus
                           4141 ;	genPlusIncr
   0DC7 23                 4142 	inc	hl
                           4143 ;	genAssign (pointer)
   0DC8 36 00              4144 	ld	(hl),#0x00
                           4145 ;	genLabel
   0DCA                    4146 00101$:
                           4147 ;	genEndFunction
                           4148 	
   0DCA C9                 4149 	ret
   0DCB                    4150 ___cursor_reset_end:
                           4151 ;	cursor.c 126
                           4152 ;	genLabel
                           4153 ;	genFunction
                           4154 ;	---------------------------------
                           4155 ; Function cursor_init
                           4156 ; ---------------------------------
   0DCB                    4157 ___cursor_init_start:
   0DCB                    4158 _cursor_init:
                           4159 	
                           4160 ;	cursor.c 128
                           4161 ;	genIpush
                           4162 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DCB 21 00 01           4163 	ld	hl,#0x0100
   0DCE E5                 4164 	push	hl
                           4165 ;	genCall
   0DCF CD 00 00           4166 	call	_set_sprite_tile
   0DD2 E8 02              4167 	lda	sp,2(sp)
                           4168 ;	cursor.c 129
                           4169 ;	genIpush
                           4170 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DD4 21 01 02           4171 	ld	hl,#0x0201
   0DD7 E5                 4172 	push	hl
                           4173 ;	genCall
   0DD8 CD 00 00           4174 	call	_set_sprite_tile
   0DDB E8 02              4175 	lda	sp,2(sp)
                           4176 ;	cursor.c 130
                           4177 ;	genIpush
                           4178 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DDD 21 04 03           4179 	ld	hl,#0x0304
   0DE0 E5                 4180 	push	hl
                           4181 ;	genCall
   0DE1 CD 00 00           4182 	call	_set_sprite_tile
   0DE4 E8 02              4183 	lda	sp,2(sp)
                           4184 ;	cursor.c 133
                           4185 ;	genIpush
                           4186 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DE6 21 02 02           4187 	ld	hl,#0x0202
   0DE9 E5                 4188 	push	hl
                           4189 ;	genCall
   0DEA CD 00 00           4190 	call	_set_sprite_tile
   0DED E8 02              4191 	lda	sp,2(sp)
                           4192 ;	cursor.c 134
                           4193 ;	genIpush
                           4194 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DEF 21 02 20           4195 	ld	hl,#0x2002
   0DF2 E5                 4196 	push	hl
                           4197 ;	genCall
   0DF3 CD 00 00           4198 	call	_set_sprite_prop
   0DF6 E8 02              4199 	lda	sp,2(sp)
                           4200 ;	cursor.c 135
                           4201 ;	genIpush
                           4202 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DF8 21 03 01           4203 	ld	hl,#0x0103
   0DFB E5                 4204 	push	hl
                           4205 ;	genCall
   0DFC CD 00 00           4206 	call	_set_sprite_tile
   0DFF E8 02              4207 	lda	sp,2(sp)
                           4208 ;	cursor.c 136
                           4209 ;	genIpush
                           4210 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E01 21 03 20           4211 	ld	hl,#0x2003
   0E04 E5                 4212 	push	hl
                           4213 ;	genCall
   0E05 CD 00 00           4214 	call	_set_sprite_prop
   0E08 E8 02              4215 	lda	sp,2(sp)
                           4216 ;	cursor.c 137
                           4217 ;	genIpush
                           4218 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E0A 21 07 03           4219 	ld	hl,#0x0307
   0E0D E5                 4220 	push	hl
                           4221 ;	genCall
   0E0E CD 00 00           4222 	call	_set_sprite_tile
   0E11 E8 02              4223 	lda	sp,2(sp)
                           4224 ;	cursor.c 138
                           4225 ;	genIpush
                           4226 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E13 21 07 20           4227 	ld	hl,#0x2007
   0E16 E5                 4228 	push	hl
                           4229 ;	genCall
   0E17 CD 00 00           4230 	call	_set_sprite_prop
   0E1A E8 02              4231 	lda	sp,2(sp)
                           4232 ;	cursor.c 141
                           4233 ;	genIpush
                           4234 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E1C 21 08 03           4235 	ld	hl,#0x0308
   0E1F E5                 4236 	push	hl
                           4237 ;	genCall
   0E20 CD 00 00           4238 	call	_set_sprite_tile
   0E23 E8 02              4239 	lda	sp,2(sp)
                           4240 ;	cursor.c 142
                           4241 ;	genIpush
                           4242 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E25 21 08 40           4243 	ld	hl,#0x4008
   0E28 E5                 4244 	push	hl
                           4245 ;	genCall
   0E29 CD 00 00           4246 	call	_set_sprite_prop
   0E2C E8 02              4247 	lda	sp,2(sp)
                           4248 ;	cursor.c 143
                           4249 ;	genIpush
                           4250 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E2E 21 0C 01           4251 	ld	hl,#0x010C
   0E31 E5                 4252 	push	hl
                           4253 ;	genCall
   0E32 CD 00 00           4254 	call	_set_sprite_tile
   0E35 E8 02              4255 	lda	sp,2(sp)
                           4256 ;	cursor.c 144
                           4257 ;	genIpush
                           4258 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E37 21 0C 40           4259 	ld	hl,#0x400C
   0E3A E5                 4260 	push	hl
                           4261 ;	genCall
   0E3B CD 00 00           4262 	call	_set_sprite_prop
   0E3E E8 02              4263 	lda	sp,2(sp)
                           4264 ;	cursor.c 145
                           4265 ;	genIpush
                           4266 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E40 21 0D 02           4267 	ld	hl,#0x020D
   0E43 E5                 4268 	push	hl
                           4269 ;	genCall
   0E44 CD 00 00           4270 	call	_set_sprite_tile
   0E47 E8 02              4271 	lda	sp,2(sp)
                           4272 ;	cursor.c 146
                           4273 ;	genIpush
                           4274 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E49 21 0D 40           4275 	ld	hl,#0x400D
   0E4C E5                 4276 	push	hl
                           4277 ;	genCall
   0E4D CD 00 00           4278 	call	_set_sprite_prop
   0E50 E8 02              4279 	lda	sp,2(sp)
                           4280 ;	cursor.c 149
                           4281 ;	genIpush
                           4282 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E52 21 0B 03           4283 	ld	hl,#0x030B
   0E55 E5                 4284 	push	hl
                           4285 ;	genCall
   0E56 CD 00 00           4286 	call	_set_sprite_tile
   0E59 E8 02              4287 	lda	sp,2(sp)
                           4288 ;	cursor.c 150
                           4289 ;	genIpush
                           4290 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E5B 21 0B 60           4291 	ld	hl,#0x600B
   0E5E E5                 4292 	push	hl
                           4293 ;	genCall
   0E5F CD 00 00           4294 	call	_set_sprite_prop
   0E62 E8 02              4295 	lda	sp,2(sp)
                           4296 ;	cursor.c 151
                           4297 ;	genIpush
                           4298 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E64 21 0E 02           4299 	ld	hl,#0x020E
   0E67 E5                 4300 	push	hl
                           4301 ;	genCall
   0E68 CD 00 00           4302 	call	_set_sprite_tile
   0E6B E8 02              4303 	lda	sp,2(sp)
                           4304 ;	cursor.c 152
                           4305 ;	genIpush
                           4306 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E6D 21 0E 60           4307 	ld	hl,#0x600E
   0E70 E5                 4308 	push	hl
                           4309 ;	genCall
   0E71 CD 00 00           4310 	call	_set_sprite_prop
   0E74 E8 02              4311 	lda	sp,2(sp)
                           4312 ;	cursor.c 153
                           4313 ;	genIpush
                           4314 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E76 21 0F 01           4315 	ld	hl,#0x010F
   0E79 E5                 4316 	push	hl
                           4317 ;	genCall
   0E7A CD 00 00           4318 	call	_set_sprite_tile
   0E7D E8 02              4319 	lda	sp,2(sp)
                           4320 ;	cursor.c 154
                           4321 ;	genIpush
                           4322 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E7F 21 0F 60           4323 	ld	hl,#0x600F
   0E82 E5                 4324 	push	hl
                           4325 ;	genCall
   0E83 CD 00 00           4326 	call	_set_sprite_prop
   0E86 E8 02              4327 	lda	sp,2(sp)
                           4328 ;	cursor.c 157
                           4329 ;	genIpush
                           4330 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E88 21 05 00           4331 	ld	hl,#0x0005
   0E8B E5                 4332 	push	hl
                           4333 ;	genCall
   0E8C CD 00 00           4334 	call	_set_sprite_tile
   0E8F E8 02              4335 	lda	sp,2(sp)
                           4336 ;	cursor.c 158
                           4337 ;	genIpush
                           4338 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E91 21 06 00           4339 	ld	hl,#0x0006
   0E94 E5                 4340 	push	hl
                           4341 ;	genCall
   0E95 CD 00 00           4342 	call	_set_sprite_tile
   0E98 E8 02              4343 	lda	sp,2(sp)
                           4344 ;	cursor.c 159
                           4345 ;	genIpush
                           4346 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E9A 21 09 00           4347 	ld	hl,#0x0009
   0E9D E5                 4348 	push	hl
                           4349 ;	genCall
   0E9E CD 00 00           4350 	call	_set_sprite_tile
   0EA1 E8 02              4351 	lda	sp,2(sp)
                           4352 ;	cursor.c 160
                           4353 ;	genIpush
                           4354 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EA3 21 0A 00           4355 	ld	hl,#0x000A
   0EA6 E5                 4356 	push	hl
                           4357 ;	genCall
   0EA7 CD 00 00           4358 	call	_set_sprite_tile
   0EAA E8 02              4359 	lda	sp,2(sp)
                           4360 ;	cursor.c 162
                           4361 ;	genCall
                           4362 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EAC CD 67 0C           4363 	call	_cursor_update
                           4364 ;	genLabel
   0EAF                    4365 00101$:
                           4366 ;	genEndFunction
                           4367 	
   0EAF C9                 4368 	ret
   0EB0                    4369 ___cursor_init_end:
                           4370 ;	LazerMaze.c 24
                           4371 ;	genLabel
                           4372 ;	genFunction
                           4373 ;	---------------------------------
                           4374 ; Function display_title
                           4375 ; ---------------------------------
   0EB0                    4376 ___display_title_start:
   0EB0                    4377 _display_title:
                           4378 	
                           4379 ;	LazerMaze.c 25
                           4380 ;	genAssign
   0EB0 01 00 20           4381 	ld	bc,#0x2000
                           4382 ;	genAssign (pointer)
   0EB3 3E 01              4383 	ld	a,#0x01
   0EB5 02                 4384 	ld	(bc),a
                           4385 ;	LazerMaze.c 26
                           4386 ;	genCall
                           4387 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EB6 CD 00 00           4388 	call	_show_title
                           4389 ;	genLabel
   0EB9                    4390 00101$:
                           4391 ;	genEndFunction
                           4392 	
   0EB9 C9                 4393 	ret
   0EBA                    4394 ___display_title_end:
                           4395 ;	LazerMaze.c 29
                           4396 ;	genLabel
                           4397 ;	genFunction
                           4398 ;	---------------------------------
                           4399 ; Function display_level
                           4400 ; ---------------------------------
   0EBA                    4401 ___display_level_start:
   0EBA                    4402 _display_level:
   0EBA E8 FD              4403 	lda	sp,-3(sp)
                           4404 ;	LazerMaze.c 30
                           4405 ;	genAssign
   0EBC 01 00 20           4406 	ld	bc,#0x2000
                           4407 ;	genAssign (pointer)
   0EBF 3E 02              4408 	ld	a,#0x02
   0EC1 02                 4409 	ld	(bc),a
                           4410 ;	LazerMaze.c 31
                           4411 ;	genCall
                           4412 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EC2 CD 00 00           4413 	call	_display_off
                           4414 ;	LazerMaze.c 33
                           4415 ;	genIpush
                           4416 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EC5 21 48 00           4417 	ld	hl,#_current_level
   0EC8 E5                 4418 	push	hl
                           4419 ;	genCall
   0EC9 CD 92 05           4420 	call	_init_background
   0ECC E8 02              4421 	lda	sp,2(sp)
                           4422 ;	LazerMaze.c 34
                           4423 ;	genIpush
                           4424 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0ECE 21 00 00           4425 	ld	hl,#_level_objects
   0ED1 E5                 4426 	push	hl
                           4427 ;	genIpush
                           4428 ;	AOP_HL for _level
   0ED2 21 B0 01           4429 	ld	hl,#_level
   0ED5 7E                 4430 	ld	a,(hl)
   0ED6 F5                 4431 	push	af
   0ED7 33                 4432 	inc	sp
                           4433 ;	genCall
   0ED8 CD 00 00           4434 	call	_show_level
   0EDB E8 03              4435 	lda	sp,3(sp)
                           4436 ;	LazerMaze.c 36
                           4437 ;	genIpush
                           4438 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EDD 21 48 00           4439 	ld	hl,#_current_level
   0EE0 E5                 4440 	push	hl
                           4441 ;	genIpush
   0EE1 21 00 00           4442 	ld	hl,#_level_objects
   0EE4 E5                 4443 	push	hl
                           4444 ;	genCall
   0EE5 CD 90 06           4445 	call	_update_background
   0EE8 E8 04              4446 	lda	sp,4(sp)
                           4447 ;	LazerMaze.c 37
                           4448 ;	genIpush
                           4449 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EEA 21 48 00           4450 	ld	hl,#_current_level
   0EED E5                 4451 	push	hl
                           4452 ;	genIpush
   0EEE 21 14 12           4453 	ld	hl,#0x1214
   0EF1 E5                 4454 	push	hl
                           4455 ;	genIpush
   0EF2 21 00 00           4456 	ld	hl,#0x0000
   0EF5 E5                 4457 	push	hl
                           4458 ;	genCall
   0EF6 CD 00 00           4459 	call	_set_bkg_tiles
   0EF9 E8 06              4460 	lda	sp,6(sp)
                           4461 ;	LazerMaze.c 39
                           4462 ;	genCall
                           4463 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EFB CD AF 0D           4464 	call	_cursor_reset
                           4465 ;	LazerMaze.c 40
                           4466 ;	genAssign
   0EFE 01 40 FF           4467 	ld	bc,#0xFF40
                           4468 ;	genAssign
                           4469 ;	AOP_STK for _display_level_sloc0_1_0
   0F01 F8 01              4470 	lda	hl,1(sp)
   0F03 36 40              4471 	ld	(hl),#0x40
   0F05 23                 4472 	inc	hl
   0F06 36 FF              4473 	ld	(hl),#0xFF
                           4474 ;	genPointerGet
                           4475 ;	AOP_STK for _display_level_sloc0_1_0
                           4476 ;	AOP_STK for _display_level_sloc1_1_0
   0F08 2B                 4477 	dec	hl
   0F09 5E                 4478 	ld	e,(hl)
   0F0A 23                 4479 	inc	hl
   0F0B 56                 4480 	ld	d,(hl)
   0F0C 1A                 4481 	ld	a,(de)
   0F0D 2B                 4482 	dec	hl
   0F0E 2B                 4483 	dec	hl
                           4484 ;	genOr
                           4485 ;	AOP_STK for _display_level_sloc1_1_0
   0F0F 77                 4486 	ld      (hl),a
   0F10 7F                 4487 	ld      a,a
   0F11 F6 80              4488 	or	a,#0x80
                           4489 ;	genAssign (pointer)
   0F13 02                 4490 	ld	(bc),a
                           4491 ;	genLabel
   0F14                    4492 00101$:
                           4493 ;	genEndFunction
   0F14 E8 03              4494 	lda	sp,3(sp)
   0F16 C9                 4495 	ret
   0F17                    4496 ___display_level_end:
                           4497 ;	LazerMaze.c 43
                           4498 ;	genLabel
                           4499 ;	genFunction
                           4500 ;	---------------------------------
                           4501 ; Function display_victory
                           4502 ; ---------------------------------
   0F17                    4503 ___display_victory_start:
   0F17                    4504 _display_victory:
                           4505 	
                           4506 ;	LazerMaze.c 44
                           4507 ;	genAssign
   0F17 01 00 20           4508 	ld	bc,#0x2000
                           4509 ;	genAssign (pointer)
   0F1A 3E 01              4510 	ld	a,#0x01
   0F1C 02                 4511 	ld	(bc),a
                           4512 ;	LazerMaze.c 45
                           4513 ;	genCall
                           4514 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F1D CD 00 00           4515 	call	_show_victory
                           4516 ;	genLabel
   0F20                    4517 00101$:
                           4518 ;	genEndFunction
                           4519 	
   0F20 C9                 4520 	ret
   0F21                    4521 ___display_victory_end:
                           4522 ;	LazerMaze.c 48
                           4523 ;	genLabel
                           4524 ;	genFunction
                           4525 ;	---------------------------------
                           4526 ; Function main
                           4527 ; ---------------------------------
   0F21                    4528 ___main_start:
   0F21                    4529 _main:
   0F21 E8 FD              4530 	lda	sp,-3(sp)
                           4531 ;	LazerMaze.c 50
                           4532 ;	genAssign
   0F23 01 40 FF           4533 	ld	bc,#0xFF40
                           4534 ;	genAssign
                           4535 ;	AOP_STK for _main_sloc0_1_0
   0F26 F8 01              4536 	lda	hl,1(sp)
   0F28 36 40              4537 	ld	(hl),#0x40
   0F2A 23                 4538 	inc	hl
   0F2B 36 FF              4539 	ld	(hl),#0xFF
                           4540 ;	genPointerGet
                           4541 ;	AOP_STK for _main_sloc0_1_0
                           4542 ;	AOP_STK for _main_sloc1_1_0
   0F2D 2B                 4543 	dec	hl
   0F2E 5E                 4544 	ld	e,(hl)
   0F2F 23                 4545 	inc	hl
   0F30 56                 4546 	ld	d,(hl)
   0F31 1A                 4547 	ld	a,(de)
   0F32 2B                 4548 	dec	hl
   0F33 2B                 4549 	dec	hl
                           4550 ;	genAnd
                           4551 ;	AOP_STK for _main_sloc1_1_0
   0F34 77                 4552 	ld      (hl),a
   0F35 7F                 4553 	ld      a,a
   0F36 E6 FB              4554 	and	a,#0xFB
                           4555 ;	genAssign (pointer)
   0F38 02                 4556 	ld	(bc),a
                           4557 ;	LazerMaze.c 51
                           4558 ;	genAssign
   0F39 01 4F FF           4559 	ld	bc,#0xFF4F
                           4560 ;	genAssign (pointer)
   0F3C 3E 01              4561 	ld	a,#0x01
   0F3E 02                 4562 	ld	(bc),a
                           4563 ;	LazerMaze.c 52
                           4564 ;	genAssign
   0F3F 01 4F FF           4565 	ld	bc,#0xFF4F
                           4566 ;	genAssign (pointer)
   0F42 3E 00              4567 	ld	a,#0x00
   0F44 02                 4568 	ld	(bc),a
                           4569 ;	LazerMaze.c 54
                           4570 ;	genAssign
   0F45 01 40 FF           4571 	ld	bc,#0xFF40
                           4572 ;	genAssign
                           4573 ;	AOP_STK for _main_sloc0_1_0
   0F48 23                 4574 	inc	hl
   0F49 36 40              4575 	ld	(hl),#0x40
   0F4B 23                 4576 	inc	hl
   0F4C 36 FF              4577 	ld	(hl),#0xFF
                           4578 ;	genPointerGet
                           4579 ;	AOP_STK for _main_sloc0_1_0
                           4580 ;	AOP_STK for _main_sloc1_1_0
   0F4E 2B                 4581 	dec	hl
   0F4F 5E                 4582 	ld	e,(hl)
   0F50 23                 4583 	inc	hl
   0F51 56                 4584 	ld	d,(hl)
   0F52 1A                 4585 	ld	a,(de)
   0F53 2B                 4586 	dec	hl
   0F54 2B                 4587 	dec	hl
                           4588 ;	genOr
                           4589 ;	AOP_STK for _main_sloc1_1_0
   0F55 77                 4590 	ld      (hl),a
   0F56 7F                 4591 	ld      a,a
   0F57 F6 01              4592 	or	a,#0x01
                           4593 ;	genAssign (pointer)
   0F59 02                 4594 	ld	(bc),a
                           4595 ;	LazerMaze.c 56
                           4596 ;	genCall
                           4597 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F5A CD B0 0E           4598 	call	_display_title
                           4599 ;	LazerMaze.c 57
                           4600 ;	genAssign
   0F5D 01 40 FF           4601 	ld	bc,#0xFF40
                           4602 ;	genAssign
                           4603 ;	AOP_STK for _main_sloc0_1_0
   0F60 F8 01              4604 	lda	hl,1(sp)
   0F62 36 40              4605 	ld	(hl),#0x40
   0F64 23                 4606 	inc	hl
   0F65 36 FF              4607 	ld	(hl),#0xFF
                           4608 ;	genPointerGet
                           4609 ;	AOP_STK for _main_sloc0_1_0
                           4610 ;	AOP_STK for _main_sloc1_1_0
   0F67 2B                 4611 	dec	hl
   0F68 5E                 4612 	ld	e,(hl)
   0F69 23                 4613 	inc	hl
   0F6A 56                 4614 	ld	d,(hl)
   0F6B 1A                 4615 	ld	a,(de)
   0F6C 2B                 4616 	dec	hl
   0F6D 2B                 4617 	dec	hl
                           4618 ;	genOr
                           4619 ;	AOP_STK for _main_sloc1_1_0
   0F6E 77                 4620 	ld      (hl),a
   0F6F 7F                 4621 	ld      a,a
   0F70 F6 80              4622 	or	a,#0x80
                           4623 ;	genAssign (pointer)
   0F72 02                 4624 	ld	(bc),a
                           4625 ;	LazerMaze.c 58
                           4626 ;	genIpush
                           4627 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F73 3E FF              4628 	ld	a,#0xFF
   0F75 F5                 4629 	push	af
   0F76 33                 4630 	inc	sp
                           4631 ;	genCall
   0F77 CD 00 00           4632 	call	_waitpad
   0F7A E8 01              4633 	lda	sp,1(sp)
                           4634 ;	LazerMaze.c 60
                           4635 ;	genIpush
                           4636 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F7C 21 D1 0F           4637 	ld	hl,#__str_1
   0F7F E5                 4638 	push	hl
                           4639 ;	genCall
   0F80 CD 00 00           4640 	call	_printf
   0F83 E8 02              4641 	lda	sp,2(sp)
                           4642 ;	LazerMaze.c 61
                           4643 ;	genIpush
                           4644 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F85 21 1E 10           4645 	ld	hl,#__str_2
   0F88 E5                 4646 	push	hl
                           4647 ;	genCall
   0F89 CD 00 00           4648 	call	_printf
   0F8C E8 02              4649 	lda	sp,2(sp)
                           4650 ;	LazerMaze.c 62
                           4651 ;	genIpush
                           4652 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F8E 21 44 10           4653 	ld	hl,#__str_3
   0F91 E5                 4654 	push	hl
                           4655 ;	genCall
   0F92 CD 00 00           4656 	call	_printf
   0F95 E8 02              4657 	lda	sp,2(sp)
                           4658 ;	LazerMaze.c 63
                           4659 ;	genIpush
                           4660 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F97 21 87 10           4661 	ld	hl,#__str_4
   0F9A E5                 4662 	push	hl
                           4663 ;	genCall
   0F9B CD 00 00           4664 	call	_printf
   0F9E E8 02              4665 	lda	sp,2(sp)
                           4666 ;	LazerMaze.c 65
                           4667 ;	genIpush
                           4668 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FA0 3E 80              4669 	ld	a,#0x80
   0FA2 F5                 4670 	push	af
   0FA3 33                 4671 	inc	sp
                           4672 ;	genCall
   0FA4 CD 00 00           4673 	call	_waitpad
   0FA7 E8 01              4674 	lda	sp,1(sp)
                           4675 ;	LazerMaze.c 67
                           4676 ;	genAssign
   0FA9 01 40 FF           4677 	ld	bc,#0xFF40
                           4678 ;	genAssign
                           4679 ;	AOP_STK for _main_sloc0_1_0
   0FAC F8 01              4680 	lda	hl,1(sp)
   0FAE 36 40              4681 	ld	(hl),#0x40
   0FB0 23                 4682 	inc	hl
   0FB1 36 FF              4683 	ld	(hl),#0xFF
                           4684 ;	genPointerGet
                           4685 ;	AOP_STK for _main_sloc0_1_0
                           4686 ;	AOP_STK for _main_sloc1_1_0
   0FB3 2B                 4687 	dec	hl
   0FB4 5E                 4688 	ld	e,(hl)
   0FB5 23                 4689 	inc	hl
   0FB6 56                 4690 	ld	d,(hl)
   0FB7 1A                 4691 	ld	a,(de)
   0FB8 2B                 4692 	dec	hl
   0FB9 2B                 4693 	dec	hl
                           4694 ;	genOr
                           4695 ;	AOP_STK for _main_sloc1_1_0
   0FBA 77                 4696 	ld      (hl),a
   0FBB 7F                 4697 	ld      a,a
   0FBC F6 02              4698 	or	a,#0x02
                           4699 ;	genAssign (pointer)
   0FBE 02                 4700 	ld	(bc),a
                           4701 ;	LazerMaze.c 68
                           4702 ;	genCall
                           4703 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FBF CD BA 0E           4704 	call	_display_level
                           4705 ;	LazerMaze.c 69
                           4706 ;	genCall
                           4707 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FC2 CD CB 0D           4708 	call	_cursor_init
                           4709 ;	LazerMaze.c 71
                           4710 ;	genLabel
   0FC5                    4711 00102$:
                           4712 ;	LazerMaze.c 72
                           4713 ;	genCall
                           4714 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FC5 CD 67 0C           4715 	call	_cursor_update
                           4716 ;	LazerMaze.c 73
                           4717 ;	genCall
                           4718 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FC8 CD 00 00           4719 	call	_wait_vbl_done
                           4720 ;	genGoto
   0FCB C3 C5 0F           4721 	jp	00102$
                           4722 ;	genLabel
   0FCE                    4723 00104$:
                           4724 ;	genEndFunction
   0FCE E8 03              4725 	lda	sp,3(sp)
   0FD0 C9                 4726 	ret
   0FD1                    4727 ___main_end:
   0FD1                    4728 __str_1:
   0FD1 20                 4729 	.ascii " "
   0FD2 0A                 4730 	.db 0x0A
   0FD3 20 4D 6F 76 65 20  4731 	.ascii " Move the elements"
        74 68 65 20 65 6C
        65 6D 65 6E 74 73
   0FE5 0A                 4732 	.db 0x0A
   0FE6 20 69 6E 20 74 68  4733 	.ascii " in the level to"
        65 20 6C 65 76 65
        6C 20 74 6F
   0FF6 0A                 4734 	.db 0x0A
   0FF7 20 68 69 74 20 61  4735 	.ascii " hit all objectives"
        6C 6C 20 6F 62 6A
        65 63 74 69 76 65
        73
   100A 0A                 4736 	.db 0x0A
   100B 20 77              4737 	.ascii " w"
   100D 69 74 68 20 74 68  4738 	.ascii "ith the laser."
        65 20 6C 61 73 65
        72 2E
   101B 0A                 4739 	.db 0x0A
   101C 0A                 4740 	.db 0x0A
   101D 00                 4741 	.db 0x00
   101E                    4742 __str_2:
   101E 20 55 73 65 20 74  4743 	.ascii " Use the arrors to"
        68 65 20 61 72 72
        6F 72 73 20 74 6F
   1030 0A                 4744 	.db 0x0A
   1031 20 6D 6F 76 65 74  4745 	.ascii " movethe cursor."
        68 65 20 63 75 72
        73 6F 72 2E
   1041 0A                 4746 	.db 0x0A
   1042 0A                 4747 	.db 0x0A
   1043 00                 4748 	.db 0x00
   1044                    4749 __str_3:
   1044 20 50 72 65 73 73  4750 	.ascii " Press A to move an"
        20 41 20 74 6F 20
        6D 6F 76 65 20 61
        6E
   1057 0A                 4751 	.db 0x0A
   1058 20 65 6C 65 6D 65  4752 	.ascii " element. Only some"
        6E 74 2E 20 4F 6E
        6C 79 20 73 6F 6D
        65
   106B 0A                 4753 	.db 0x0A
   106C 20 65 6C 65 6D 65  4754 	.ascii " elements can be"
        6E 74 73 20 63 61
        6E 20 62 65
   107C 0A                 4755 	.db 0x0A
   107D 20 6D 6F           4756 	.ascii " mo"
   1080 76 65 64 2E        4757 	.ascii "ved."
   1084 0A                 4758 	.db 0x0A
   1085 0A                 4759 	.db 0x0A
   1086 00                 4760 	.db 0x00
   1087                    4761 __str_4:
   1087 20 50 72 65 73 73  4762 	.ascii " Press start to"
        20 73 74 61 72 74
        20 74 6F
   1096 0A                 4763 	.db 0x0A
   1097 20 63 6F 6E 74 69  4764 	.ascii " continue"
        6E 75 65
   10A0 0A                 4765 	.db 0x0A
   10A1 00                 4766 	.db 0x00
                           4767 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___check_transition_end            0996 R
  0 ___check_transition_start          0880 R
  0 ___cursor_init_end                 0EB0 R
  0 ___cursor_init_start               0DCB R
  0 ___cursor_move_end                 0C67 R
  0 ___cursor_move_start               0B2A R
  0 ___cursor_reset_end                0DCB R
  0 ___cursor_reset_start              0DAF R
  0 ___cursor_toggle_end               0B2A R
  0 ___cursor_toggle_start             099E R
  0 ___cursor_update_end               0DAF R
  0 ___cursor_update_start             0C67 R
  0 ___determine_lazer_path_end        04DC R
  0 ___determine_lazer_path_start      02AC R
  0 ___determine_next_direction_end    02AC R
  0 ___determine_next_direction_star   0172 R
  0 ___determine_next_lazer_stat_end   0172 R
  0 ___determine_next_lazer_stat_sta   0023 R
  0 ___display_level_end               0F17 R
  0 ___display_level_start             0EBA R
  0 ___display_title_end               0EBA R
  0 ___display_title_start             0EB0 R
  0 ___display_victory_end             0F21 R
  0 ___display_victory_start           0F17 R
  0 ___init_background_end             0690 R
  0 ___init_background_start           0592 R
  0 ___main_end                        0FD1 R
  0 ___main_start                      0F21 R
  0 ___project_lazer_end               0592 R
  0 ___project_lazer_start             04DC R
  0 ___row_col_to_cel_end              0023 R
  0 ___row_col_to_cel_start            0000 R
  0 ___update_background_end           0880 R
  0 ___update_background_start         0690 R
    __divuint_rrx_s                    **** GX
    __moduint_rrx_s                    **** GX
  0 __str_0                            0996 R
  0 __str_1                            0FD1 R
  0 __str_2                            101E R
  0 __str_3                            1044 R
  0 __str_4                            1087 R
  0 _check_transition                  0880 GR
  1 _counter                           01FE GR
  1 _current_level                     0048 GR
  1 _cursor                            01F9 GR
  0 _cursor_init                       0DCB GR
  0 _cursor_move                       0B2A GR
  0 _cursor_reset                      0DAF GR
  0 _cursor_toggle                     099E GR
  0 _cursor_update                     0C67 GR
    _delay                             **** GX
  0 _determine_lazer_path              02AC GR
  0 _determine_next_direction          0172 GR
  0 _determine_next_lazer_stat         0023 GR
  0 _display_level                     0EBA GR
    _display_off                       **** GX
  0 _display_title                     0EB0 GR
  0 _display_victory                   0F17 GR
  0 _init_background                   0592 GR
    _joypad                            **** GX
  1 _lazer_map                         01B1 GR
  1 _level                             01B0 GR
  1 _level_objects                     0000 GR
  0 _main                              0F21 GR
    _move_sprite                       **** GX
    _printf                            **** GX
  0 _project_lazer                     04DC GR
  0 _row_col_to_cel                    0000 GR
  1 _selected                          01FD GR
    _set_bkg_tiles                     **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
    _show_level                        **** GX
    _show_title                        **** GX
    _show_victory                      **** GX
  0 _update_background                 0690 GR
    _wait_vbl_done                     **** GX
    _waitpad                           **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 10A2   flags 0
   1 _DATA                              size  1FF   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    5   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
