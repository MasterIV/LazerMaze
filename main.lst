                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Sun Feb 17 03:41:51 2019
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc250830
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _cursor_init
                             13 	.globl _cursor_reset
                             14 	.globl _cursor_update
                             15 	.globl _cursor_move
                             16 	.globl _cursor_toggle
                             17 	.globl _check_transition
                             18 	.globl _update_background
                             19 	.globl _init_background
                             20 	.globl _project_lazer
                             21 	.globl _determine_lazer_path
                             22 	.globl _determine_next_direction
                             23 	.globl _determine_next_lazer_stat
                             24 	.globl _row_col_to_cel
                             25 	.globl _random_music
                             26 	.globl _game_over_sound
                             27 	.globl _victory_sound
                             28 	.globl _explosion_sound
                             29 	.globl _move_cursor_sound
                             30 	.globl _init_sound
                             31 	.globl _counter
                             32 	.globl _selected
                             33 	.globl _cursor
                             34 	.globl _lazer_map
                             35 	.globl _level
                             36 	.globl _current_level
                             37 	.globl _level_objects
                             38 	.globl _display_title
                             39 	.globl _display_level
                             40 	.globl _display_victory
                             41 	.globl _display_defeat
                             42 ;--------------------------------------------------------
                             43 ; special function registers
                             44 ;--------------------------------------------------------
                             45 ;--------------------------------------------------------
                             46 ; special function bits 
                             47 ;--------------------------------------------------------
                             48 ;--------------------------------------------------------
                             49 ; internal ram data
                             50 ;--------------------------------------------------------
                             51 	.area _DATA
   0000                      52 _level_objects::
   0000                      53 	.ds 72
   0048                      54 _current_level::
   0048                      55 	.ds 360
   01B0                      56 _level::
   01B0                      57 	.ds 1
   01B1                      58 _lazer_map::
   01B1                      59 	.ds 72
   01F9                      60 _cursor::
   01F9                      61 	.ds 4
   01FD                      62 _selected::
   01FD                      63 	.ds 1
   01FE                      64 _counter::
   01FE                      65 	.ds 1
                             66 ;--------------------------------------------------------
                             67 ; overlayable items in internal ram 
                             68 ;--------------------------------------------------------
                             69 	.area _OVERLAY
                             70 ;--------------------------------------------------------
                             71 ; indirectly addressable internal ram data
                             72 ;--------------------------------------------------------
                             73 	.area _ISEG
                             74 ;--------------------------------------------------------
                             75 ; bit data
                             76 ;--------------------------------------------------------
                             77 	.area _BSEG
                             78 ;--------------------------------------------------------
                             79 ; external ram data
                             80 ;--------------------------------------------------------
                             81 	.area _XSEG
                             82 ;--------------------------------------------------------
                             83 ; global & static initialisations
                             84 ;--------------------------------------------------------
                             85 	.area _GSINIT
                             86 	.area _GSFINAL
                             87 	.area _GSINIT
                             88 ;	LazerMaze.c 8
                             89 ;	genAssign
                             90 ;	AOP_HL for _level
   0000 21 B0 01             91 	ld	hl,#_level
   0003 36 00                92 	ld	(hl),#0x00
                             93 ;--------------------------------------------------------
                             94 ; Home
                             95 ;--------------------------------------------------------
                             96 	.area _HOME
                             97 	.area _CODE
                             98 ;--------------------------------------------------------
                             99 ; code
                            100 ;--------------------------------------------------------
                            101 	.area _CODE
                            102 ;	sounds.c 1
                            103 ;	genLabel
                            104 ;	genFunction
                            105 ;	---------------------------------
                            106 ; Function init_sound
                            107 ; ---------------------------------
   0000                     108 ___init_sound_start:
   0000                     109 _init_sound:
                            110 	
                            111 ;	sounds.c 2
                            112 ;	genAssign
   0000 01 26 FF            113 	ld	bc,#0xFF26
                            114 ;	genAssign (pointer)
   0003 3E 80               115 	ld	a,#0x80
   0005 02                  116 	ld	(bc),a
                            117 ;	sounds.c 3
                            118 ;	genAssign
   0006 01 25 FF            119 	ld	bc,#0xFF25
                            120 ;	genAssign (pointer)
   0009 3E FF               121 	ld	a,#0xFF
   000B 02                  122 	ld	(bc),a
                            123 ;	sounds.c 4
                            124 ;	genAssign
   000C 01 24 FF            125 	ld	bc,#0xFF24
                            126 ;	genAssign (pointer)
   000F 3E 77               127 	ld	a,#0x77
   0011 02                  128 	ld	(bc),a
                            129 ;	genLabel
   0012                     130 00101$:
                            131 ;	genEndFunction
                            132 	
   0012 C9                  133 	ret
   0013                     134 ___init_sound_end:
                            135 ;	sounds.c 7
                            136 ;	genLabel
                            137 ;	genFunction
                            138 ;	---------------------------------
                            139 ; Function move_cursor_sound
                            140 ; ---------------------------------
   0013                     141 ___move_cursor_sound_start:
   0013                     142 _move_cursor_sound:
                            143 	
                            144 ;	sounds.c 8
                            145 ;	genAssign
   0013 01 10 FF            146 	ld	bc,#0xFF10
                            147 ;	genAssign (pointer)
   0016 3E 15               148 	ld	a,#0x15
   0018 02                  149 	ld	(bc),a
                            150 ;	sounds.c 9
                            151 ;	genAssign
   0019 01 11 FF            152 	ld	bc,#0xFF11
                            153 ;	genAssign (pointer)
   001C 3E 96               154 	ld	a,#0x96
   001E 02                  155 	ld	(bc),a
                            156 ;	sounds.c 10
                            157 ;	genAssign
   001F 01 12 FF            158 	ld	bc,#0xFF12
                            159 ;	genAssign (pointer)
   0022 3E 73               160 	ld	a,#0x73
   0024 02                  161 	ld	(bc),a
                            162 ;	sounds.c 11
                            163 ;	genAssign
   0025 01 13 FF            164 	ld	bc,#0xFF13
                            165 ;	genAssign (pointer)
   0028 3E BB               166 	ld	a,#0xBB
   002A 02                  167 	ld	(bc),a
                            168 ;	sounds.c 12
                            169 ;	genAssign
   002B 01 14 FF            170 	ld	bc,#0xFF14
                            171 ;	genAssign (pointer)
   002E 3E 85               172 	ld	a,#0x85
   0030 02                  173 	ld	(bc),a
                            174 ;	genLabel
   0031                     175 00101$:
                            176 ;	genEndFunction
                            177 	
   0031 C9                  178 	ret
   0032                     179 ___move_cursor_sound_end:
                            180 ;	sounds.c 15
                            181 ;	genLabel
                            182 ;	genFunction
                            183 ;	---------------------------------
                            184 ; Function explosion_sound
                            185 ; ---------------------------------
   0032                     186 ___explosion_sound_start:
   0032                     187 _explosion_sound:
                            188 	
                            189 ;	sounds.c 16
                            190 ;	genAssign
   0032 01 20 FF            191 	ld	bc,#0xFF20
                            192 ;	genAssign (pointer)
   0035 3E 00               193 	ld	a,#0x00
   0037 02                  194 	ld	(bc),a
                            195 ;	sounds.c 17
                            196 ;	genAssign
   0038 01 21 FF            197 	ld	bc,#0xFF21
                            198 ;	genAssign (pointer)
   003B 3E B8               199 	ld	a,#0xB8
   003D 02                  200 	ld	(bc),a
                            201 ;	sounds.c 18
                            202 ;	genAssign
   003E 01 22 FF            203 	ld	bc,#0xFF22
                            204 ;	genAssign (pointer)
   0041 3E 7B               205 	ld	a,#0x7B
   0043 02                  206 	ld	(bc),a
                            207 ;	sounds.c 19
                            208 ;	genAssign
   0044 01 23 FF            209 	ld	bc,#0xFF23
                            210 ;	genAssign (pointer)
   0047 3E C0               211 	ld	a,#0xC0
   0049 02                  212 	ld	(bc),a
                            213 ;	genLabel
   004A                     214 00101$:
                            215 ;	genEndFunction
                            216 	
   004A C9                  217 	ret
   004B                     218 ___explosion_sound_end:
                            219 ;	sounds.c 22
                            220 ;	genLabel
                            221 ;	genFunction
                            222 ;	---------------------------------
                            223 ; Function victory_sound
                            224 ; ---------------------------------
   004B                     225 ___victory_sound_start:
   004B                     226 _victory_sound:
                            227 	
                            228 ;	sounds.c 23
                            229 ;	genAssign
   004B 01 10 FF            230 	ld	bc,#0xFF10
                            231 ;	genAssign (pointer)
   004E 3E 77               232 	ld	a,#0x77
   0050 02                  233 	ld	(bc),a
                            234 ;	sounds.c 24
                            235 ;	genAssign
   0051 01 11 FF            236 	ld	bc,#0xFF11
                            237 ;	genAssign (pointer)
   0054 3E 07               238 	ld	a,#0x07
   0056 02                  239 	ld	(bc),a
                            240 ;	sounds.c 25
                            241 ;	genAssign
   0057 01 12 FF            242 	ld	bc,#0xFF12
                            243 ;	genAssign (pointer)
   005A 3E F7               244 	ld	a,#0xF7
   005C 02                  245 	ld	(bc),a
                            246 ;	sounds.c 26
                            247 ;	genAssign
   005D 01 13 FF            248 	ld	bc,#0xFF13
                            249 ;	genAssign (pointer)
   0060 3E A4               250 	ld	a,#0xA4
   0062 02                  251 	ld	(bc),a
                            252 ;	sounds.c 27
                            253 ;	genAssign
   0063 01 14 FF            254 	ld	bc,#0xFF14
                            255 ;	genAssign (pointer)
   0066 3E 86               256 	ld	a,#0x86
   0068 02                  257 	ld	(bc),a
                            258 ;	sounds.c 29
                            259 ;	genIpush
                            260 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0069 21 E2 04            261 	ld	hl,#0x04E2
   006C E5                  262 	push	hl
                            263 ;	genCall
   006D CD 00 00            264 	call	_delay
   0070 E8 02               265 	lda	sp,2(sp)
                            266 ;	sounds.c 31
                            267 ;	genAssign
   0072 01 10 FF            268 	ld	bc,#0xFF10
                            269 ;	genAssign (pointer)
   0075 3E 53               270 	ld	a,#0x53
   0077 02                  271 	ld	(bc),a
                            272 ;	sounds.c 32
                            273 ;	genAssign
   0078 01 11 FF            274 	ld	bc,#0xFF11
                            275 ;	genAssign (pointer)
   007B 3E 00               276 	ld	a,#0x00
   007D 02                  277 	ld	(bc),a
                            278 ;	sounds.c 33
                            279 ;	genAssign
   007E 01 12 FF            280 	ld	bc,#0xFF12
                            281 ;	genAssign (pointer)
   0081 3E F7               282 	ld	a,#0xF7
   0083 02                  283 	ld	(bc),a
                            284 ;	sounds.c 34
                            285 ;	genAssign
   0084 01 13 FF            286 	ld	bc,#0xFF13
                            287 ;	genAssign (pointer)
   0087 3E E2               288 	ld	a,#0xE2
   0089 02                  289 	ld	(bc),a
                            290 ;	sounds.c 35
                            291 ;	genAssign
   008A 01 14 FF            292 	ld	bc,#0xFF14
                            293 ;	genAssign (pointer)
   008D 3E 84               294 	ld	a,#0x84
   008F 02                  295 	ld	(bc),a
                            296 ;	sounds.c 36
                            297 ;	genIpush
                            298 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0090 21 64 00            299 	ld	hl,#0x0064
   0093 E5                  300 	push	hl
                            301 ;	genCall
   0094 CD 00 00            302 	call	_delay
   0097 E8 02               303 	lda	sp,2(sp)
                            304 ;	sounds.c 38
                            305 ;	genAssign
   0099 01 10 FF            306 	ld	bc,#0xFF10
                            307 ;	genAssign (pointer)
   009C 3E 53               308 	ld	a,#0x53
   009E 02                  309 	ld	(bc),a
                            310 ;	sounds.c 39
                            311 ;	genAssign
   009F 01 11 FF            312 	ld	bc,#0xFF11
                            313 ;	genAssign (pointer)
   00A2 3E 00               314 	ld	a,#0x00
   00A4 02                  315 	ld	(bc),a
                            316 ;	sounds.c 40
                            317 ;	genAssign
   00A5 01 12 FF            318 	ld	bc,#0xFF12
                            319 ;	genAssign (pointer)
   00A8 3E F7               320 	ld	a,#0xF7
   00AA 02                  321 	ld	(bc),a
                            322 ;	sounds.c 41
                            323 ;	genAssign
   00AB 01 13 FF            324 	ld	bc,#0xFF13
                            325 ;	genAssign (pointer)
   00AE 3E E2               326 	ld	a,#0xE2
   00B0 02                  327 	ld	(bc),a
                            328 ;	sounds.c 42
                            329 ;	genAssign
   00B1 01 14 FF            330 	ld	bc,#0xFF14
                            331 ;	genAssign (pointer)
   00B4 3E 84               332 	ld	a,#0x84
   00B6 02                  333 	ld	(bc),a
                            334 ;	genLabel
   00B7                     335 00101$:
                            336 ;	genEndFunction
                            337 	
   00B7 C9                  338 	ret
   00B8                     339 ___victory_sound_end:
                            340 ;	sounds.c 45
                            341 ;	genLabel
                            342 ;	genFunction
                            343 ;	---------------------------------
                            344 ; Function game_over_sound
                            345 ; ---------------------------------
   00B8                     346 ___game_over_sound_start:
   00B8                     347 _game_over_sound:
                            348 	
                            349 ;	sounds.c 46
                            350 ;	genAssign
   00B8 01 10 FF            351 	ld	bc,#0xFF10
                            352 ;	genAssign (pointer)
   00BB 3E 4F               353 	ld	a,#0x4F
   00BD 02                  354 	ld	(bc),a
                            355 ;	sounds.c 47
                            356 ;	genAssign
   00BE 01 11 FF            357 	ld	bc,#0xFF11
                            358 ;	genAssign (pointer)
   00C1 3E 96               359 	ld	a,#0x96
   00C3 02                  360 	ld	(bc),a
                            361 ;	sounds.c 48
                            362 ;	genAssign
   00C4 01 12 FF            363 	ld	bc,#0xFF12
                            364 ;	genAssign (pointer)
   00C7 3E B7               365 	ld	a,#0xB7
   00C9 02                  366 	ld	(bc),a
                            367 ;	sounds.c 49
                            368 ;	genAssign
   00CA 01 13 FF            369 	ld	bc,#0xFF13
                            370 ;	genAssign (pointer)
   00CD 3E BB               371 	ld	a,#0xBB
   00CF 02                  372 	ld	(bc),a
                            373 ;	sounds.c 50
                            374 ;	genAssign
   00D0 01 14 FF            375 	ld	bc,#0xFF14
                            376 ;	genAssign (pointer)
   00D3 3E 85               377 	ld	a,#0x85
   00D5 02                  378 	ld	(bc),a
                            379 ;	genLabel
   00D6                     380 00101$:
                            381 ;	genEndFunction
                            382 	
   00D6 C9                  383 	ret
   00D7                     384 ___game_over_sound_end:
                            385 ;	sounds.c 53
                            386 ;	genLabel
                            387 ;	genFunction
                            388 ;	---------------------------------
                            389 ; Function random_music
                            390 ; ---------------------------------
   00D7                     391 ___random_music_start:
   00D7                     392 _random_music:
   00D7 E8 FF               393 	lda	sp,-1(sp)
                            394 ;	sounds.c 55
                            395 ;	genAssign
                            396 ;	AOP_STK for _random_music_i_1_1
   00D9 F8 00               397 	lda	hl,0(sp)
   00DB 36 00               398 	ld	(hl),#0x00
                            399 ;	genLabel
   00DD                     400 00101$:
                            401 ;	genCmpEq
                            402 ;	AOP_STK for _random_music_i_1_1
                            403 ; genCmpEq: left 1, right 1, result 0
   00DD F8 00               404 	lda	hl,0(sp)
   00DF 7E                  405 	ld	a,(hl)
   00E0 FE 06               406 	cp	a,#0x06
   00E2 CA 0F 01            407 	jp	z,00104$
   00E5                     408 00127$:
                            409 ;	sounds.c 56
                            410 ;	genAssign
   00E5 06 16               411 	ld	b,#0x16
   00E7 0E FF               412 	ld	c,#0xFF
                            413 ;	genAssign (pointer)
   00E9 58                  414 	ld	e,b
   00EA 51                  415 	ld	d,c
   00EB 3E 00               416 	ld	a,#0x00
   00ED 12                  417 	ld	(de),a
                            418 ;	sounds.c 57
                            419 ;	genAssign
   00EE 01 17 FF            420 	ld	bc,#0xFF17
                            421 ;	genAssign (pointer)
   00F1 3E F1               422 	ld	a,#0xF1
   00F3 02                  423 	ld	(bc),a
                            424 ;	sounds.c 58
                            425 ;	genAssign
   00F4 01 18 FF            426 	ld	bc,#0xFF18
                            427 ;	genAssign (pointer)
   00F7 3E B6               428 	ld	a,#0xB6
   00F9 02                  429 	ld	(bc),a
                            430 ;	sounds.c 59
                            431 ;	genAssign
   00FA 01 19 FF            432 	ld	bc,#0xFF19
                            433 ;	genAssign (pointer)
   00FD 3E 83               434 	ld	a,#0x83
   00FF 02                  435 	ld	(bc),a
                            436 ;	sounds.c 61
                            437 ;	genIpush
                            438 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0100 21 AA 00            439 	ld	hl,#0x00AA
   0103 E5                  440 	push	hl
                            441 ;	genCall
   0104 CD 00 00            442 	call	_delay
   0107 E8 02               443 	lda	sp,2(sp)
                            444 ;	sounds.c 55
                            445 ;	genPlus
                            446 ;	AOP_STK for _random_music_i_1_1
                            447 ;	genPlusIncr
   0109 F8 00               448 	lda	hl,0(sp)
   010B 34                  449 	inc	(hl)
                            450 ;	genGoto
   010C C3 DD 00            451 	jp	00101$
                            452 ;	genLabel
   010F                     453 00104$:
                            454 ;	sounds.c 64
                            455 ;	genAssign
                            456 ;	AOP_STK for _random_music_i_1_1
   010F F8 00               457 	lda	hl,0(sp)
   0111 36 00               458 	ld	(hl),#0x00
                            459 ;	genLabel
   0113                     460 00105$:
                            461 ;	genCmpEq
                            462 ;	AOP_STK for _random_music_i_1_1
                            463 ; genCmpEq: left 1, right 1, result 0
   0113 F8 00               464 	lda	hl,0(sp)
   0115 7E                  465 	ld	a,(hl)
   0116 FE 06               466 	cp	a,#0x06
   0118 CA 42 01            467 	jp	z,00108$
   011B                     468 00128$:
                            469 ;	sounds.c 65
                            470 ;	genAssign
   011B 01 16 FF            471 	ld	bc,#0xFF16
                            472 ;	genAssign (pointer)
   011E 3E 00               473 	ld	a,#0x00
   0120 02                  474 	ld	(bc),a
                            475 ;	sounds.c 66
                            476 ;	genAssign
   0121 01 17 FF            477 	ld	bc,#0xFF17
                            478 ;	genAssign (pointer)
   0124 3E B1               479 	ld	a,#0xB1
   0126 02                  480 	ld	(bc),a
                            481 ;	sounds.c 67
                            482 ;	genAssign
   0127 01 18 FF            483 	ld	bc,#0xFF18
                            484 ;	genAssign (pointer)
   012A 3E E2               485 	ld	a,#0xE2
   012C 02                  486 	ld	(bc),a
                            487 ;	sounds.c 68
                            488 ;	genAssign
   012D 01 19 FF            489 	ld	bc,#0xFF19
                            490 ;	genAssign (pointer)
   0130 3E 84               491 	ld	a,#0x84
   0132 02                  492 	ld	(bc),a
                            493 ;	sounds.c 70
                            494 ;	genIpush
                            495 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0133 21 AA 00            496 	ld	hl,#0x00AA
   0136 E5                  497 	push	hl
                            498 ;	genCall
   0137 CD 00 00            499 	call	_delay
   013A E8 02               500 	lda	sp,2(sp)
                            501 ;	sounds.c 64
                            502 ;	genPlus
                            503 ;	AOP_STK for _random_music_i_1_1
                            504 ;	genPlusIncr
   013C F8 00               505 	lda	hl,0(sp)
   013E 34                  506 	inc	(hl)
                            507 ;	genGoto
   013F C3 13 01            508 	jp	00105$
                            509 ;	genLabel
   0142                     510 00108$:
                            511 ;	sounds.c 73
                            512 ;	genAssign
                            513 ;	AOP_STK for _random_music_i_1_1
   0142 F8 00               514 	lda	hl,0(sp)
   0144 36 00               515 	ld	(hl),#0x00
                            516 ;	genLabel
   0146                     517 00109$:
                            518 ;	genCmpEq
                            519 ;	AOP_STK for _random_music_i_1_1
                            520 ; genCmpEq: left 1, right 1, result 0
   0146 F8 00               521 	lda	hl,0(sp)
   0148 7E                  522 	ld	a,(hl)
   0149 FE 06               523 	cp	a,#0x06
   014B CA 75 01            524 	jp	z,00112$
   014E                     525 00129$:
                            526 ;	sounds.c 74
                            527 ;	genAssign
   014E 01 16 FF            528 	ld	bc,#0xFF16
                            529 ;	genAssign (pointer)
   0151 3E 80               530 	ld	a,#0x80
   0153 02                  531 	ld	(bc),a
                            532 ;	sounds.c 75
                            533 ;	genAssign
   0154 01 17 FF            534 	ld	bc,#0xFF17
                            535 ;	genAssign (pointer)
   0157 3E B1               536 	ld	a,#0xB1
   0159 02                  537 	ld	(bc),a
                            538 ;	sounds.c 76
                            539 ;	genAssign
   015A 01 18 FF            540 	ld	bc,#0xFF18
                            541 ;	genAssign (pointer)
   015D 3E 0E               542 	ld	a,#0x0E
   015F 02                  543 	ld	(bc),a
                            544 ;	sounds.c 77
                            545 ;	genAssign
   0160 01 19 FF            546 	ld	bc,#0xFF19
                            547 ;	genAssign (pointer)
   0163 3E 86               548 	ld	a,#0x86
   0165 02                  549 	ld	(bc),a
                            550 ;	sounds.c 79
                            551 ;	genIpush
                            552 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0166 21 AA 00            553 	ld	hl,#0x00AA
   0169 E5                  554 	push	hl
                            555 ;	genCall
   016A CD 00 00            556 	call	_delay
   016D E8 02               557 	lda	sp,2(sp)
                            558 ;	sounds.c 73
                            559 ;	genPlus
                            560 ;	AOP_STK for _random_music_i_1_1
                            561 ;	genPlusIncr
   016F F8 00               562 	lda	hl,0(sp)
   0171 34                  563 	inc	(hl)
                            564 ;	genGoto
   0172 C3 46 01            565 	jp	00109$
                            566 ;	genLabel
   0175                     567 00112$:
                            568 ;	sounds.c 82
                            569 ;	genAssign
                            570 ;	AOP_STK for _random_music_i_1_1
   0175 F8 00               571 	lda	hl,0(sp)
   0177 36 00               572 	ld	(hl),#0x00
                            573 ;	genLabel
   0179                     574 00113$:
                            575 ;	genCmpEq
                            576 ;	AOP_STK for _random_music_i_1_1
                            577 ; genCmpEq: left 1, right 1, result 0
   0179 F8 00               578 	lda	hl,0(sp)
   017B 7E                  579 	ld	a,(hl)
   017C FE 06               580 	cp	a,#0x06
   017E CA A8 01            581 	jp	z,00117$
   0181                     582 00130$:
                            583 ;	sounds.c 83
                            584 ;	genAssign
   0181 01 16 FF            585 	ld	bc,#0xFF16
                            586 ;	genAssign (pointer)
   0184 3E 40               587 	ld	a,#0x40
   0186 02                  588 	ld	(bc),a
                            589 ;	sounds.c 84
                            590 ;	genAssign
   0187 01 17 FF            591 	ld	bc,#0xFF17
                            592 ;	genAssign (pointer)
   018A 3E B1               593 	ld	a,#0xB1
   018C 02                  594 	ld	(bc),a
                            595 ;	sounds.c 85
                            596 ;	genAssign
   018D 01 18 FF            597 	ld	bc,#0xFF18
                            598 ;	genAssign (pointer)
   0190 3E 58               599 	ld	a,#0x58
   0192 02                  600 	ld	(bc),a
                            601 ;	sounds.c 86
                            602 ;	genAssign
   0193 01 19 FF            603 	ld	bc,#0xFF19
                            604 ;	genAssign (pointer)
   0196 3E 82               605 	ld	a,#0x82
   0198 02                  606 	ld	(bc),a
                            607 ;	sounds.c 88
                            608 ;	genIpush
                            609 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0199 21 AA 00            610 	ld	hl,#0x00AA
   019C E5                  611 	push	hl
                            612 ;	genCall
   019D CD 00 00            613 	call	_delay
   01A0 E8 02               614 	lda	sp,2(sp)
                            615 ;	sounds.c 82
                            616 ;	genPlus
                            617 ;	AOP_STK for _random_music_i_1_1
                            618 ;	genPlusIncr
   01A2 F8 00               619 	lda	hl,0(sp)
   01A4 34                  620 	inc	(hl)
                            621 ;	genGoto
   01A5 C3 79 01            622 	jp	00113$
                            623 ;	genLabel
   01A8                     624 00117$:
                            625 ;	genEndFunction
   01A8 E8 01               626 	lda	sp,1(sp)
   01AA C9                  627 	ret
   01AB                     628 ___random_music_end:
                            629 ;	lazer.c 12
                            630 ;	genLabel
                            631 ;	genFunction
                            632 ;	---------------------------------
                            633 ; Function row_col_to_cel
                            634 ; ---------------------------------
   01AB                     635 ___row_col_to_cel_start:
   01AB                     636 _row_col_to_cel:
                            637 	
                            638 ;	lazer.c 13
                            639 ;	genLeftShift
                            640 ;	AOP_STK for 
   01AB F8 02               641 	lda	hl,2(sp)
   01AD 4E                  642 	ld	c,(hl)
   01AE 23                  643 	inc	hl
   01AF 46                  644 	ld	b,(hl)
   01B0 3E 04               645 	ld	a,#0x03+1
   01B2 18 04               646 	jr	00104$
   01B4                     647 00103$:
   01B4 CB 21               648 	sla	c
   01B6 CB 10               649 	rl	b
   01B8                     650 00104$:
   01B8 3D                  651 	dec	a
   01B9 20 F9               652 	jr	nz,00103$
                            653 ;	genPlus
                            654 ;	AOP_STK for 
                            655 ;	Can't optimise plus by inc, falling back to the normal way
   01BB F8 02               656 	lda	hl,2(sp)
   01BD 2A                  657 	ld	a,(hl+)
   01BE 66                  658 	ld	h,(hl)
   01BF 6F                  659 	ld	l,a
   01C0 09                  660 	add	hl,bc
   01C1 4D                  661 	ld	c,l
   01C2 44                  662 	ld	b,h
                            663 ;	genPlus
                            664 ;	AOP_STK for 
                            665 ;	Can't optimise plus by inc, falling back to the normal way
   01C3 F8 04               666 	lda	hl,4(sp)
   01C5 2A                  667 	ld	a,(hl+)
   01C6 66                  668 	ld	h,(hl)
   01C7 6F                  669 	ld	l,a
   01C8 09                  670 	add	hl,bc
   01C9 4D                  671 	ld	c,l
   01CA 44                  672 	ld	b,h
                            673 ;	genRet
   01CB 59                  674 	ld	e,c
   01CC 50                  675 	ld	d,b
                            676 ;	genLabel
   01CD                     677 00101$:
                            678 ;	genEndFunction
                            679 	
   01CD C9                  680 	ret
   01CE                     681 ___row_col_to_cel_end:
                            682 ;	lazer.c 16
                            683 ;	genLabel
                            684 ;	genFunction
                            685 ;	---------------------------------
                            686 ; Function determine_next_lazer_stat
                            687 ; ---------------------------------
   01CE                     688 ___determine_next_lazer_stat_start:
   01CE                     689 _determine_next_lazer_stat:
                            690 	
                            691 ;	lazer.c 17
                            692 ;	genCmpEq
                            693 ;	AOP_STK for 
                            694 ; genCmpEq: left 1, right 1, result 0
   01CE F8 02               695 	lda	hl,2(sp)
   01D0 7E                  696 	ld	a,(hl)
   01D1 FE 08               697 	cp	a,#0x08
   01D3 CA EB 02            698 	jp	z,00133$
   01D6                     699 00167$:
                            700 ;	genCmpEq
                            701 ;	AOP_STK for 
                            702 ; genCmpEq: left 1, right 1, result 0
   01D6 F8 02               703 	lda	hl,2(sp)
   01D8 7E                  704 	ld	a,(hl)
   01D9 FE 18               705 	cp	a,#0x18
   01DB CA 5B 02            706 	jp	z,00114$
   01DE                     707 00168$:
                            708 ;	genCmpEq
                            709 ;	AOP_STK for 
                            710 ; genCmpEq: left 1, right 1, result 0
   01DE F8 02               711 	lda	hl,2(sp)
   01E0 7E                  712 	ld	a,(hl)
   01E1 FE 28               713 	cp	a,#0x28
   01E3 CA 29 02            714 	jp	z,00107$
   01E6                     715 00169$:
                            716 ;	genCmpEq
                            717 ;	AOP_STK for 
                            718 ; genCmpEq: left 1, right 1, result 0
   01E6 F8 02               719 	lda	hl,2(sp)
   01E8 7E                  720 	ld	a,(hl)
   01E9 FE 38               721 	cp	a,#0x38
   01EB CA EB 02            722 	jp	z,00133$
   01EE                     723 00170$:
                            724 ;	genCmpEq
                            725 ;	AOP_STK for 
                            726 ; genCmpEq: left 1, right 1, result 0
   01EE F8 02               727 	lda	hl,2(sp)
   01F0 7E                  728 	ld	a,(hl)
   01F1 FE 58               729 	cp	a,#0x58
   01F3 CA A6 02            730 	jp	z,00120$
   01F6                     731 00171$:
                            732 ;	genCmpEq
                            733 ;	AOP_STK for 
                            734 ; genCmpEq: left 1, right 1, result 0
   01F6 F8 02               735 	lda	hl,2(sp)
   01F8 7E                  736 	ld	a,(hl)
   01F9 FE 60               737 	cp	a,#0x60
   01FB CA D4 02            738 	jp	z,00126$
   01FE                     739 00172$:
                            740 ;	genCmpEq
                            741 ;	AOP_STK for 
                            742 ; genCmpEq: left 1, right 1, result 0
   01FE F8 02               743 	lda	hl,2(sp)
   0200 7E                  744 	ld	a,(hl)
   0201 FE 68               745 	cp	a,#0x68
   0203 CA 1D 03            746 	jp	z,00136$
   0206                     747 00173$:
                            748 ;	genCmpEq
                            749 ;	AOP_STK for 
                            750 ; genCmpEq: left 1, right 1, result 0
   0206 F8 02               751 	lda	hl,2(sp)
   0208 7E                  752 	ld	a,(hl)
   0209 FE 70               753 	cp	a,#0x70
   020B CA 8F 02            754 	jp	z,00117$
   020E                     755 00174$:
                            756 ;	genCmpEq
                            757 ;	AOP_STK for 
                            758 ; genCmpEq: left 1, right 1, result 0
   020E F8 02               759 	lda	hl,2(sp)
   0210 7E                  760 	ld	a,(hl)
   0211 FE 78               761 	cp	a,#0x78
   0213 CA BD 02            762 	jp	z,00123$
   0216                     763 00175$:
                            764 ;	genCmpEq
                            765 ;	AOP_STK for 
                            766 ; genCmpEq: left 1, right 1, result 0
   0216 F8 02               767 	lda	hl,2(sp)
   0218 7E                  768 	ld	a,(hl)
   0219 FE 84               769 	cp	a,#0x84
   021B CA 1D 03            770 	jp	z,00136$
   021E                     771 00176$:
                            772 ;	genCmpEq
                            773 ;	AOP_STK for 
                            774 ; genCmpEq: left 1, right 1, result 0
   021E F8 02               775 	lda	hl,2(sp)
   0220 7E                  776 	ld	a,(hl)
   0221 FE 8C               777 	cp	a,#0x8C
   0223 CA EB 02            778 	jp	z,00133$
   0226                     779 00177$:
                            780 ;	genGoto
   0226 C3 22 03            781 	jp	00138$
                            782 ;	lazer.c 28
                            783 ;	genLabel
   0229                     784 00107$:
                            785 ;	lazer.c 19
                            786 ;	genCmpEq
                            787 ;	AOP_STK for 
                            788 ; genCmpEq: left 1, right 1, result 0
   0229 F8 03               789 	lda	hl,3(sp)
   022B 7E                  790 	ld	a,(hl)
   022C FE 01               791 	cp	a,#0x01
   022E CA 4C 02            792 	jp	z,00101$
   0231                     793 00178$:
                            794 ;	genCmpEq
                            795 ;	AOP_STK for 
                            796 ; genCmpEq: left 1, right 1, result 0
   0231 F8 03               797 	lda	hl,3(sp)
   0233 7E                  798 	ld	a,(hl)
   0234 FE 02               799 	cp	a,#0x02
   0236 CA 4C 02            800 	jp	z,00101$
   0239                     801 00179$:
                            802 ;	genCmpEq
                            803 ;	AOP_STK for 
                            804 ; genCmpEq: left 1, right 1, result 0
   0239 F8 03               805 	lda	hl,3(sp)
   023B 7E                  806 	ld	a,(hl)
   023C FE 04               807 	cp	a,#0x04
   023E CA 51 02            808 	jp	z,00103$
   0241                     809 00180$:
                            810 ;	genCmpEq
                            811 ;	AOP_STK for 
                            812 ; genCmpEq: left 1, right 1, result 0
   0241 F8 03               813 	lda	hl,3(sp)
   0243 7E                  814 	ld	a,(hl)
   0244 FE 08               815 	cp	a,#0x08
   0246 CA 51 02            816 	jp	z,00103$
   0249                     817 00181$:
                            818 ;	genGoto
   0249 C3 56 02            819 	jp	00105$
                            820 ;	lazer.c 22
                            821 ;	genLabel
   024C                     822 00101$:
                            823 ;	genRet
   024C 1E 04               824 	ld	e,#0x04
   024E C3 24 03            825 	jp	00139$
                            826 ;	lazer.c 25
                            827 ;	genLabel
   0251                     828 00103$:
                            829 ;	genRet
   0251 1E 08               830 	ld	e,#0x08
   0253 C3 24 03            831 	jp	00139$
                            832 ;	lazer.c 27
                            833 ;	genLabel
   0256                     834 00105$:
                            835 ;	genRet
   0256 1E 00               836 	ld	e,#0x00
   0258 C3 24 03            837 	jp	00139$
                            838 ;	lazer.c 39
                            839 ;	genLabel
   025B                     840 00114$:
                            841 ;	lazer.c 30
                            842 ;	genCmpEq
                            843 ;	AOP_STK for 
                            844 ; genCmpEq: left 1, right 1, result 0
   025B F8 03               845 	lda	hl,3(sp)
   025D 7E                  846 	ld	a,(hl)
   025E FE 01               847 	cp	a,#0x01
   0260 CA 80 02            848 	jp	z,00108$
   0263                     849 00182$:
                            850 ;	genCmpEq
                            851 ;	AOP_STK for 
                            852 ; genCmpEq: left 1, right 1, result 0
   0263 F8 03               853 	lda	hl,3(sp)
   0265 7E                  854 	ld	a,(hl)
   0266 FE 02               855 	cp	a,#0x02
   0268 CA 85 02            856 	jp	z,00110$
   026B                     857 00183$:
                            858 ;	genCmpEq
                            859 ;	AOP_STK for 
                            860 ; genCmpEq: left 1, right 1, result 0
   026B F8 03               861 	lda	hl,3(sp)
   026D 7E                  862 	ld	a,(hl)
   026E FE 04               863 	cp	a,#0x04
   0270 CA 85 02            864 	jp	z,00110$
   0273                     865 00184$:
                            866 ;	genCmpEq
                            867 ;	AOP_STK for 
                            868 ; genCmpEq: left 1, right 1, result 0
   0273 F8 03               869 	lda	hl,3(sp)
   0275 7E                  870 	ld	a,(hl)
   0276 FE 08               871 	cp	a,#0x08
   0278 C2 8A 02            872 	jp	nz,00112$
   027B 18 03               873 	jr	00186$
   027D                     874 00185$:
   027D C3 8A 02            875 	jp	00112$
   0280                     876 00186$:
                            877 ;	lazer.c 33
                            878 ;	genLabel
   0280                     879 00108$:
                            880 ;	genRet
   0280 1E 04               881 	ld	e,#0x04
   0282 C3 24 03            882 	jp	00139$
                            883 ;	lazer.c 36
                            884 ;	genLabel
   0285                     885 00110$:
                            886 ;	genRet
   0285 1E 08               887 	ld	e,#0x08
   0287 C3 24 03            888 	jp	00139$
                            889 ;	lazer.c 38
                            890 ;	genLabel
   028A                     891 00112$:
                            892 ;	genRet
   028A 1E 00               893 	ld	e,#0x00
   028C C3 24 03            894 	jp	00139$
                            895 ;	lazer.c 44
                            896 ;	genLabel
   028F                     897 00117$:
                            898 ;	lazer.c 41
                            899 ;	genCmpEq
                            900 ;	AOP_STK for 
                            901 ; genCmpEq: left 1, right 1, result 0
   028F F8 03               902 	lda	hl,3(sp)
   0291 7E                  903 	ld	a,(hl)
   0292 FE 04               904 	cp	a,#0x04
   0294 C2 A1 02            905 	jp	nz,00116$
   0297 18 03               906 	jr	00188$
   0299                     907 00187$:
   0299 C3 A1 02            908 	jp	00116$
   029C                     909 00188$:
                            910 ;	lazer.c 42
                            911 ;	genRet
   029C 1E 04               912 	ld	e,#0x04
   029E C3 24 03            913 	jp	00139$
                            914 ;	genLabel
   02A1                     915 00116$:
                            916 ;	lazer.c 44
                            917 ;	genRet
   02A1 1E 00               918 	ld	e,#0x00
   02A3 C3 24 03            919 	jp	00139$
                            920 ;	lazer.c 49
                            921 ;	genLabel
   02A6                     922 00120$:
                            923 ;	lazer.c 46
                            924 ;	genCmpEq
                            925 ;	AOP_STK for 
                            926 ; genCmpEq: left 1, right 1, result 0
   02A6 F8 03               927 	lda	hl,3(sp)
   02A8 7E                  928 	ld	a,(hl)
   02A9 FE 08               929 	cp	a,#0x08
   02AB C2 B8 02            930 	jp	nz,00119$
   02AE 18 03               931 	jr	00190$
   02B0                     932 00189$:
   02B0 C3 B8 02            933 	jp	00119$
   02B3                     934 00190$:
                            935 ;	lazer.c 47
                            936 ;	genRet
   02B3 1E 04               937 	ld	e,#0x04
   02B5 C3 24 03            938 	jp	00139$
                            939 ;	genLabel
   02B8                     940 00119$:
                            941 ;	lazer.c 49
                            942 ;	genRet
   02B8 1E 00               943 	ld	e,#0x00
   02BA C3 24 03            944 	jp	00139$
                            945 ;	lazer.c 54
                            946 ;	genLabel
   02BD                     947 00123$:
                            948 ;	lazer.c 51
                            949 ;	genCmpEq
                            950 ;	AOP_STK for 
                            951 ; genCmpEq: left 1, right 1, result 0
   02BD F8 03               952 	lda	hl,3(sp)
   02BF 7E                  953 	ld	a,(hl)
   02C0 FE 02               954 	cp	a,#0x02
   02C2 C2 CF 02            955 	jp	nz,00122$
   02C5 18 03               956 	jr	00192$
   02C7                     957 00191$:
   02C7 C3 CF 02            958 	jp	00122$
   02CA                     959 00192$:
                            960 ;	lazer.c 52
                            961 ;	genRet
   02CA 1E 04               962 	ld	e,#0x04
   02CC C3 24 03            963 	jp	00139$
                            964 ;	genLabel
   02CF                     965 00122$:
                            966 ;	lazer.c 54
                            967 ;	genRet
   02CF 1E 00               968 	ld	e,#0x00
   02D1 C3 24 03            969 	jp	00139$
                            970 ;	lazer.c 59
                            971 ;	genLabel
   02D4                     972 00126$:
                            973 ;	lazer.c 56
                            974 ;	genCmpEq
                            975 ;	AOP_STK for 
                            976 ; genCmpEq: left 1, right 1, result 0
   02D4 F8 03               977 	lda	hl,3(sp)
   02D6 7E                  978 	ld	a,(hl)
   02D7 FE 01               979 	cp	a,#0x01
   02D9 C2 E6 02            980 	jp	nz,00125$
   02DC 18 03               981 	jr	00194$
   02DE                     982 00193$:
   02DE C3 E6 02            983 	jp	00125$
   02E1                     984 00194$:
                            985 ;	lazer.c 57
                            986 ;	genRet
   02E1 1E 04               987 	ld	e,#0x04
   02E3 C3 24 03            988 	jp	00139$
                            989 ;	genLabel
   02E6                     990 00125$:
                            991 ;	lazer.c 59
                            992 ;	genRet
   02E6 1E 00               993 	ld	e,#0x00
   02E8 C3 24 03            994 	jp	00139$
                            995 ;	lazer.c 73
                            996 ;	genLabel
   02EB                     997 00133$:
                            998 ;	lazer.c 64
                            999 ;	genCmpEq
                           1000 ;	AOP_STK for 
                           1001 ; genCmpEq: left 1, right 1, result 0
   02EB F8 03              1002 	lda	hl,3(sp)
   02ED 7E                 1003 	ld	a,(hl)
   02EE FE 01              1004 	cp	a,#0x01
   02F0 CA 0E 03           1005 	jp	z,00127$
   02F3                    1006 00195$:
                           1007 ;	genCmpEq
                           1008 ;	AOP_STK for 
                           1009 ; genCmpEq: left 1, right 1, result 0
   02F3 F8 03              1010 	lda	hl,3(sp)
   02F5 7E                 1011 	ld	a,(hl)
   02F6 FE 02              1012 	cp	a,#0x02
   02F8 CA 13 03           1013 	jp	z,00129$
   02FB                    1014 00196$:
                           1015 ;	genCmpEq
                           1016 ;	AOP_STK for 
                           1017 ; genCmpEq: left 1, right 1, result 0
   02FB F8 03              1018 	lda	hl,3(sp)
   02FD 7E                 1019 	ld	a,(hl)
   02FE FE 04              1020 	cp	a,#0x04
   0300 CA 0E 03           1021 	jp	z,00127$
   0303                    1022 00197$:
                           1023 ;	genCmpEq
                           1024 ;	AOP_STK for 
                           1025 ; genCmpEq: left 1, right 1, result 0
   0303 F8 03              1026 	lda	hl,3(sp)
   0305 7E                 1027 	ld	a,(hl)
   0306 FE 08              1028 	cp	a,#0x08
   0308 CA 13 03           1029 	jp	z,00129$
   030B                    1030 00198$:
                           1031 ;	genGoto
   030B C3 18 03           1032 	jp	00131$
                           1033 ;	lazer.c 67
                           1034 ;	genLabel
   030E                    1035 00127$:
                           1036 ;	genRet
   030E 1E 04              1037 	ld	e,#0x04
   0310 C3 24 03           1038 	jp	00139$
                           1039 ;	lazer.c 70
                           1040 ;	genLabel
   0313                    1041 00129$:
                           1042 ;	genRet
   0313 1E 08              1043 	ld	e,#0x08
   0315 C3 24 03           1044 	jp	00139$
                           1045 ;	lazer.c 72
                           1046 ;	genLabel
   0318                    1047 00131$:
                           1048 ;	genRet
   0318 1E 00              1049 	ld	e,#0x00
   031A C3 24 03           1050 	jp	00139$
                           1051 ;	lazer.c 76
                           1052 ;	genLabel
   031D                    1053 00136$:
                           1054 ;	genRet
   031D 1E 04              1055 	ld	e,#0x04
   031F C3 24 03           1056 	jp	00139$
                           1057 ;	lazer.c 78
                           1058 ;	genLabel
   0322                    1059 00138$:
                           1060 ;	lazer.c 79
                           1061 ;	genRet
   0322 1E 00              1062 	ld	e,#0x00
                           1063 ;	genLabel
   0324                    1064 00139$:
                           1065 ;	genEndFunction
                           1066 	
   0324 C9                 1067 	ret
   0325                    1068 ___determine_next_lazer_stat_end:
                           1069 ;	lazer.c 82
                           1070 ;	genLabel
                           1071 ;	genFunction
                           1072 ;	---------------------------------
                           1073 ; Function determine_next_direction
                           1074 ; ---------------------------------
   0325                    1075 ___determine_next_direction_start:
   0325                    1076 _determine_next_direction:
                           1077 	
                           1078 ;	lazer.c 83
                           1079 ;	genCmpEq
                           1080 ;	AOP_STK for 
                           1081 ; genCmpEq: left 1, right 1, result 0
   0325 F8 02              1082 	lda	hl,2(sp)
   0327 7E                 1083 	ld	a,(hl)
   0328 FE 18              1084 	cp	a,#0x18
   032A CA C3 03           1085 	jp	z,00119$
   032D                    1086 00157$:
                           1087 ;	genCmpEq
                           1088 ;	AOP_STK for 
                           1089 ; genCmpEq: left 1, right 1, result 0
   032D F8 02              1090 	lda	hl,2(sp)
   032F 7E                 1091 	ld	a,(hl)
   0330 FE 28              1092 	cp	a,#0x28
   0332 CA 87 03           1093 	jp	z,00112$
   0335                    1094 00158$:
                           1095 ;	genCmpEq
                           1096 ;	AOP_STK for 
                           1097 ; genCmpEq: left 1, right 1, result 0
   0335 F8 02              1098 	lda	hl,2(sp)
   0337 7E                 1099 	ld	a,(hl)
   0338 FE 48              1100 	cp	a,#0x48
   033A CA 82 03           1101 	jp	z,00101$
   033D                    1102 00159$:
                           1103 ;	genCmpEq
                           1104 ;	AOP_STK for 
                           1105 ; genCmpEq: left 1, right 1, result 0
   033D F8 02              1106 	lda	hl,2(sp)
   033F 7E                 1107 	ld	a,(hl)
   0340 FE 4C              1108 	cp	a,#0x4C
   0342 CA 82 03           1109 	jp	z,00101$
   0345                    1110 00160$:
                           1111 ;	genCmpEq
                           1112 ;	AOP_STK for 
                           1113 ; genCmpEq: left 1, right 1, result 0
   0345 F8 02              1114 	lda	hl,2(sp)
   0347 7E                 1115 	ld	a,(hl)
   0348 FE 58              1116 	cp	a,#0x58
   034A CA 16 04           1117 	jp	z,00125$
   034D                    1118 00161$:
                           1119 ;	genCmpEq
                           1120 ;	AOP_STK for 
                           1121 ; genCmpEq: left 1, right 1, result 0
   034D F8 02              1122 	lda	hl,2(sp)
   034F 7E                 1123 	ld	a,(hl)
   0350 FE 60              1124 	cp	a,#0x60
   0352 CA 44 04           1125 	jp	z,00131$
   0355                    1126 00162$:
                           1127 ;	genCmpEq
                           1128 ;	AOP_STK for 
                           1129 ; genCmpEq: left 1, right 1, result 0
   0355 F8 02              1130 	lda	hl,2(sp)
   0357 7E                 1131 	ld	a,(hl)
   0358 FE 68              1132 	cp	a,#0x68
   035A CA 82 03           1133 	jp	z,00101$
   035D                    1134 00163$:
                           1135 ;	genCmpEq
                           1136 ;	AOP_STK for 
                           1137 ; genCmpEq: left 1, right 1, result 0
   035D F8 02              1138 	lda	hl,2(sp)
   035F 7E                 1139 	ld	a,(hl)
   0360 FE 70              1140 	cp	a,#0x70
   0362 CA FF 03           1141 	jp	z,00122$
   0365                    1142 00164$:
                           1143 ;	genCmpEq
                           1144 ;	AOP_STK for 
                           1145 ; genCmpEq: left 1, right 1, result 0
   0365 F8 02              1146 	lda	hl,2(sp)
   0367 7E                 1147 	ld	a,(hl)
   0368 FE 78              1148 	cp	a,#0x78
   036A CA 2D 04           1149 	jp	z,00128$
   036D                    1150 00165$:
                           1151 ;	genCmpEq
                           1152 ;	AOP_STK for 
                           1153 ; genCmpEq: left 1, right 1, result 0
   036D F8 02              1154 	lda	hl,2(sp)
   036F 7E                 1155 	ld	a,(hl)
   0370 FE 80              1156 	cp	a,#0x80
   0372 CA 82 03           1157 	jp	z,00101$
   0375                    1158 00166$:
                           1159 ;	genCmpEq
                           1160 ;	AOP_STK for 
                           1161 ; genCmpEq: left 1, right 1, result 0
   0375 F8 02              1162 	lda	hl,2(sp)
   0377 7E                 1163 	ld	a,(hl)
   0378 FE 84              1164 	cp	a,#0x84
   037A C2 5B 04           1165 	jp	nz,00132$
   037D 18 03              1166 	jr	00168$
   037F                    1167 00167$:
   037F C3 5B 04           1168 	jp	00132$
   0382                    1169 00168$:
                           1170 ;	lazer.c 89
                           1171 ;	genLabel
   0382                    1172 00101$:
                           1173 ;	genRet
   0382 1E 00              1174 	ld	e,#0x00
   0384 C3 5E 04           1175 	jp	00133$
                           1176 ;	lazer.c 102
                           1177 ;	genLabel
   0387                    1178 00112$:
                           1179 ;	lazer.c 91
                           1180 ;	genCmpEq
                           1181 ;	AOP_STK for 
                           1182 ; genCmpEq: left 1, right 1, result 0
   0387 F8 03              1183 	lda	hl,3(sp)
   0389 7E                 1184 	ld	a,(hl)
   038A FE 01              1185 	cp	a,#0x01
   038C CA AA 03           1186 	jp	z,00106$
   038F                    1187 00169$:
                           1188 ;	genCmpEq
                           1189 ;	AOP_STK for 
                           1190 ; genCmpEq: left 1, right 1, result 0
   038F F8 03              1191 	lda	hl,3(sp)
   0391 7E                 1192 	ld	a,(hl)
   0392 FE 02              1193 	cp	a,#0x02
   0394 CA AF 03           1194 	jp	z,00107$
   0397                    1195 00170$:
                           1196 ;	genCmpEq
                           1197 ;	AOP_STK for 
                           1198 ; genCmpEq: left 1, right 1, result 0
   0397 F8 03              1199 	lda	hl,3(sp)
   0399 7E                 1200 	ld	a,(hl)
   039A FE 04              1201 	cp	a,#0x04
   039C CA B4 03           1202 	jp	z,00108$
   039F                    1203 00171$:
                           1204 ;	genCmpEq
                           1205 ;	AOP_STK for 
                           1206 ; genCmpEq: left 1, right 1, result 0
   039F F8 03              1207 	lda	hl,3(sp)
   03A1 7E                 1208 	ld	a,(hl)
   03A2 FE 08              1209 	cp	a,#0x08
   03A4 CA B9 03           1210 	jp	z,00109$
   03A7                    1211 00172$:
                           1212 ;	genGoto
   03A7 C3 BE 03           1213 	jp	00110$
                           1214 ;	lazer.c 93
                           1215 ;	genLabel
   03AA                    1216 00106$:
                           1217 ;	genRet
   03AA 1E 08              1218 	ld	e,#0x08
   03AC C3 5E 04           1219 	jp	00133$
                           1220 ;	lazer.c 95
                           1221 ;	genLabel
   03AF                    1222 00107$:
                           1223 ;	genRet
   03AF 1E 04              1224 	ld	e,#0x04
   03B1 C3 5E 04           1225 	jp	00133$
                           1226 ;	lazer.c 97
                           1227 ;	genLabel
   03B4                    1228 00108$:
                           1229 ;	genRet
   03B4 1E 02              1230 	ld	e,#0x02
   03B6 C3 5E 04           1231 	jp	00133$
                           1232 ;	lazer.c 99
                           1233 ;	genLabel
   03B9                    1234 00109$:
                           1235 ;	genRet
   03B9 1E 01              1236 	ld	e,#0x01
   03BB C3 5E 04           1237 	jp	00133$
                           1238 ;	lazer.c 101
                           1239 ;	genLabel
   03BE                    1240 00110$:
                           1241 ;	genRet
   03BE 1E 00              1242 	ld	e,#0x00
   03C0 C3 5E 04           1243 	jp	00133$
                           1244 ;	lazer.c 115
                           1245 ;	genLabel
   03C3                    1246 00119$:
                           1247 ;	lazer.c 104
                           1248 ;	genCmpEq
                           1249 ;	AOP_STK for 
                           1250 ; genCmpEq: left 1, right 1, result 0
   03C3 F8 03              1251 	lda	hl,3(sp)
   03C5 7E                 1252 	ld	a,(hl)
   03C6 FE 01              1253 	cp	a,#0x01
   03C8 CA E6 03           1254 	jp	z,00113$
   03CB                    1255 00173$:
                           1256 ;	genCmpEq
                           1257 ;	AOP_STK for 
                           1258 ; genCmpEq: left 1, right 1, result 0
   03CB F8 03              1259 	lda	hl,3(sp)
   03CD 7E                 1260 	ld	a,(hl)
   03CE FE 02              1261 	cp	a,#0x02
   03D0 CA EB 03           1262 	jp	z,00114$
   03D3                    1263 00174$:
                           1264 ;	genCmpEq
                           1265 ;	AOP_STK for 
                           1266 ; genCmpEq: left 1, right 1, result 0
   03D3 F8 03              1267 	lda	hl,3(sp)
   03D5 7E                 1268 	ld	a,(hl)
   03D6 FE 04              1269 	cp	a,#0x04
   03D8 CA F0 03           1270 	jp	z,00115$
   03DB                    1271 00175$:
                           1272 ;	genCmpEq
                           1273 ;	AOP_STK for 
                           1274 ; genCmpEq: left 1, right 1, result 0
   03DB F8 03              1275 	lda	hl,3(sp)
   03DD 7E                 1276 	ld	a,(hl)
   03DE FE 08              1277 	cp	a,#0x08
   03E0 CA F5 03           1278 	jp	z,00116$
   03E3                    1279 00176$:
                           1280 ;	genGoto
   03E3 C3 FA 03           1281 	jp	00117$
                           1282 ;	lazer.c 106
                           1283 ;	genLabel
   03E6                    1284 00113$:
                           1285 ;	genRet
   03E6 1E 02              1286 	ld	e,#0x02
   03E8 C3 5E 04           1287 	jp	00133$
                           1288 ;	lazer.c 108
                           1289 ;	genLabel
   03EB                    1290 00114$:
                           1291 ;	genRet
   03EB 1E 01              1292 	ld	e,#0x01
   03ED C3 5E 04           1293 	jp	00133$
                           1294 ;	lazer.c 110
                           1295 ;	genLabel
   03F0                    1296 00115$:
                           1297 ;	genRet
   03F0 1E 08              1298 	ld	e,#0x08
   03F2 C3 5E 04           1299 	jp	00133$
                           1300 ;	lazer.c 112
                           1301 ;	genLabel
   03F5                    1302 00116$:
                           1303 ;	genRet
   03F5 1E 04              1304 	ld	e,#0x04
   03F7 C3 5E 04           1305 	jp	00133$
                           1306 ;	lazer.c 114
                           1307 ;	genLabel
   03FA                    1308 00117$:
                           1309 ;	genRet
   03FA 1E 00              1310 	ld	e,#0x00
   03FC C3 5E 04           1311 	jp	00133$
                           1312 ;	lazer.c 120
                           1313 ;	genLabel
   03FF                    1314 00122$:
                           1315 ;	lazer.c 117
                           1316 ;	genCmpEq
                           1317 ;	AOP_STK for 
                           1318 ; genCmpEq: left 1, right 1, result 0
   03FF F8 03              1319 	lda	hl,3(sp)
   0401 7E                 1320 	ld	a,(hl)
   0402 FE 04              1321 	cp	a,#0x04
   0404 C2 11 04           1322 	jp	nz,00121$
   0407 18 03              1323 	jr	00178$
   0409                    1324 00177$:
   0409 C3 11 04           1325 	jp	00121$
   040C                    1326 00178$:
                           1327 ;	lazer.c 118
                           1328 ;	genRet
   040C 1E 0A              1329 	ld	e,#0x0A
   040E C3 5E 04           1330 	jp	00133$
                           1331 ;	genLabel
   0411                    1332 00121$:
                           1333 ;	lazer.c 120
                           1334 ;	genRet
   0411 1E 00              1335 	ld	e,#0x00
   0413 C3 5E 04           1336 	jp	00133$
                           1337 ;	lazer.c 126
                           1338 ;	genLabel
   0416                    1339 00125$:
                           1340 ;	lazer.c 123
                           1341 ;	genCmpEq
                           1342 ;	AOP_STK for 
                           1343 ; genCmpEq: left 1, right 1, result 0
   0416 F8 03              1344 	lda	hl,3(sp)
   0418 7E                 1345 	ld	a,(hl)
   0419 FE 08              1346 	cp	a,#0x08
   041B C2 28 04           1347 	jp	nz,00124$
   041E 18 03              1348 	jr	00180$
   0420                    1349 00179$:
   0420 C3 28 04           1350 	jp	00124$
   0423                    1351 00180$:
                           1352 ;	lazer.c 124
                           1353 ;	genRet
   0423 1E 05              1354 	ld	e,#0x05
   0425 C3 5E 04           1355 	jp	00133$
                           1356 ;	genLabel
   0428                    1357 00124$:
                           1358 ;	lazer.c 126
                           1359 ;	genRet
   0428 1E 00              1360 	ld	e,#0x00
   042A C3 5E 04           1361 	jp	00133$
                           1362 ;	lazer.c 132
                           1363 ;	genLabel
   042D                    1364 00128$:
                           1365 ;	lazer.c 129
                           1366 ;	genCmpEq
                           1367 ;	AOP_STK for 
                           1368 ; genCmpEq: left 1, right 1, result 0
   042D F8 03              1369 	lda	hl,3(sp)
   042F 7E                 1370 	ld	a,(hl)
   0430 FE 02              1371 	cp	a,#0x02
   0432 C2 3F 04           1372 	jp	nz,00127$
   0435 18 03              1373 	jr	00182$
   0437                    1374 00181$:
   0437 C3 3F 04           1375 	jp	00127$
   043A                    1376 00182$:
                           1377 ;	lazer.c 130
                           1378 ;	genRet
   043A 1E 05              1379 	ld	e,#0x05
   043C C3 5E 04           1380 	jp	00133$
                           1381 ;	genLabel
   043F                    1382 00127$:
                           1383 ;	lazer.c 132
                           1384 ;	genRet
   043F 1E 00              1385 	ld	e,#0x00
   0441 C3 5E 04           1386 	jp	00133$
                           1387 ;	lazer.c 138
                           1388 ;	genLabel
   0444                    1389 00131$:
                           1390 ;	lazer.c 135
                           1391 ;	genCmpEq
                           1392 ;	AOP_STK for 
                           1393 ; genCmpEq: left 1, right 1, result 0
   0444 F8 03              1394 	lda	hl,3(sp)
   0446 7E                 1395 	ld	a,(hl)
   0447 FE 01              1396 	cp	a,#0x01
   0449 C2 56 04           1397 	jp	nz,00130$
   044C 18 03              1398 	jr	00184$
   044E                    1399 00183$:
   044E C3 56 04           1400 	jp	00130$
   0451                    1401 00184$:
                           1402 ;	lazer.c 136
                           1403 ;	genRet
   0451 1E 0A              1404 	ld	e,#0x0A
   0453 C3 5E 04           1405 	jp	00133$
                           1406 ;	genLabel
   0456                    1407 00130$:
                           1408 ;	lazer.c 138
                           1409 ;	genRet
   0456 1E 00              1410 	ld	e,#0x00
   0458 C3 5E 04           1411 	jp	00133$
                           1412 ;	lazer.c 139
                           1413 ;	genLabel
   045B                    1414 00132$:
                           1415 ;	lazer.c 140
                           1416 ;	genRet
                           1417 ;	AOP_STK for 
   045B F8 03              1418 	lda	hl,3(sp)
   045D 5E                 1419 	ld	e,(hl)
                           1420 ;	genLabel
   045E                    1421 00133$:
                           1422 ;	genEndFunction
                           1423 	
   045E C9                 1424 	ret
   045F                    1425 ___determine_next_direction_end:
                           1426 ;	lazer.c 143
                           1427 ;	genLabel
                           1428 ;	genFunction
                           1429 ;	---------------------------------
                           1430 ; Function determine_lazer_path
                           1431 ; ---------------------------------
   045F                    1432 ___determine_lazer_path_start:
   045F                    1433 _determine_lazer_path:
   045F E8 F0              1434 	lda	sp,-16(sp)
                           1435 ;	lazer.c 154
                           1436 ;	genCast
                           1437 ;	AOP_STK for 
                           1438 ;	AOP_STK for _determine_lazer_path_row_1_1
   0461 F8 18              1439 	lda	hl,24(sp)
   0463 7E                 1440 	ld	a,(hl)
   0464 F8 0E              1441 	lda	hl,14(sp)
   0466 22                 1442 	ld	(hl+),a
   0467 36 00              1443 	ld	(hl),#0x00
                           1444 ;	lazer.c 155
                           1445 ;	genCast
                           1446 ;	AOP_STK for 
                           1447 ;	AOP_STK for _determine_lazer_path_col_1_1
   0469 F8 17              1448 	lda	hl,23(sp)
   046B 7E                 1449 	ld	a,(hl)
   046C F8 0C              1450 	lda	hl,12(sp)
   046E 22                 1451 	ld	(hl+),a
   046F 36 00              1452 	ld	(hl),#0x00
                           1453 ;	lazer.c 157
                           1454 ;	genAssign
                           1455 ;	AOP_STK for _determine_lazer_path_row_1_1
                           1456 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   0471 23                 1457 	inc	hl
   0472 2A                 1458 	ld	a,(hl+)
   0473 5E                 1459 	ld	e,(hl)
   0474 F8 0A              1460 	lda	hl,10(sp)
   0476 22                 1461 	ld	(hl+),a
   0477 73                 1462 	ld	(hl),e
                           1463 ;	lazer.c 158
                           1464 ;	genAssign
                           1465 ;	AOP_STK for _determine_lazer_path_col_1_1
                           1466 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   0478 23                 1467 	inc	hl
   0479 2A                 1468 	ld	a,(hl+)
   047A 5E                 1469 	ld	e,(hl)
   047B F8 08              1470 	lda	hl,8(sp)
   047D 22                 1471 	ld	(hl+),a
   047E 73                 1472 	ld	(hl),e
                           1473 ;	lazer.c 160
                           1474 ;	genCmpEq
                           1475 ;	AOP_STK for 
                           1476 ; genCmpEq: left 1, right 1, result 0
   047F F8 16              1477 	lda	hl,22(sp)
   0481 7E                 1478 	ld	a,(hl)
   0482 B7                 1479 	or	a,a
   0483 CA A9 04           1480 	jp	z,00101$
   0486                    1481 00148$:
                           1482 ;	genCmpEq
                           1483 ;	AOP_STK for 
                           1484 ; genCmpEq: left 1, right 1, result 0
   0486 F8 16              1485 	lda	hl,22(sp)
   0488 7E                 1486 	ld	a,(hl)
   0489 FE 01              1487 	cp	a,#0x01
   048B CA AC 04           1488 	jp	z,00104$
   048E                    1489 00149$:
                           1490 ;	genCmpEq
                           1491 ;	AOP_STK for 
                           1492 ; genCmpEq: left 1, right 1, result 0
   048E F8 16              1493 	lda	hl,22(sp)
   0490 7E                 1494 	ld	a,(hl)
   0491 FE 02              1495 	cp	a,#0x02
   0493 CA C7 04           1496 	jp	z,00107$
   0496                    1497 00150$:
                           1498 ;	genCmpEq
                           1499 ;	AOP_STK for 
                           1500 ; genCmpEq: left 1, right 1, result 0
   0496 F8 16              1501 	lda	hl,22(sp)
   0498 7E                 1502 	ld	a,(hl)
   0499 FE 04              1503 	cp	a,#0x04
   049B CA E7 04           1504 	jp	z,00110$
   049E                    1505 00151$:
                           1506 ;	genCmpEq
                           1507 ;	AOP_STK for 
                           1508 ; genCmpEq: left 1, right 1, result 0
   049E F8 16              1509 	lda	hl,22(sp)
   04A0 7E                 1510 	ld	a,(hl)
   04A1 FE 08              1511 	cp	a,#0x08
   04A3 CA 07 05           1512 	jp	z,00113$
   04A6                    1513 00152$:
                           1514 ;	genGoto
   04A6 C3 22 05           1515 	jp	00114$
                           1516 ;	lazer.c 161
                           1517 ;	genLabel
   04A9                    1518 00101$:
                           1519 ;	genRet
   04A9 C3 8C 06           1520 	jp	00130$
                           1521 ;	lazer.c 166
                           1522 ;	genLabel
   04AC                    1523 00104$:
                           1524 ;	lazer.c 163
                           1525 ;	genCmpEq
                           1526 ;	AOP_STK for _determine_lazer_path_row_1_1
                           1527 ; genCmpEq: left 2, right 2, result 0
   04AC F8 0E              1528 	lda	hl,14(sp)
   04AE 2A                 1529 	ld	a,(hl+)
   04AF B6                 1530 	or	a,(hl)
   04B0 CA 25 05           1531 	jp	z,00115$
   04B3                    1532 00153$:
                           1533 ;	lazer.c 164
                           1534 ;	genMinus
                           1535 ;	AOP_STK for _determine_lazer_path_row_1_1
                           1536 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   04B3 F8 0E              1537 	lda	hl,14(sp)
   04B5 5E                 1538 	ld	e,(hl)
   04B6 23                 1539 	inc	hl
   04B7 56                 1540 	ld	d,(hl)
   04B8 21 01 00           1541 	ld	hl,#0x0001
   04BB 7B                 1542 	ld	a,e
   04BC 95                 1543 	sub	a,l
   04BD 5F                 1544 	ld	e,a
   04BE 7A                 1545 	ld	a,d
   04BF 9C                 1546 	sbc	a,h
   04C0 F8 0B              1547 	lda	hl,11(sp)
   04C2 32                 1548 	ld      (hl-),a
   04C3 73                 1549 	ld	(hl),e
                           1550 ;	lazer.c 166
                           1551 ;	genGoto
   04C4 C3 25 05           1552 	jp	00115$
                           1553 ;	lazer.c 171
                           1554 ;	genLabel
   04C7                    1555 00107$:
                           1556 ;	lazer.c 168
                           1557 ;	genCmpEq
                           1558 ;	AOP_STK for _determine_lazer_path_col_1_1
                           1559 ; genCmpEq: left 2, right 2, result 0
   04C7 F8 0C              1560 	lda	hl,12(sp)
   04C9 7E                 1561 	ld	a,(hl)
   04CA FE 08              1562 	cp	a,#0x08
   04CC C2 D5 04           1563 	jp	nz,00154$
   04CF 23                 1564 	inc	hl
   04D0 7E                 1565 	ld	a,(hl)
   04D1 B7                 1566 	or	a,a
   04D2 CA 25 05           1567 	jp	z,00115$
   04D5                    1568 00154$:
                           1569 ;	lazer.c 169
                           1570 ;	genPlus
                           1571 ;	AOP_STK for _determine_lazer_path_col_1_1
                           1572 ;	AOP_STK for _determine_lazer_path_next_col_1_1
                           1573 ;	genPlusIncr
                           1574 ;	Can't optimise plus by inc, falling back to the normal way
   04D5 F8 0C              1575 	lda	hl,12(sp)
   04D7 5E                 1576 	ld	e,(hl)
   04D8 23                 1577 	inc	hl
   04D9 56                 1578 	ld	d,(hl)
   04DA 21 01 00           1579 	ld	hl,#0x0001
   04DD 19                 1580 	add	hl,de
   04DE 7D                 1581 	ld	a,l
   04DF 54                 1582 	ld	d,h
   04E0 F8 08              1583 	lda	hl,8(sp)
   04E2 22                 1584 	ld	(hl+),a
   04E3 72                 1585 	ld	(hl),d
                           1586 ;	lazer.c 171
                           1587 ;	genGoto
   04E4 C3 25 05           1588 	jp	00115$
                           1589 ;	lazer.c 176
                           1590 ;	genLabel
   04E7                    1591 00110$:
                           1592 ;	lazer.c 173
                           1593 ;	genCmpEq
                           1594 ;	AOP_STK for _determine_lazer_path_row_1_1
                           1595 ; genCmpEq: left 2, right 2, result 0
   04E7 F8 0E              1596 	lda	hl,14(sp)
   04E9 7E                 1597 	ld	a,(hl)
   04EA FE 07              1598 	cp	a,#0x07
   04EC C2 F5 04           1599 	jp	nz,00155$
   04EF 23                 1600 	inc	hl
   04F0 7E                 1601 	ld	a,(hl)
   04F1 B7                 1602 	or	a,a
   04F2 CA 25 05           1603 	jp	z,00115$
   04F5                    1604 00155$:
                           1605 ;	lazer.c 174
                           1606 ;	genPlus
                           1607 ;	AOP_STK for _determine_lazer_path_row_1_1
                           1608 ;	AOP_STK for _determine_lazer_path_next_row_1_1
                           1609 ;	genPlusIncr
                           1610 ;	Can't optimise plus by inc, falling back to the normal way
   04F5 F8 0E              1611 	lda	hl,14(sp)
   04F7 5E                 1612 	ld	e,(hl)
   04F8 23                 1613 	inc	hl
   04F9 56                 1614 	ld	d,(hl)
   04FA 21 01 00           1615 	ld	hl,#0x0001
   04FD 19                 1616 	add	hl,de
   04FE 7D                 1617 	ld	a,l
   04FF 54                 1618 	ld	d,h
   0500 F8 0A              1619 	lda	hl,10(sp)
   0502 22                 1620 	ld	(hl+),a
   0503 72                 1621 	ld	(hl),d
                           1622 ;	lazer.c 176
                           1623 ;	genGoto
   0504 C3 25 05           1624 	jp	00115$
                           1625 ;	lazer.c 181
                           1626 ;	genLabel
   0507                    1627 00113$:
                           1628 ;	lazer.c 178
                           1629 ;	genCmpEq
                           1630 ;	AOP_STK for _determine_lazer_path_col_1_1
                           1631 ; genCmpEq: left 2, right 2, result 0
   0507 F8 0C              1632 	lda	hl,12(sp)
   0509 2A                 1633 	ld	a,(hl+)
   050A B6                 1634 	or	a,(hl)
   050B CA 25 05           1635 	jp	z,00115$
   050E                    1636 00156$:
                           1637 ;	lazer.c 179
                           1638 ;	genMinus
                           1639 ;	AOP_STK for _determine_lazer_path_col_1_1
                           1640 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   050E F8 0C              1641 	lda	hl,12(sp)
   0510 5E                 1642 	ld	e,(hl)
   0511 23                 1643 	inc	hl
   0512 56                 1644 	ld	d,(hl)
   0513 21 01 00           1645 	ld	hl,#0x0001
   0516 7B                 1646 	ld	a,e
   0517 95                 1647 	sub	a,l
   0518 5F                 1648 	ld	e,a
   0519 7A                 1649 	ld	a,d
   051A 9C                 1650 	sbc	a,h
   051B F8 09              1651 	lda	hl,9(sp)
   051D 32                 1652 	ld      (hl-),a
   051E 73                 1653 	ld	(hl),e
                           1654 ;	lazer.c 181
                           1655 ;	genGoto
   051F C3 25 05           1656 	jp	00115$
                           1657 ;	lazer.c 183
                           1658 ;	genLabel
   0522                    1659 00114$:
                           1660 ;	genRet
   0522 C3 8C 06           1661 	jp	00130$
                           1662 ;	lazer.c 184
                           1663 ;	genLabel
   0525                    1664 00115$:
                           1665 ;	lazer.c 187
                           1666 ;	genCmpEq
                           1667 ;	AOP_STK for _determine_lazer_path_next_row_1_1
                           1668 ;	AOP_STK for _determine_lazer_path_row_1_1
                           1669 ; genCmpEq: left 2, right 2, result 0
   0525 F8 0E              1670 	lda	hl,14(sp)
   0527 7E                 1671 	ld	a,(hl)
   0528 F8 0A              1672 	lda	hl,10(sp)
   052A BE                 1673 	cp	(hl)
   052B 20 0A              1674 	jr	nz,00157$
   052D F8 0F              1675 	lda	hl,15(sp)
   052F 7E                 1676 	ld	a,(hl)
   0530 F8 0B              1677 	lda	hl,11(sp)
   0532 BE                 1678 	cp	(hl)
   0533 20 02              1679 	jr	nz,00157$
   0535 18 03              1680 	jr	00158$
   0537                    1681 00157$:
   0537 C3 52 05           1682 	jp	00117$
   053A                    1683 00158$:
                           1684 ;	genCmpEq
                           1685 ;	AOP_STK for _determine_lazer_path_next_col_1_1
                           1686 ;	AOP_STK for _determine_lazer_path_col_1_1
                           1687 ; genCmpEq: left 2, right 2, result 0
   053A F8 0C              1688 	lda	hl,12(sp)
   053C 7E                 1689 	ld	a,(hl)
   053D F8 08              1690 	lda	hl,8(sp)
   053F BE                 1691 	cp	(hl)
   0540 20 0A              1692 	jr	nz,00159$
   0542 F8 0D              1693 	lda	hl,13(sp)
   0544 7E                 1694 	ld	a,(hl)
   0545 F8 09              1695 	lda	hl,9(sp)
   0547 BE                 1696 	cp	(hl)
   0548 20 02              1697 	jr	nz,00159$
   054A 18 03              1698 	jr	00160$
   054C                    1699 00159$:
   054C C3 52 05           1700 	jp	00117$
   054F                    1701 00160$:
                           1702 ;	lazer.c 188
                           1703 ;	genRet
   054F C3 8C 06           1704 	jp	00130$
                           1705 ;	genLabel
   0552                    1706 00117$:
                           1707 ;	lazer.c 191
                           1708 ;	genIpush
                           1709 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1710 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   0552 F8 08              1711 	lda	hl,8(sp)
   0554 2A                 1712 	ld	a,(hl+)
   0555 66                 1713 	ld	h,(hl)
   0556 6F                 1714 	ld	l,a
   0557 E5                 1715 	push	hl
                           1716 ;	genIpush
                           1717 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   0558 F8 0C              1718 	lda	hl,12(sp)
   055A 2A                 1719 	ld	a,(hl+)
   055B 66                 1720 	ld	h,(hl)
   055C 6F                 1721 	ld	l,a
   055D E5                 1722 	push	hl
                           1723 ;	genCall
   055E CD AB 01           1724 	call	_row_col_to_cel
                           1725 ;	AOP_STK for _determine_lazer_path_next_cell_1_1
   0561 F8 0B              1726 	lda	hl,11(sp)
   0563 72                 1727 	ld	(hl),d
   0564 2B                 1728 	dec	hl
   0565 73                 1729 	ld	(hl),e
   0566 E8 04              1730 	lda	sp,4(sp)
                           1731 ;	genAssign
                           1732 ;	AOP_STK for _determine_lazer_path_next_cell_1_1
                           1733 ;	(registers are the same)
                           1734 ;	lazer.c 193
                           1735 ;	genPlus
                           1736 ;	AOP_STK for 
                           1737 ;	AOP_STK for _determine_lazer_path_next_cell_1_1
                           1738 ;	Can't optimise plus by inc, falling back to the normal way
   0568 F8 12              1739 	lda	hl,18(sp)
   056A 5E                 1740 	ld	e,(hl)
   056B 23                 1741 	inc	hl
   056C 56                 1742 	ld	d,(hl)
   056D F8 06              1743 	lda	hl,6(sp)
   056F 2A                 1744 	ld	a,(hl+)
   0570 66                 1745 	ld	h,(hl)
   0571 6F                 1746 	ld	l,a
   0572 19                 1747 	add	hl,de
   0573 4D                 1748 	ld	c,l
   0574 44                 1749 	ld	b,h
                           1750 ;	genPointerGet
   0575 0A                 1751 	ld	a,(bc)
   0576 4F                 1752 	ld	c,a
                           1753 ;	genAssign
                           1754 ;	AOP_STK for _determine_lazer_path_next_object_1_1
   0577 F8 04              1755 	lda	hl,4(sp)
   0579 71                 1756 	ld	(hl),c
                           1757 ;	lazer.c 194
                           1758 ;	genIpush
                           1759 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1760 ;	AOP_STK for 
   057A F8 16              1761 	lda	hl,22(sp)
   057C 7E                 1762 	ld	a,(hl)
   057D F5                 1763 	push	af
   057E 33                 1764 	inc	sp
                           1765 ;	genIpush
                           1766 ;	AOP_STK for _determine_lazer_path_next_object_1_1
   057F F8 05              1767 	lda	hl,5(sp)
   0581 7E                 1768 	ld	a,(hl)
   0582 F5                 1769 	push	af
   0583 33                 1770 	inc	sp
                           1771 ;	genCall
   0584 CD 25 03           1772 	call	_determine_next_direction
   0587 43                 1773 	ld	b,e
   0588 E8 02              1774 	lda	sp,2(sp)
                           1775 ;	genAssign
                           1776 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   058A F8 05              1777 	lda	hl,5(sp)
   058C 70                 1778 	ld	(hl),b
                           1779 ;	lazer.c 197
                           1780 ;	genPlus
                           1781 ;	AOP_STK for 
                           1782 ;	AOP_STK for _determine_lazer_path_next_cell_1_1
                           1783 ;	AOP_STK for _determine_lazer_path_sloc0_1_0
                           1784 ;	Can't optimise plus by inc, falling back to the normal way
   058D F8 14              1785 	lda	hl,20(sp)
   058F 5E                 1786 	ld	e,(hl)
   0590 23                 1787 	inc	hl
   0591 56                 1788 	ld	d,(hl)
   0592 F8 06              1789 	lda	hl,6(sp)
   0594 2A                 1790 	ld	a,(hl+)
   0595 66                 1791 	ld	h,(hl)
   0596 6F                 1792 	ld	l,a
   0597 19                 1793 	add	hl,de
   0598 7D                 1794 	ld	a,l
   0599 54                 1795 	ld	d,h
   059A F8 00              1796 	lda	hl,0(sp)
                           1797 ;	genPointerGet
                           1798 ;	AOP_STK for _determine_lazer_path_sloc0_1_0
                           1799 ;	AOP_STK for _determine_lazer_path_curr_lazer_state_1_1
   059C 22                 1800 	ld	(hl+),a
   059D 72                 1801 	ld	(hl),d
   059E 5F                 1802 	ld	e,a
   059F 1A                 1803 	ld	a,(de)
   05A0 23                 1804 	inc	hl
   05A1 77                 1805 	ld	(hl),a
                           1806 ;	genAssign
                           1807 ;	AOP_STK for _determine_lazer_path_curr_lazer_state_1_1
                           1808 ;	(registers are the same)
                           1809 ;	lazer.c 200
                           1810 ;	genIpush
                           1811 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1812 ;	AOP_STK for 
   05A2 F8 16              1813 	lda	hl,22(sp)
   05A4 7E                 1814 	ld	a,(hl)
   05A5 F5                 1815 	push	af
   05A6 33                 1816 	inc	sp
                           1817 ;	genIpush
                           1818 ;	AOP_STK for _determine_lazer_path_next_object_1_1
   05A7 F8 05              1819 	lda	hl,5(sp)
   05A9 7E                 1820 	ld	a,(hl)
   05AA F5                 1821 	push	af
   05AB 33                 1822 	inc	sp
                           1823 ;	genCall
   05AC CD CE 01           1824 	call	_determine_next_lazer_stat
                           1825 ;	AOP_STK for _determine_lazer_path_next_lazer_state_1_1
   05AF F8 05              1826 	lda	hl,5(sp)
   05B1 73                 1827 	ld	(hl),e
   05B2 E8 02              1828 	lda	sp,2(sp)
                           1829 ;	genAssign
                           1830 ;	AOP_STK for _determine_lazer_path_next_lazer_state_1_1
   05B4 F8 03              1831 	lda	hl,3(sp)
   05B6 4E                 1832 	ld	c,(hl)
                           1833 ;	lazer.c 201
                           1834 ;	genPointerGet
                           1835 ;	AOP_STK for _determine_lazer_path_sloc0_1_0
   05B7 F8 00              1836 	lda	hl,0(sp)
   05B9 5E                 1837 	ld	e,(hl)
   05BA 23                 1838 	inc	hl
   05BB 56                 1839 	ld	d,(hl)
   05BC 1A                 1840 	ld	a,(de)
                           1841 ;	genOr
   05BD 47                 1842 	ld	b,a
   05BE B1                 1843 	or	a,c
                           1844 ;	genAssign (pointer)
                           1845 ;	AOP_STK for _determine_lazer_path_sloc0_1_0
   05BF 2B                 1846 	dec	hl
   05C0 5E                 1847 	ld	e,(hl)
   05C1 23                 1848 	inc	hl
   05C2 56                 1849 	ld	d,(hl)
   05C3 12                 1850 	ld	(de),a
                           1851 ;	lazer.c 204
                           1852 ;	genCmpEq
                           1853 ; genCmpEq: left 1, right 1, result 0
   05C4 79                 1854 	ld	a,c
   05C5 B7                 1855 	or	a,a
   05C6 CA DD 05           1856 	jp	z,00119$
   05C9                    1857 00161$:
                           1858 ;	genCmpEq
                           1859 ;	AOP_STK for _determine_lazer_path_curr_lazer_state_1_1
                           1860 ; genCmpEq: left 1, right 1, result 1
   05C9 F8 02              1861 	lda	hl,2(sp)
   05CB 7E                 1862 	ld	a,(hl)
   05CC B9                 1863 	cp	c
   05CD 20 04              1864 	jr	nz,00162$
   05CF 3E 01              1865 	ld	a,#0x01
   05D1 18 01              1866 	jr	00163$
   05D3                    1867 00162$:
   05D3 AF                 1868 	xor	a,a
   05D4                    1869 00163$:
   05D4 4F                 1870 	ld	c,a
                           1871 ;	genAnd
                           1872 ;	AOP_STK for _determine_lazer_path_curr_lazer_state_1_1
   05D5 F8 02              1873 	lda	hl,2(sp)
   05D7 7E                 1874 	ld	a,(hl)
   05D8 A1                 1875 	and	a,c
                           1876 ;	genIfx
   05D9 B7                 1877 	or	a,a
   05DA CA E0 05           1878 	jp	z,00120$
                           1879 ;	genLabel
   05DD                    1880 00119$:
                           1881 ;	lazer.c 205
                           1882 ;	genRet
   05DD C3 8C 06           1883 	jp	00130$
                           1884 ;	genLabel
   05E0                    1885 00120$:
                           1886 ;	lazer.c 210
                           1887 ;	genAnd
                           1888 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   05E0 F8 05              1889 	lda	hl,5(sp)
   05E2 7E                 1890 	ld	a,(hl)
   05E3 E6 01              1891 	and	a,#0x01
                           1892 ;	genCmpEq
                           1893 ; genCmpEq: left 1, right 1, result 0
   05E5 4F                 1894 	ld	c,a
   05E6 B7                 1895 	or	a,a
   05E7 CA 0B 06           1896 	jp	z,00123$
   05EA                    1897 00164$:
                           1898 ;	lazer.c 211
                           1899 ;	genCast
                           1900 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   05EA F8 0A              1901 	lda	hl,10(sp)
   05EC 4E                 1902 	ld	c,(hl)
                           1903 ;	genCast
                           1904 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   05ED 2B                 1905 	dec	hl
   05EE 2B                 1906 	dec	hl
   05EF 46                 1907 	ld	b,(hl)
                           1908 ;	genIpush
                           1909 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05F0 79                 1910 	ld	a,c
   05F1 F5                 1911 	push	af
   05F2 33                 1912 	inc	sp
                           1913 ;	genIpush
   05F3 78                 1914 	ld	a,b
   05F4 F5                 1915 	push	af
   05F5 33                 1916 	inc	sp
                           1917 ;	genIpush
   05F6 3E 01              1918 	ld	a,#0x01
   05F8 F5                 1919 	push	af
   05F9 33                 1920 	inc	sp
                           1921 ;	genIpush
                           1922 ;	AOP_STK for 
   05FA F8 17              1923 	lda	hl,23(sp)
   05FC 2A                 1924 	ld	a,(hl+)
   05FD 66                 1925 	ld	h,(hl)
   05FE 6F                 1926 	ld	l,a
   05FF E5                 1927 	push	hl
                           1928 ;	genIpush
                           1929 ;	AOP_STK for 
   0600 F8 17              1930 	lda	hl,23(sp)
   0602 2A                 1931 	ld	a,(hl+)
   0603 66                 1932 	ld	h,(hl)
   0604 6F                 1933 	ld	l,a
   0605 E5                 1934 	push	hl
                           1935 ;	genCall
   0606 CD 5F 04           1936 	call	_determine_lazer_path
   0609 E8 07              1937 	lda	sp,7(sp)
                           1938 ;	genLabel
   060B                    1939 00123$:
                           1940 ;	lazer.c 214
                           1941 ;	genAnd
                           1942 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   060B F8 05              1943 	lda	hl,5(sp)
   060D 7E                 1944 	ld	a,(hl)
   060E E6 02              1945 	and	a,#0x02
                           1946 ;	genCmpEq
                           1947 ; genCmpEq: left 1, right 1, result 0
   0610 4F                 1948 	ld	c,a
   0611 B7                 1949 	or	a,a
   0612 CA 36 06           1950 	jp	z,00125$
   0615                    1951 00165$:
                           1952 ;	lazer.c 215
                           1953 ;	genCast
                           1954 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   0615 F8 0A              1955 	lda	hl,10(sp)
   0617 4E                 1956 	ld	c,(hl)
                           1957 ;	genCast
                           1958 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   0618 2B                 1959 	dec	hl
   0619 2B                 1960 	dec	hl
   061A 46                 1961 	ld	b,(hl)
                           1962 ;	genIpush
                           1963 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   061B 79                 1964 	ld	a,c
   061C F5                 1965 	push	af
   061D 33                 1966 	inc	sp
                           1967 ;	genIpush
   061E 78                 1968 	ld	a,b
   061F F5                 1969 	push	af
   0620 33                 1970 	inc	sp
                           1971 ;	genIpush
   0621 3E 02              1972 	ld	a,#0x02
   0623 F5                 1973 	push	af
   0624 33                 1974 	inc	sp
                           1975 ;	genIpush
                           1976 ;	AOP_STK for 
   0625 F8 17              1977 	lda	hl,23(sp)
   0627 2A                 1978 	ld	a,(hl+)
   0628 66                 1979 	ld	h,(hl)
   0629 6F                 1980 	ld	l,a
   062A E5                 1981 	push	hl
                           1982 ;	genIpush
                           1983 ;	AOP_STK for 
   062B F8 17              1984 	lda	hl,23(sp)
   062D 2A                 1985 	ld	a,(hl+)
   062E 66                 1986 	ld	h,(hl)
   062F 6F                 1987 	ld	l,a
   0630 E5                 1988 	push	hl
                           1989 ;	genCall
   0631 CD 5F 04           1990 	call	_determine_lazer_path
   0634 E8 07              1991 	lda	sp,7(sp)
                           1992 ;	genLabel
   0636                    1993 00125$:
                           1994 ;	lazer.c 218
                           1995 ;	genAnd
                           1996 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   0636 F8 05              1997 	lda	hl,5(sp)
   0638 7E                 1998 	ld	a,(hl)
   0639 E6 04              1999 	and	a,#0x04
                           2000 ;	genCmpEq
                           2001 ; genCmpEq: left 1, right 1, result 0
   063B 4F                 2002 	ld	c,a
   063C B7                 2003 	or	a,a
   063D CA 61 06           2004 	jp	z,00127$
   0640                    2005 00166$:
                           2006 ;	lazer.c 219
                           2007 ;	genCast
                           2008 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   0640 F8 0A              2009 	lda	hl,10(sp)
   0642 4E                 2010 	ld	c,(hl)
                           2011 ;	genCast
                           2012 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   0643 2B                 2013 	dec	hl
   0644 2B                 2014 	dec	hl
   0645 46                 2015 	ld	b,(hl)
                           2016 ;	genIpush
                           2017 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0646 79                 2018 	ld	a,c
   0647 F5                 2019 	push	af
   0648 33                 2020 	inc	sp
                           2021 ;	genIpush
   0649 78                 2022 	ld	a,b
   064A F5                 2023 	push	af
   064B 33                 2024 	inc	sp
                           2025 ;	genIpush
   064C 3E 04              2026 	ld	a,#0x04
   064E F5                 2027 	push	af
   064F 33                 2028 	inc	sp
                           2029 ;	genIpush
                           2030 ;	AOP_STK for 
   0650 F8 17              2031 	lda	hl,23(sp)
   0652 2A                 2032 	ld	a,(hl+)
   0653 66                 2033 	ld	h,(hl)
   0654 6F                 2034 	ld	l,a
   0655 E5                 2035 	push	hl
                           2036 ;	genIpush
                           2037 ;	AOP_STK for 
   0656 F8 17              2038 	lda	hl,23(sp)
   0658 2A                 2039 	ld	a,(hl+)
   0659 66                 2040 	ld	h,(hl)
   065A 6F                 2041 	ld	l,a
   065B E5                 2042 	push	hl
                           2043 ;	genCall
   065C CD 5F 04           2044 	call	_determine_lazer_path
   065F E8 07              2045 	lda	sp,7(sp)
                           2046 ;	genLabel
   0661                    2047 00127$:
                           2048 ;	lazer.c 222
                           2049 ;	genAnd
                           2050 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   0661 F8 05              2051 	lda	hl,5(sp)
   0663 7E                 2052 	ld	a,(hl)
   0664 E6 08              2053 	and	a,#0x08
                           2054 ;	genCmpEq
                           2055 ; genCmpEq: left 1, right 1, result 0
   0666 4F                 2056 	ld	c,a
   0667 B7                 2057 	or	a,a
   0668 CA 8C 06           2058 	jp	z,00130$
   066B                    2059 00167$:
                           2060 ;	lazer.c 223
                           2061 ;	genCast
                           2062 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   066B F8 0A              2063 	lda	hl,10(sp)
   066D 4E                 2064 	ld	c,(hl)
                           2065 ;	genCast
                           2066 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   066E 2B                 2067 	dec	hl
   066F 2B                 2068 	dec	hl
   0670 46                 2069 	ld	b,(hl)
                           2070 ;	genIpush
                           2071 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0671 79                 2072 	ld	a,c
   0672 F5                 2073 	push	af
   0673 33                 2074 	inc	sp
                           2075 ;	genIpush
   0674 78                 2076 	ld	a,b
   0675 F5                 2077 	push	af
   0676 33                 2078 	inc	sp
                           2079 ;	genIpush
   0677 3E 08              2080 	ld	a,#0x08
   0679 F5                 2081 	push	af
   067A 33                 2082 	inc	sp
                           2083 ;	genIpush
                           2084 ;	AOP_STK for 
   067B F8 17              2085 	lda	hl,23(sp)
   067D 2A                 2086 	ld	a,(hl+)
   067E 66                 2087 	ld	h,(hl)
   067F 6F                 2088 	ld	l,a
   0680 E5                 2089 	push	hl
                           2090 ;	genIpush
                           2091 ;	AOP_STK for 
   0681 F8 17              2092 	lda	hl,23(sp)
   0683 2A                 2093 	ld	a,(hl+)
   0684 66                 2094 	ld	h,(hl)
   0685 6F                 2095 	ld	l,a
   0686 E5                 2096 	push	hl
                           2097 ;	genCall
   0687 CD 5F 04           2098 	call	_determine_lazer_path
   068A E8 07              2099 	lda	sp,7(sp)
                           2100 ;	genLabel
   068C                    2101 00130$:
                           2102 ;	genEndFunction
   068C E8 10              2103 	lda	sp,16(sp)
   068E C9                 2104 	ret
   068F                    2105 ___determine_lazer_path_end:
                           2106 ;	lazer.c 227
                           2107 ;	genLabel
                           2108 ;	genFunction
                           2109 ;	---------------------------------
                           2110 ; Function project_lazer
                           2111 ; ---------------------------------
   068F                    2112 ___project_lazer_start:
   068F                    2113 _project_lazer:
   068F E8 FB              2114 	lda	sp,-5(sp)
                           2115 ;	lazer.c 236
                           2116 ;	genAssign
                           2117 ;	AOP_STK for _project_lazer_startIdx_1_1
   0691 F8 03              2118 	lda	hl,3(sp)
   0693 36 00              2119 	ld	(hl),#0x00
   0695 23                 2120 	inc	hl
   0696 36 00              2121 	ld	(hl),#0x00
                           2122 ;	genLabel
   0698                    2123 00107$:
                           2124 ;	lazer.c 237
                           2125 ;	genCmpEq
                           2126 ;	AOP_STK for _project_lazer_startIdx_1_1
                           2127 ; genCmpEq: left 2, right 2, result 0
   0698 F8 03              2128 	lda	hl,3(sp)
   069A 7E                 2129 	ld	a,(hl)
   069B FE 48              2130 	cp	a,#0x48
   069D C2 A6 06           2131 	jp	nz,00118$
   06A0 23                 2132 	inc	hl
   06A1 7E                 2133 	ld	a,(hl)
   06A2 B7                 2134 	or	a,a
   06A3 CA C8 06           2135 	jp	z,00110$
   06A6                    2136 00118$:
                           2137 ;	lazer.c 238
                           2138 ;	genPlus
                           2139 ;	AOP_STK for 
                           2140 ;	AOP_STK for _project_lazer_startIdx_1_1
                           2141 ;	AOP_STK for _project_lazer_sloc0_1_0
                           2142 ;	Can't optimise plus by inc, falling back to the normal way
   06A6 F8 09              2143 	lda	hl,9(sp)
   06A8 5E                 2144 	ld	e,(hl)
   06A9 23                 2145 	inc	hl
   06AA 56                 2146 	ld	d,(hl)
   06AB F8 03              2147 	lda	hl,3(sp)
   06AD 2A                 2148 	ld	a,(hl+)
   06AE 66                 2149 	ld	h,(hl)
   06AF 6F                 2150 	ld	l,a
   06B0 19                 2151 	add	hl,de
   06B1 7D                 2152 	ld	a,l
   06B2 54                 2153 	ld	d,h
   06B3 F8 00              2154 	lda	hl,0(sp)
   06B5 22                 2155 	ld	(hl+),a
   06B6 72                 2156 	ld	(hl),d
                           2157 ;	genAssign (pointer)
                           2158 ;	AOP_STK for _project_lazer_sloc0_1_0
   06B7 2B                 2159 	dec	hl
   06B8 5E                 2160 	ld	e,(hl)
   06B9 23                 2161 	inc	hl
   06BA 56                 2162 	ld	d,(hl)
   06BB 3E 00              2163 	ld	a,#0x00
   06BD 12                 2164 	ld	(de),a
                           2165 ;	lazer.c 237
                           2166 ;	genPlus
                           2167 ;	AOP_STK for _project_lazer_startIdx_1_1
                           2168 ;	genPlusIncr
   06BE 23                 2169 	inc	hl
   06BF 23                 2170 	inc	hl
   06C0 34                 2171 	inc	(hl)
   06C1 20 02              2172 	jr	nz,00119$
   06C3 23                 2173 	inc	hl
   06C4 34                 2174 	inc	(hl)
   06C5                    2175 00119$:
                           2176 ;	genGoto
   06C5 C3 98 06           2177 	jp	00107$
                           2178 ;	genLabel
   06C8                    2179 00110$:
                           2180 ;	lazer.c 245
                           2181 ;	genAssign
                           2182 ;	AOP_STK for _project_lazer_startIdx_1_1
   06C8 F8 03              2183 	lda	hl,3(sp)
   06CA 36 00              2184 	ld	(hl),#0x00
   06CC 23                 2185 	inc	hl
   06CD 36 00              2186 	ld	(hl),#0x00
                           2187 ;	genLabel
   06CF                    2188 00103$:
                           2189 ;	lazer.c 246
                           2190 ;	genCmpEq
                           2191 ;	AOP_STK for _project_lazer_startIdx_1_1
                           2192 ; genCmpEq: left 2, right 2, result 0
   06CF F8 03              2193 	lda	hl,3(sp)
   06D1 7E                 2194 	ld	a,(hl)
   06D2 FE 48              2195 	cp	a,#0x48
   06D4 C2 DD 06           2196 	jp	nz,00120$
   06D7 23                 2197 	inc	hl
   06D8 7E                 2198 	ld	a,(hl)
   06D9 B7                 2199 	or	a,a
   06DA CA 00 07           2200 	jp	z,00106$
   06DD                    2201 00120$:
                           2202 ;	lazer.c 247
                           2203 ;	genPlus
                           2204 ;	AOP_STK for 
                           2205 ;	AOP_STK for _project_lazer_startIdx_1_1
                           2206 ;	AOP_STK for _project_lazer_sloc0_1_0
                           2207 ;	Can't optimise plus by inc, falling back to the normal way
   06DD F8 07              2208 	lda	hl,7(sp)
   06DF 5E                 2209 	ld	e,(hl)
   06E0 23                 2210 	inc	hl
   06E1 56                 2211 	ld	d,(hl)
   06E2 F8 03              2212 	lda	hl,3(sp)
   06E4 2A                 2213 	ld	a,(hl+)
   06E5 66                 2214 	ld	h,(hl)
   06E6 6F                 2215 	ld	l,a
   06E7 19                 2216 	add	hl,de
   06E8 7D                 2217 	ld	a,l
   06E9 54                 2218 	ld	d,h
   06EA F8 00              2219 	lda	hl,0(sp)
                           2220 ;	genPointerGet
                           2221 ;	AOP_STK for _project_lazer_sloc0_1_0
   06EC 22                 2222 	ld	(hl+),a
   06ED 72                 2223 	ld	(hl),d
   06EE 5F                 2224 	ld	e,a
   06EF 1A                 2225 	ld	a,(de)
                           2226 ;	genCmpEq
                           2227 ; genCmpEq: left 1, right 1, result 0
   06F0 4F                 2228 	ld	c,a
   06F1 FE 80              2229 	cp	a,#0x80
   06F3 CA 00 07           2230 	jp	z,00106$
   06F6                    2231 00121$:
                           2232 ;	lazer.c 246
                           2233 ;	genPlus
                           2234 ;	AOP_STK for _project_lazer_startIdx_1_1
                           2235 ;	genPlusIncr
   06F6 F8 03              2236 	lda	hl,3(sp)
   06F8 34                 2237 	inc	(hl)
   06F9 20 02              2238 	jr	nz,00122$
   06FB 23                 2239 	inc	hl
   06FC 34                 2240 	inc	(hl)
   06FD                    2241 00122$:
                           2242 ;	genGoto
   06FD C3 CF 06           2243 	jp	00103$
                           2244 ;	genLabel
   0700                    2245 00106$:
                           2246 ;	lazer.c 252
                           2247 ;	genIpush
                           2248 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0700 21 09 00           2249 	ld	hl,#0x0009
   0703 E5                 2250 	push	hl
                           2251 ;	genIpush
                           2252 ;	AOP_STK for _project_lazer_startIdx_1_1
   0704 F8 05              2253 	lda	hl,5(sp)
   0706 2A                 2254 	ld	a,(hl+)
   0707 66                 2255 	ld	h,(hl)
   0708 6F                 2256 	ld	l,a
   0709 E5                 2257 	push	hl
                           2258 ;	genCall
   070A CD 00 00           2259 	call	__moduint_rrx_s
   070D 42                 2260 	ld	b,d
   070E 4B                 2261 	ld	c,e
   070F E8 04              2262 	lda	sp,4(sp)
                           2263 ;	genCast
                           2264 ;	AOP_STK for _project_lazer_x_1_1
   0711 F8 02              2265 	lda	hl,2(sp)
   0713 71                 2266 	ld	(hl),c
                           2267 ;	lazer.c 253
                           2268 ;	genIpush
                           2269 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0714 21 09 00           2270 	ld	hl,#0x0009
   0717 E5                 2271 	push	hl
                           2272 ;	genIpush
                           2273 ;	AOP_STK for _project_lazer_startIdx_1_1
   0718 F8 05              2274 	lda	hl,5(sp)
   071A 2A                 2275 	ld	a,(hl+)
   071B 66                 2276 	ld	h,(hl)
   071C 6F                 2277 	ld	l,a
   071D E5                 2278 	push	hl
                           2279 ;	genCall
   071E CD 00 00           2280 	call	__divuint_rrx_s
   0721 4A                 2281 	ld	c,d
   0722 43                 2282 	ld	b,e
   0723 E8 04              2283 	lda	sp,4(sp)
                           2284 ;	genCast
                           2285 ; Removed redundent load
                           2286 ;	lazer.c 260
                           2287 ;	genIpush
                           2288 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0725 78                 2289 	ld	a,b
   0726 F5                 2290 	push	af
   0727 33                 2291 	inc	sp
                           2292 ;	genIpush
                           2293 ;	AOP_STK for _project_lazer_x_1_1
   0728 F8 03              2294 	lda	hl,3(sp)
   072A 7E                 2295 	ld	a,(hl)
   072B F5                 2296 	push	af
   072C 33                 2297 	inc	sp
                           2298 ;	genIpush
   072D 3E 01              2299 	ld	a,#0x01
   072F F5                 2300 	push	af
   0730 33                 2301 	inc	sp
                           2302 ;	genIpush
                           2303 ;	AOP_STK for 
   0731 F8 0C              2304 	lda	hl,12(sp)
   0733 2A                 2305 	ld	a,(hl+)
   0734 66                 2306 	ld	h,(hl)
   0735 6F                 2307 	ld	l,a
   0736 E5                 2308 	push	hl
                           2309 ;	genIpush
                           2310 ;	AOP_STK for 
   0737 F8 0C              2311 	lda	hl,12(sp)
   0739 2A                 2312 	ld	a,(hl+)
   073A 66                 2313 	ld	h,(hl)
   073B 6F                 2314 	ld	l,a
   073C E5                 2315 	push	hl
                           2316 ;	genCall
   073D CD 5F 04           2317 	call	_determine_lazer_path
   0740 E8 07              2318 	lda	sp,7(sp)
                           2319 ;	genLabel
   0742                    2320 00111$:
                           2321 ;	genEndFunction
   0742 E8 05              2322 	lda	sp,5(sp)
   0744 C9                 2323 	ret
   0745                    2324 ___project_lazer_end:
                           2325 ;	background.c 10
                           2326 ;	genLabel
                           2327 ;	genFunction
                           2328 ;	---------------------------------
                           2329 ; Function init_background
                           2330 ; ---------------------------------
   0745                    2331 ___init_background_start:
   0745                    2332 _init_background:
   0745 E8 FB              2333 	lda	sp,-5(sp)
                           2334 ;	background.c 13
                           2335 ;	genAssign
                           2336 ;	AOP_STK for _init_background_i_1_1
   0747 F8 04              2337 	lda	hl,4(sp)
   0749 36 00              2338 	ld	(hl),#0x00
                           2339 ;	genLabel
   074B                    2340 00101$:
                           2341 ;	genCmpEq
                           2342 ;	AOP_STK for _init_background_i_1_1
                           2343 ; genCmpEq: left 1, right 1, result 0
   074B F8 04              2344 	lda	hl,4(sp)
   074D 7E                 2345 	ld	a,(hl)
   074E FE 48              2346 	cp	a,#0x48
   0750 CA 6E 07           2347 	jp	z,00104$
   0753                    2348 00121$:
                           2349 ;	background.c 14
                           2350 ;	genPlus
                           2351 ;	AOP_STK for _init_background_i_1_1
                           2352 ;	AOP_STK for _init_background_sloc0_1_0
                           2353 ;	Can't optimise plus by inc, falling back to the normal way
   0753 11 B1 01           2354 	ld	de,#_lazer_map
   0756 F8 04              2355 	lda	hl,4(sp)
   0758 6E                 2356 	ld	l,(hl)
   0759 26 00              2357 	ld	h,#0x00
   075B 19                 2358 	add	hl,de
   075C 7D                 2359 	ld	a,l
   075D 54                 2360 	ld	d,h
   075E F8 02              2361 	lda	hl,2(sp)
   0760 22                 2362 	ld	(hl+),a
   0761 72                 2363 	ld	(hl),d
                           2364 ;	genAssign (pointer)
                           2365 ;	AOP_STK for _init_background_sloc0_1_0
   0762 2B                 2366 	dec	hl
   0763 5E                 2367 	ld	e,(hl)
   0764 23                 2368 	inc	hl
   0765 56                 2369 	ld	d,(hl)
   0766 3E 00              2370 	ld	a,#0x00
   0768 12                 2371 	ld	(de),a
                           2372 ;	background.c 13
                           2373 ;	genPlus
                           2374 ;	AOP_STK for _init_background_i_1_1
                           2375 ;	genPlusIncr
   0769 23                 2376 	inc	hl
   076A 34                 2377 	inc	(hl)
                           2378 ;	genGoto
   076B C3 4B 07           2379 	jp	00101$
                           2380 ;	genLabel
   076E                    2381 00104$:
                           2382 ;	background.c 17
                           2383 ;	genAssign
                           2384 ;	AOP_STK for 
   076E F8 07              2385 	lda	hl,7(sp)
   0770 46                 2386 	ld	b,(hl)
   0771 23                 2387 	inc	hl
   0772 4E                 2388 	ld	c,(hl)
                           2389 ;	genAssign (pointer)
   0773 58                 2390 	ld	e,b
   0774 51                 2391 	ld	d,c
   0775 3E 54              2392 	ld	a,#0x54
   0777 12                 2393 	ld	(de),a
                           2394 ;	background.c 18
                           2395 ;	genPlus
                           2396 ;	genPlusIncr
                           2397 ;	Can't optimise plus by inc, falling back to the normal way
   0778 78                 2398 	ld	a,b
   0779 C6 13              2399 	add	a,#0x13
   077B 6F                 2400 	ld	l,a
   077C 79                 2401 	ld	a,c
   077D CE 00              2402 	adc	a,#0x00
   077F 67                 2403 	ld	h,a
                           2404 ;	genAssign (pointer)
   0780 36 55              2405 	ld	(hl),#0x55
                           2406 ;	background.c 19
                           2407 ;	genPlus
                           2408 ;	genPlusIncr
                           2409 ;	Can't optimise plus by inc, falling back to the normal way
   0782 78                 2410 	ld	a,b
   0783 C6 54              2411 	add	a,#0x54
   0785 6F                 2412 	ld	l,a
   0786 79                 2413 	ld	a,c
   0787 CE 01              2414 	adc	a,#0x01
   0789 67                 2415 	ld	h,a
                           2416 ;	genAssign (pointer)
   078A 36 56              2417 	ld	(hl),#0x56
                           2418 ;	background.c 20
                           2419 ;	genPlus
                           2420 ;	genPlusIncr
                           2421 ;	Can't optimise plus by inc, falling back to the normal way
   078C 78                 2422 	ld	a,b
   078D C6 67              2423 	add	a,#0x67
   078F 6F                 2424 	ld	l,a
   0790 79                 2425 	ld	a,c
   0791 CE 01              2426 	adc	a,#0x01
   0793 67                 2427 	ld	h,a
                           2428 ;	genAssign (pointer)
   0794 36 57              2429 	ld	(hl),#0x57
                           2430 ;	background.c 22
                           2431 ;	genAssign
                           2432 ;	AOP_STK for _init_background_i_1_1
   0796 F8 04              2433 	lda	hl,4(sp)
   0798 36 01              2434 	ld	(hl),#0x01
                           2435 ;	genLabel
   079A                    2436 00105$:
                           2437 ;	genCmpEq
                           2438 ;	AOP_STK for _init_background_i_1_1
                           2439 ; genCmpEq: left 1, right 1, result 0
   079A F8 04              2440 	lda	hl,4(sp)
   079C 7E                 2441 	ld	a,(hl)
   079D FE 13              2442 	cp	a,#0x13
   079F CA E5 07           2443 	jp	z,00108$
   07A2                    2444 00122$:
                           2445 ;	background.c 23
                           2446 ;	genPlus
                           2447 ;	AOP_STK for _init_background_i_1_1
                           2448 ;	AOP_STK for _init_background_sloc0_1_0
                           2449 ;	Can't optimise plus by inc, falling back to the normal way
   07A2 58                 2450 	ld	e,b
   07A3 51                 2451 	ld	d,c
   07A4 F8 04              2452 	lda	hl,4(sp)
   07A6 6E                 2453 	ld	l,(hl)
   07A7 26 00              2454 	ld	h,#0x00
   07A9 19                 2455 	add	hl,de
   07AA 7D                 2456 	ld	a,l
   07AB 54                 2457 	ld	d,h
   07AC F8 02              2458 	lda	hl,2(sp)
   07AE 22                 2459 	ld	(hl+),a
   07AF 72                 2460 	ld	(hl),d
                           2461 ;	genAssign (pointer)
                           2462 ;	AOP_STK for _init_background_sloc0_1_0
   07B0 2B                 2463 	dec	hl
   07B1 5E                 2464 	ld	e,(hl)
   07B2 23                 2465 	inc	hl
   07B3 56                 2466 	ld	d,(hl)
   07B4 3E 50              2467 	ld	a,#0x50
   07B6 12                 2468 	ld	(de),a
                           2469 ;	background.c 24
                           2470 ;	genCast
                           2471 ;	AOP_STK for _init_background_i_1_1
                           2472 ;	AOP_STK for _init_background_sloc0_1_0
   07B7 23                 2473 	inc	hl
   07B8 7E                 2474 	ld	a,(hl)
   07B9 2B                 2475 	dec	hl
   07BA 2B                 2476 	dec	hl
   07BB 22                 2477 	ld	(hl+),a
   07BC 36 00              2478 	ld	(hl),#0x00
                           2479 ;	genPlus
                           2480 ;	AOP_STK for _init_background_sloc0_1_0
                           2481 ;	AOP_STK for _init_background_sloc1_1_0
                           2482 ;	genPlusIncr
                           2483 ;	Can't optimise plus by inc, falling back to the normal way
   07BE 2B                 2484 	dec	hl
   07BF 5E                 2485 	ld	e,(hl)
   07C0 23                 2486 	inc	hl
   07C1 56                 2487 	ld	d,(hl)
   07C2 21 54 01           2488 	ld	hl,#0x0154
   07C5 19                 2489 	add	hl,de
   07C6 7D                 2490 	ld	a,l
   07C7 54                 2491 	ld	d,h
   07C8 F8 00              2492 	lda	hl,0(sp)
   07CA 22                 2493 	ld	(hl+),a
   07CB 72                 2494 	ld	(hl),d
                           2495 ;	genPlus
                           2496 ;	AOP_STK for _init_background_sloc1_1_0
                           2497 ;	AOP_STK for _init_background_sloc0_1_0
                           2498 ;	Can't optimise plus by inc, falling back to the normal way
   07CC 58                 2499 	ld	e,b
   07CD 51                 2500 	ld	d,c
   07CE 2B                 2501 	dec	hl
   07CF 2A                 2502 	ld	a,(hl+)
   07D0 66                 2503 	ld	h,(hl)
   07D1 6F                 2504 	ld	l,a
   07D2 19                 2505 	add	hl,de
   07D3 7D                 2506 	ld	a,l
   07D4 54                 2507 	ld	d,h
   07D5 F8 02              2508 	lda	hl,2(sp)
   07D7 22                 2509 	ld	(hl+),a
   07D8 72                 2510 	ld	(hl),d
                           2511 ;	genAssign (pointer)
                           2512 ;	AOP_STK for _init_background_sloc0_1_0
   07D9 2B                 2513 	dec	hl
   07DA 5E                 2514 	ld	e,(hl)
   07DB 23                 2515 	inc	hl
   07DC 56                 2516 	ld	d,(hl)
   07DD 3E 51              2517 	ld	a,#0x51
   07DF 12                 2518 	ld	(de),a
                           2519 ;	background.c 22
                           2520 ;	genPlus
                           2521 ;	AOP_STK for _init_background_i_1_1
                           2522 ;	genPlusIncr
   07E0 23                 2523 	inc	hl
   07E1 34                 2524 	inc	(hl)
                           2525 ;	genGoto
   07E2 C3 9A 07           2526 	jp	00105$
                           2527 ;	genLabel
   07E5                    2528 00108$:
                           2529 ;	background.c 27
                           2530 ;	genAssign
                           2531 ;	AOP_STK for _init_background_i_1_1
   07E5 F8 04              2532 	lda	hl,4(sp)
   07E7 36 01              2533 	ld	(hl),#0x01
                           2534 ;	genLabel
   07E9                    2535 00109$:
                           2536 ;	genCmpEq
                           2537 ;	AOP_STK for _init_background_i_1_1
                           2538 ; genCmpEq: left 1, right 1, result 0
   07E9 F8 04              2539 	lda	hl,4(sp)
   07EB 7E                 2540 	ld	a,(hl)
   07EC FE 11              2541 	cp	a,#0x11
   07EE CA 40 08           2542 	jp	z,00113$
   07F1                    2543 00123$:
                           2544 ;	background.c 28
                           2545 ;	genMult
                           2546 ;	AOP_STK for _init_background_i_1_1
                           2547 ;	AOP_STK for _init_background_sloc1_1_0
   07F1 F8 04              2548 	lda	hl,4(sp)
   07F3 5E                 2549 	ld	e,(hl)
   07F4 16 00              2550 	ld	d,#0x00
   07F6 6B                 2551 	ld	l,e
   07F7 62                 2552 	ld	h,d
   07F8 29                 2553 	add	hl,hl
   07F9 29                 2554 	add	hl,hl
   07FA 19                 2555 	add	hl,de
   07FB 29                 2556 	add	hl,hl
   07FC 29                 2557 	add	hl,hl
   07FD 7D                 2558 	ld	a,l
   07FE 54                 2559 	ld	d,h
   07FF F8 00              2560 	lda	hl,0(sp)
   0801 22                 2561 	ld	(hl+),a
   0802 72                 2562 	ld	(hl),d
                           2563 ;	genPlus
                           2564 ;	AOP_STK for _init_background_sloc1_1_0
                           2565 ;	AOP_STK for _init_background_sloc0_1_0
                           2566 ;	Can't optimise plus by inc, falling back to the normal way
   0803 58                 2567 	ld	e,b
   0804 51                 2568 	ld	d,c
   0805 2B                 2569 	dec	hl
   0806 2A                 2570 	ld	a,(hl+)
   0807 66                 2571 	ld	h,(hl)
   0808 6F                 2572 	ld	l,a
   0809 19                 2573 	add	hl,de
   080A 7D                 2574 	ld	a,l
   080B 54                 2575 	ld	d,h
   080C F8 02              2576 	lda	hl,2(sp)
   080E 22                 2577 	ld	(hl+),a
   080F 72                 2578 	ld	(hl),d
                           2579 ;	genAssign (pointer)
                           2580 ;	AOP_STK for _init_background_sloc0_1_0
   0810 2B                 2581 	dec	hl
   0811 5E                 2582 	ld	e,(hl)
   0812 23                 2583 	inc	hl
   0813 56                 2584 	ld	d,(hl)
   0814 3E 52              2585 	ld	a,#0x52
   0816 12                 2586 	ld	(de),a
                           2587 ;	background.c 29
                           2588 ;	genPlus
                           2589 ;	AOP_STK for _init_background_sloc1_1_0
                           2590 ;	AOP_STK for _init_background_sloc0_1_0
                           2591 ;	genPlusIncr
                           2592 ;	Can't optimise plus by inc, falling back to the normal way
   0817 F8 00              2593 	lda	hl,0(sp)
   0819 5E                 2594 	ld	e,(hl)
   081A 23                 2595 	inc	hl
   081B 56                 2596 	ld	d,(hl)
   081C 21 13 00           2597 	ld	hl,#0x0013
   081F 19                 2598 	add	hl,de
   0820 7D                 2599 	ld	a,l
   0821 54                 2600 	ld	d,h
   0822 F8 02              2601 	lda	hl,2(sp)
   0824 22                 2602 	ld	(hl+),a
   0825 72                 2603 	ld	(hl),d
                           2604 ;	genPlus
                           2605 ;	AOP_STK for _init_background_sloc0_1_0
                           2606 ;	AOP_STK for _init_background_sloc1_1_0
                           2607 ;	Can't optimise plus by inc, falling back to the normal way
   0826 58                 2608 	ld	e,b
   0827 51                 2609 	ld	d,c
   0828 2B                 2610 	dec	hl
   0829 2A                 2611 	ld	a,(hl+)
   082A 66                 2612 	ld	h,(hl)
   082B 6F                 2613 	ld	l,a
   082C 19                 2614 	add	hl,de
   082D 7D                 2615 	ld	a,l
   082E 54                 2616 	ld	d,h
   082F F8 00              2617 	lda	hl,0(sp)
   0831 22                 2618 	ld	(hl+),a
   0832 72                 2619 	ld	(hl),d
                           2620 ;	genAssign (pointer)
                           2621 ;	AOP_STK for _init_background_sloc1_1_0
   0833 2B                 2622 	dec	hl
   0834 5E                 2623 	ld	e,(hl)
   0835 23                 2624 	inc	hl
   0836 56                 2625 	ld	d,(hl)
   0837 3E 53              2626 	ld	a,#0x53
   0839 12                 2627 	ld	(de),a
                           2628 ;	background.c 27
                           2629 ;	genPlus
                           2630 ;	AOP_STK for _init_background_i_1_1
                           2631 ;	genPlusIncr
   083A F8 04              2632 	lda	hl,4(sp)
   083C 34                 2633 	inc	(hl)
                           2634 ;	genGoto
   083D C3 E9 07           2635 	jp	00109$
                           2636 ;	genLabel
   0840                    2637 00113$:
                           2638 ;	genEndFunction
   0840 E8 05              2639 	lda	sp,5(sp)
   0842 C9                 2640 	ret
   0843                    2641 ___init_background_end:
                           2642 ;	background.c 33
                           2643 ;	genLabel
                           2644 ;	genFunction
                           2645 ;	---------------------------------
                           2646 ; Function update_background
                           2647 ; ---------------------------------
   0843                    2648 ___update_background_start:
   0843                    2649 _update_background:
   0843 E8 CD              2650 	lda	sp,-51(sp)
                           2651 ;	background.c 38
                           2652 ;	genIpush
                           2653 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0845 21 B1 01           2654 	ld	hl,#_lazer_map
   0848 E5                 2655 	push	hl
                           2656 ;	genIpush
                           2657 ;	AOP_STK for 
   0849 F8 37              2658 	lda	hl,55(sp)
   084B 2A                 2659 	ld	a,(hl+)
   084C 66                 2660 	ld	h,(hl)
   084D 6F                 2661 	ld	l,a
   084E E5                 2662 	push	hl
                           2663 ;	genCall
   084F CD 8F 06           2664 	call	_project_lazer
   0852 E8 04              2665 	lda	sp,4(sp)
                           2666 ;	background.c 63
                           2667 ;	genAssign
                           2668 ;	AOP_STK for _update_background_x_1_1
   0854 F8 31              2669 	lda	hl,49(sp)
   0856 36 00              2670 	ld	(hl),#0x00
   0858 23                 2671 	inc	hl
   0859 36 00              2672 	ld	(hl),#0x00
                           2673 ;	genLabel
   085B                    2674 00105$:
                           2675 ;	genCmpEq
                           2676 ;	AOP_STK for _update_background_x_1_1
                           2677 ; genCmpEq: left 2, right 2, result 0
   085B F8 31              2678 	lda	hl,49(sp)
   085D 7E                 2679 	ld	a,(hl)
   085E FE 08              2680 	cp	a,#0x08
   0860 C2 69 08           2681 	jp	nz,00115$
   0863 23                 2682 	inc	hl
   0864 7E                 2683 	ld	a,(hl)
   0865 B7                 2684 	or	a,a
   0866 CA 30 0A           2685 	jp	z,00109$
   0869                    2686 00115$:
                           2687 ;	background.c 64
                           2688 ;	genAssign
                           2689 ;	AOP_STK for _update_background_y_1_1
   0869 F8 2F              2690 	lda	hl,47(sp)
   086B 36 00              2691 	ld	(hl),#0x00
   086D 23                 2692 	inc	hl
   086E 36 00              2693 	ld	(hl),#0x00
                           2694 ;	genLabel
   0870                    2695 00101$:
                           2696 ;	genCmpEq
                           2697 ;	AOP_STK for _update_background_y_1_1
                           2698 ; genCmpEq: left 2, right 2, result 1
   0870 F8 2F              2699 	lda	hl,47(sp)
   0872 7E                 2700 	ld	a,(hl)
   0873 FE 09              2701 	cp	a,#0x09
   0875 C2 82 08           2702 	jp	nz,00116$
   0878 23                 2703 	inc	hl
   0879 7E                 2704 	ld	a,(hl)
   087A B7                 2705 	or	a,a
   087B C2 82 08           2706 	jp	nz,00116$
   087E 3E 01              2707 	ld	a,#0x01
   0880 18 01              2708 	jr	00117$
   0882                    2709 00116$:
   0882 AF                 2710 	xor	a,a
   0883                    2711 00117$:
                           2712 ;	genIfx
   0883 B7                 2713 	or	a,a
   0884 C2 26 0A           2714 	jp	nz,00107$
                           2715 ;	background.c 65
                           2716 ;	genLeftShift
                           2717 ;	AOP_STK for _update_background_x_1_1
                           2718 ;	AOP_STK for _update_background_sloc0_1_0
   0887 F8 31              2719 	lda	hl,49(sp)
   0889 7E                 2720 	ld	a,(hl)
   088A F8 29              2721 	lda	hl,41(sp)
   088C 77                 2722 	ld	(hl),a
   088D F8 32              2723 	lda	hl,50(sp)
   088F 7E                 2724 	ld	a,(hl)
   0890 F8 2A              2725 	lda	hl,42(sp)
   0892 77                 2726 	ld	(hl),a
   0893 3E 04              2727 	ld	a,#0x03+1
   0895 18 07              2728 	jr	00119$
   0897                    2729 00118$:
   0897 F8 29              2730 	lda	hl,41(sp)
   0899 CB 26              2731 	sla	(hl)
   089B 23                 2732 	inc	hl
   089C CB 16              2733 	rl	(hl)
   089E                    2734 00119$:
   089E 3D                 2735 	dec	a
   089F 20 F6              2736 	jr	nz,00118$
                           2737 ;	genPlus
                           2738 ;	AOP_STK for _update_background_y_1_1
                           2739 ;	AOP_STK for _update_background_sloc0_1_0
                           2740 ;	AOP_STK for _update_background_sloc2_1_0
                           2741 ;	Can't optimise plus by inc, falling back to the normal way
   08A1 F8 2F              2742 	lda	hl,47(sp)
   08A3 5E                 2743 	ld	e,(hl)
   08A4 23                 2744 	inc	hl
   08A5 56                 2745 	ld	d,(hl)
   08A6 F8 29              2746 	lda	hl,41(sp)
   08A8 2A                 2747 	ld	a,(hl+)
   08A9 66                 2748 	ld	h,(hl)
   08AA 6F                 2749 	ld	l,a
   08AB 19                 2750 	add	hl,de
   08AC 7D                 2751 	ld	a,l
   08AD 54                 2752 	ld	d,h
   08AE F8 25              2753 	lda	hl,37(sp)
   08B0 22                 2754 	ld	(hl+),a
   08B1 72                 2755 	ld	(hl),d
                           2756 ;	genPlus
                           2757 ;	AOP_STK for _update_background_sloc2_1_0
                           2758 ;	AOP_STK for _update_background_x_1_1
                           2759 ;	AOP_STK for _update_background_sloc1_1_0
                           2760 ;	Can't optimise plus by inc, falling back to the normal way
   08B2 2B                 2761 	dec	hl
   08B3 5E                 2762 	ld	e,(hl)
   08B4 23                 2763 	inc	hl
   08B5 56                 2764 	ld	d,(hl)
   08B6 F8 31              2765 	lda	hl,49(sp)
   08B8 2A                 2766 	ld	a,(hl+)
   08B9 66                 2767 	ld	h,(hl)
   08BA 6F                 2768 	ld	l,a
   08BB 19                 2769 	add	hl,de
   08BC 7D                 2770 	ld	a,l
   08BD 54                 2771 	ld	d,h
   08BE F8 27              2772 	lda	hl,39(sp)
   08C0 22                 2773 	ld	(hl+),a
   08C1 72                 2774 	ld	(hl),d
                           2775 ;	genAssign
                           2776 ;	AOP_STK for _update_background_sloc1_1_0
                           2777 ;	AOP_STK for _update_background_offset_1_1
   08C2 2B                 2778 	dec	hl
   08C3 2A                 2779 	ld	a,(hl+)
   08C4 5E                 2780 	ld	e,(hl)
   08C5 F8 2D              2781 	lda	hl,45(sp)
   08C7 22                 2782 	ld	(hl+),a
   08C8 73                 2783 	ld	(hl),e
                           2784 ;	background.c 66
                           2785 ;	genPlus
                           2786 ;	AOP_STK for 
                           2787 ;	AOP_STK for _update_background_offset_1_1
                           2788 ;	AOP_STK for _update_background_sloc3_1_0
                           2789 ;	Can't optimise plus by inc, falling back to the normal way
   08C9 F8 35              2790 	lda	hl,53(sp)
   08CB 5E                 2791 	ld	e,(hl)
   08CC 23                 2792 	inc	hl
   08CD 56                 2793 	ld	d,(hl)
   08CE F8 2D              2794 	lda	hl,45(sp)
   08D0 2A                 2795 	ld	a,(hl+)
   08D1 66                 2796 	ld	h,(hl)
   08D2 6F                 2797 	ld	l,a
   08D3 19                 2798 	add	hl,de
   08D4 7D                 2799 	ld	a,l
   08D5 54                 2800 	ld	d,h
   08D6 F8 23              2801 	lda	hl,35(sp)
                           2802 ;	genPointerGet
                           2803 ;	AOP_STK for _update_background_sloc3_1_0
                           2804 ;	AOP_STK for _update_background_sloc7_1_0
   08D8 22                 2805 	ld	(hl+),a
   08D9 72                 2806 	ld	(hl),d
   08DA 5F                 2807 	ld	e,a
   08DB 1A                 2808 	ld	a,(de)
   08DC F8 1E              2809 	lda	hl,30(sp)
   08DE 77                 2810 	ld	(hl),a
                           2811 ;	genPlus
                           2812 ;	AOP_STK for _update_background_offset_1_1
                           2813 ;	AOP_STK for _update_background_sloc4_1_0
                           2814 ;	Can't optimise plus by inc, falling back to the normal way
   08DF 11 B1 01           2815 	ld	de,#_lazer_map
   08E2 F8 2D              2816 	lda	hl,45(sp)
   08E4 2A                 2817 	ld	a,(hl+)
   08E5 66                 2818 	ld	h,(hl)
   08E6 6F                 2819 	ld	l,a
   08E7 19                 2820 	add	hl,de
   08E8 7D                 2821 	ld	a,l
   08E9 54                 2822 	ld	d,h
   08EA F8 21              2823 	lda	hl,33(sp)
                           2824 ;	genPointerGet
                           2825 ;	AOP_STK for _update_background_sloc4_1_0
                           2826 ;	AOP_STK for _update_background_sloc6_1_0
   08EC 22                 2827 	ld	(hl+),a
   08ED 72                 2828 	ld	(hl),d
   08EE 5F                 2829 	ld	e,a
   08EF 1A                 2830 	ld	a,(de)
   08F0 F8 1F              2831 	lda	hl,31(sp)
                           2832 ;	genPlus
                           2833 ;	AOP_STK for _update_background_sloc7_1_0
                           2834 ;	AOP_STK for _update_background_sloc6_1_0
                           2835 ;	AOP_STK for _update_background_sloc5_1_0
                           2836 ;	Can't optimise plus by inc, falling back to the normal way
   08F2 32                 2837 	ld      (hl-),a
   08F3 2A                 2838 	ld	a,(hl+)
   08F4 86                 2839 	add	a,(hl)
   08F5 23                 2840 	inc	hl
                           2841 ;	genCast
                           2842 ;	AOP_STK for _update_background_sloc5_1_0
                           2843 ;	AOP_STK for _update_background_tile_1_1
   08F6 77                 2844 	ld      (hl),a
                           2845 ; Removed redundent load
   08F7 F8 2B              2846 	lda	hl,43(sp)
   08F9 22                 2847 	ld	(hl+),a
   08FA 36 00              2848 	ld	(hl),#0x00
                           2849 ;	genAssign
                           2850 ;	AOP_STK for _update_background_tile_1_1
                           2851 ;	(registers are the same)
                           2852 ;	background.c 67
                           2853 ;	genLeftShift
                           2854 ;	AOP_STK for _update_background_y_1_1
   08FC F8 2F              2855 	lda	hl,47(sp)
   08FE 4E                 2856 	ld	c,(hl)
   08FF 23                 2857 	inc	hl
   0900 46                 2858 	ld	b,(hl)
   0901 CB 21              2859 	sla	c
   0903 CB 10              2860 	rl	b
                           2861 ;	genPlus
                           2862 ;	AOP_STK for _update_background_sloc0_1_0
                           2863 ;	AOP_STK for _update_background_sloc8_1_0
                           2864 ;	Can't optimise plus by inc, falling back to the normal way
   0905 F8 29              2865 	lda	hl,41(sp)
   0907 2A                 2866 	ld	a,(hl+)
   0908 66                 2867 	ld	h,(hl)
   0909 6F                 2868 	ld	l,a
   090A 09                 2869 	add	hl,bc
   090B 7D                 2870 	ld	a,l
   090C 54                 2871 	ld	d,h
   090D F8 1C              2872 	lda	hl,28(sp)
   090F 22                 2873 	ld	(hl+),a
   0910 72                 2874 	ld	(hl),d
                           2875 ;	genLeftShift
                           2876 ;	AOP_STK for _update_background_x_1_1
                           2877 ;	AOP_STK for _update_background_sloc9_1_0
   0911 F8 31              2878 	lda	hl,49(sp)
   0913 7E                 2879 	ld	a,(hl)
   0914 F8 1A              2880 	lda	hl,26(sp)
   0916 77                 2881 	ld	(hl),a
   0917 F8 32              2882 	lda	hl,50(sp)
   0919 7E                 2883 	ld	a,(hl)
   091A F8 1B              2884 	lda	hl,27(sp)
   091C 77                 2885 	ld	(hl),a
   091D 3E 06              2886 	ld	a,#0x05+1
   091F 18 07              2887 	jr	00123$
   0921                    2888 00122$:
   0921 F8 1A              2889 	lda	hl,26(sp)
   0923 CB 26              2890 	sla	(hl)
   0925 23                 2891 	inc	hl
   0926 CB 16              2892 	rl	(hl)
   0928                    2893 00123$:
   0928 3D                 2894 	dec	a
   0929 20 F6              2895 	jr	nz,00122$
                           2896 ;	genPlus
                           2897 ;	AOP_STK for _update_background_sloc8_1_0
                           2898 ;	AOP_STK for _update_background_sloc9_1_0
                           2899 ;	AOP_STK for _update_background_sloc10_1_0
                           2900 ;	Can't optimise plus by inc, falling back to the normal way
   092B F8 1C              2901 	lda	hl,28(sp)
   092D 5E                 2902 	ld	e,(hl)
   092E 23                 2903 	inc	hl
   092F 56                 2904 	ld	d,(hl)
   0930 F8 1A              2905 	lda	hl,26(sp)
   0932 2A                 2906 	ld	a,(hl+)
   0933 66                 2907 	ld	h,(hl)
   0934 6F                 2908 	ld	l,a
   0935 19                 2909 	add	hl,de
   0936 7D                 2910 	ld	a,l
   0937 54                 2911 	ld	d,h
   0938 F8 18              2912 	lda	hl,24(sp)
   093A 22                 2913 	ld	(hl+),a
   093B 72                 2914 	ld	(hl),d
                           2915 ;	genPlus
                           2916 ;	AOP_STK for _update_background_sloc10_1_0
                           2917 ;	AOP_STK for _update_background_sloc11_1_0
                           2918 ;	genPlusIncr
                           2919 ;	Can't optimise plus by inc, falling back to the normal way
   093C 2B                 2920 	dec	hl
   093D 5E                 2921 	ld	e,(hl)
   093E 23                 2922 	inc	hl
   093F 56                 2923 	ld	d,(hl)
   0940 21 15 00           2924 	ld	hl,#0x0015
   0943 19                 2925 	add	hl,de
   0944 7D                 2926 	ld	a,l
   0945 54                 2927 	ld	d,h
   0946 F8 16              2928 	lda	hl,22(sp)
   0948 22                 2929 	ld	(hl+),a
   0949 72                 2930 	ld	(hl),d
                           2931 ;	genAssign
                           2932 ;	AOP_STK for _update_background_sloc11_1_0
                           2933 ;	AOP_STK for _update_background_offset_1_1
   094A 2B                 2934 	dec	hl
   094B 2A                 2935 	ld	a,(hl+)
   094C 5E                 2936 	ld	e,(hl)
   094D F8 2D              2937 	lda	hl,45(sp)
   094F 22                 2938 	ld	(hl+),a
   0950 73                 2939 	ld	(hl),e
                           2940 ;	background.c 69
                           2941 ;	genPlus
                           2942 ;	AOP_STK for 
                           2943 ;	AOP_STK for _update_background_offset_1_1
                           2944 ;	AOP_STK for _update_background_sloc12_1_0
                           2945 ;	Can't optimise plus by inc, falling back to the normal way
   0951 F8 37              2946 	lda	hl,55(sp)
   0953 5E                 2947 	ld	e,(hl)
   0954 23                 2948 	inc	hl
   0955 56                 2949 	ld	d,(hl)
   0956 F8 2D              2950 	lda	hl,45(sp)
   0958 2A                 2951 	ld	a,(hl+)
   0959 66                 2952 	ld	h,(hl)
   095A 6F                 2953 	ld	l,a
   095B 19                 2954 	add	hl,de
   095C 7D                 2955 	ld	a,l
   095D 54                 2956 	ld	d,h
   095E F8 14              2957 	lda	hl,20(sp)
   0960 22                 2958 	ld	(hl+),a
   0961 72                 2959 	ld	(hl),d
                           2960 ;	genCast
                           2961 ;	AOP_STK for _update_background_tile_1_1
   0962 F8 2B              2962 	lda	hl,43(sp)
   0964 7E                 2963 	ld	a,(hl)
                           2964 ;	genAssign (pointer)
                           2965 ;	AOP_STK for _update_background_sloc12_1_0
   0965 F8 14              2966 	lda	hl,20(sp)
   0967 5E                 2967 	ld	e,(hl)
   0968 23                 2968 	inc	hl
   0969 56                 2969 	ld	d,(hl)
   096A 12                 2970 	ld	(de),a
                           2971 ;	background.c 70
                           2972 ;	genPlus
                           2973 ;	AOP_STK for _update_background_offset_1_1
                           2974 ;	AOP_STK for _update_background_sloc13_1_0
                           2975 ;	genPlusIncr
                           2976 ;	Can't optimise plus by inc, falling back to the normal way
   096B F8 2D              2977 	lda	hl,45(sp)
   096D 5E                 2978 	ld	e,(hl)
   096E 23                 2979 	inc	hl
   096F 56                 2980 	ld	d,(hl)
   0970 21 01 00           2981 	ld	hl,#0x0001
   0973 19                 2982 	add	hl,de
   0974 7D                 2983 	ld	a,l
   0975 54                 2984 	ld	d,h
   0976 F8 12              2985 	lda	hl,18(sp)
   0978 22                 2986 	ld	(hl+),a
   0979 72                 2987 	ld	(hl),d
                           2988 ;	genPlus
                           2989 ;	AOP_STK for 
                           2990 ;	AOP_STK for _update_background_sloc13_1_0
                           2991 ;	AOP_STK for _update_background_sloc14_1_0
                           2992 ;	Can't optimise plus by inc, falling back to the normal way
   097A F8 37              2993 	lda	hl,55(sp)
   097C 5E                 2994 	ld	e,(hl)
   097D 23                 2995 	inc	hl
   097E 56                 2996 	ld	d,(hl)
   097F F8 12              2997 	lda	hl,18(sp)
   0981 2A                 2998 	ld	a,(hl+)
   0982 66                 2999 	ld	h,(hl)
   0983 6F                 3000 	ld	l,a
   0984 19                 3001 	add	hl,de
   0985 7D                 3002 	ld	a,l
   0986 54                 3003 	ld	d,h
   0987 F8 10              3004 	lda	hl,16(sp)
   0989 22                 3005 	ld	(hl+),a
   098A 72                 3006 	ld	(hl),d
                           3007 ;	genPlus
                           3008 ;	AOP_STK for _update_background_tile_1_1
                           3009 ;	AOP_STK for _update_background_sloc15_1_0
                           3010 ;	genPlusIncr
                           3011 ;	Can't optimise plus by inc, falling back to the normal way
   098B F8 2B              3012 	lda	hl,43(sp)
   098D 5E                 3013 	ld	e,(hl)
   098E 23                 3014 	inc	hl
   098F 56                 3015 	ld	d,(hl)
   0990 21 01 00           3016 	ld	hl,#0x0001
   0993 19                 3017 	add	hl,de
   0994 7D                 3018 	ld	a,l
   0995 54                 3019 	ld	d,h
   0996 F8 0E              3020 	lda	hl,14(sp)
   0998 22                 3021 	ld	(hl+),a
   0999 72                 3022 	ld	(hl),d
                           3023 ;	genCast
                           3024 ;	AOP_STK for _update_background_sloc15_1_0
   099A 2B                 3025 	dec	hl
                           3026 ;	genAssign (pointer)
                           3027 ;	AOP_STK for _update_background_sloc14_1_0
   099B 2A                 3028 	ld	a,(hl+)
   099C 23                 3029 	inc	hl
   099D 5E                 3030 	ld	e,(hl)
   099E 23                 3031 	inc	hl
   099F 56                 3032 	ld	d,(hl)
   09A0 12                 3033 	ld	(de),a
                           3034 ;	background.c 71
                           3035 ;	genPlus
                           3036 ;	AOP_STK for _update_background_offset_1_1
                           3037 ;	AOP_STK for _update_background_sloc16_1_0
                           3038 ;	genPlusIncr
                           3039 ;	Can't optimise plus by inc, falling back to the normal way
   09A1 F8 2D              3040 	lda	hl,45(sp)
   09A3 5E                 3041 	ld	e,(hl)
   09A4 23                 3042 	inc	hl
   09A5 56                 3043 	ld	d,(hl)
   09A6 21 14 00           3044 	ld	hl,#0x0014
   09A9 19                 3045 	add	hl,de
   09AA 7D                 3046 	ld	a,l
   09AB 54                 3047 	ld	d,h
   09AC F8 0C              3048 	lda	hl,12(sp)
   09AE 22                 3049 	ld	(hl+),a
   09AF 72                 3050 	ld	(hl),d
                           3051 ;	genPlus
                           3052 ;	AOP_STK for 
                           3053 ;	AOP_STK for _update_background_sloc16_1_0
                           3054 ;	AOP_STK for _update_background_sloc17_1_0
                           3055 ;	Can't optimise plus by inc, falling back to the normal way
   09B0 F8 37              3056 	lda	hl,55(sp)
   09B2 5E                 3057 	ld	e,(hl)
   09B3 23                 3058 	inc	hl
   09B4 56                 3059 	ld	d,(hl)
   09B5 F8 0C              3060 	lda	hl,12(sp)
   09B7 2A                 3061 	ld	a,(hl+)
   09B8 66                 3062 	ld	h,(hl)
   09B9 6F                 3063 	ld	l,a
   09BA 19                 3064 	add	hl,de
   09BB 7D                 3065 	ld	a,l
   09BC 54                 3066 	ld	d,h
   09BD F8 0A              3067 	lda	hl,10(sp)
   09BF 22                 3068 	ld	(hl+),a
   09C0 72                 3069 	ld	(hl),d
                           3070 ;	genPlus
                           3071 ;	AOP_STK for _update_background_tile_1_1
                           3072 ;	AOP_STK for _update_background_sloc18_1_0
                           3073 ;	genPlusIncr
                           3074 ;	Can't optimise plus by inc, falling back to the normal way
   09C1 F8 2B              3075 	lda	hl,43(sp)
   09C3 5E                 3076 	ld	e,(hl)
   09C4 23                 3077 	inc	hl
   09C5 56                 3078 	ld	d,(hl)
   09C6 21 02 00           3079 	ld	hl,#0x0002
   09C9 19                 3080 	add	hl,de
   09CA 7D                 3081 	ld	a,l
   09CB 54                 3082 	ld	d,h
   09CC F8 08              3083 	lda	hl,8(sp)
   09CE 22                 3084 	ld	(hl+),a
   09CF 72                 3085 	ld	(hl),d
                           3086 ;	genCast
                           3087 ;	AOP_STK for _update_background_sloc18_1_0
   09D0 2B                 3088 	dec	hl
                           3089 ;	genAssign (pointer)
                           3090 ;	AOP_STK for _update_background_sloc17_1_0
   09D1 2A                 3091 	ld	a,(hl+)
   09D2 23                 3092 	inc	hl
   09D3 5E                 3093 	ld	e,(hl)
   09D4 23                 3094 	inc	hl
   09D5 56                 3095 	ld	d,(hl)
   09D6 12                 3096 	ld	(de),a
                           3097 ;	background.c 72
                           3098 ;	genPlus
                           3099 ;	AOP_STK for _update_background_offset_1_1
                           3100 ;	AOP_STK for _update_background_sloc19_1_0
                           3101 ;	genPlusIncr
                           3102 ;	Can't optimise plus by inc, falling back to the normal way
   09D7 F8 2D              3103 	lda	hl,45(sp)
   09D9 5E                 3104 	ld	e,(hl)
   09DA 23                 3105 	inc	hl
   09DB 56                 3106 	ld	d,(hl)
   09DC 21 15 00           3107 	ld	hl,#0x0015
   09DF 19                 3108 	add	hl,de
   09E0 7D                 3109 	ld	a,l
   09E1 54                 3110 	ld	d,h
   09E2 F8 06              3111 	lda	hl,6(sp)
   09E4 22                 3112 	ld	(hl+),a
   09E5 72                 3113 	ld	(hl),d
                           3114 ;	genPlus
                           3115 ;	AOP_STK for 
                           3116 ;	AOP_STK for _update_background_sloc19_1_0
                           3117 ;	AOP_STK for _update_background_sloc20_1_0
                           3118 ;	Can't optimise plus by inc, falling back to the normal way
   09E6 F8 37              3119 	lda	hl,55(sp)
   09E8 5E                 3120 	ld	e,(hl)
   09E9 23                 3121 	inc	hl
   09EA 56                 3122 	ld	d,(hl)
   09EB F8 06              3123 	lda	hl,6(sp)
   09ED 2A                 3124 	ld	a,(hl+)
   09EE 66                 3125 	ld	h,(hl)
   09EF 6F                 3126 	ld	l,a
   09F0 19                 3127 	add	hl,de
   09F1 7D                 3128 	ld	a,l
   09F2 54                 3129 	ld	d,h
   09F3 F8 04              3130 	lda	hl,4(sp)
   09F5 22                 3131 	ld	(hl+),a
   09F6 72                 3132 	ld	(hl),d
                           3133 ;	genPlus
                           3134 ;	AOP_STK for _update_background_tile_1_1
                           3135 ;	AOP_STK for _update_background_sloc21_1_0
                           3136 ;	genPlusIncr
                           3137 ;	Can't optimise plus by inc, falling back to the normal way
   09F7 F8 2B              3138 	lda	hl,43(sp)
   09F9 5E                 3139 	ld	e,(hl)
   09FA 23                 3140 	inc	hl
   09FB 56                 3141 	ld	d,(hl)
   09FC 21 03 00           3142 	ld	hl,#0x0003
   09FF 19                 3143 	add	hl,de
   0A00 7D                 3144 	ld	a,l
   0A01 54                 3145 	ld	d,h
   0A02 F8 02              3146 	lda	hl,2(sp)
   0A04 22                 3147 	ld	(hl+),a
   0A05 72                 3148 	ld	(hl),d
                           3149 ;	genCast
                           3150 ;	AOP_STK for _update_background_sloc21_1_0
   0A06 2B                 3151 	dec	hl
                           3152 ;	genAssign (pointer)
                           3153 ;	AOP_STK for _update_background_sloc20_1_0
   0A07 2A                 3154 	ld	a,(hl+)
   0A08 23                 3155 	inc	hl
   0A09 5E                 3156 	ld	e,(hl)
   0A0A 23                 3157 	inc	hl
   0A0B 56                 3158 	ld	d,(hl)
   0A0C 12                 3159 	ld	(de),a
                           3160 ;	background.c 64
                           3161 ;	genPlus
                           3162 ;	AOP_STK for _update_background_y_1_1
                           3163 ;	AOP_STK for _update_background_sloc22_1_0
                           3164 ;	genPlusIncr
                           3165 ;	Can't optimise plus by inc, falling back to the normal way
   0A0D F8 2F              3166 	lda	hl,47(sp)
   0A0F 5E                 3167 	ld	e,(hl)
   0A10 23                 3168 	inc	hl
   0A11 56                 3169 	ld	d,(hl)
   0A12 21 01 00           3170 	ld	hl,#0x0001
   0A15 19                 3171 	add	hl,de
   0A16 7D                 3172 	ld	a,l
   0A17 54                 3173 	ld	d,h
   0A18 F8 00              3174 	lda	hl,0(sp)
   0A1A 22                 3175 	ld	(hl+),a
   0A1B 72                 3176 	ld	(hl),d
                           3177 ;	genAssign
                           3178 ;	AOP_STK for _update_background_sloc22_1_0
                           3179 ;	AOP_STK for _update_background_y_1_1
   0A1C 2B                 3180 	dec	hl
   0A1D 2A                 3181 	ld	a,(hl+)
   0A1E 5E                 3182 	ld	e,(hl)
   0A1F F8 2F              3183 	lda	hl,47(sp)
   0A21 22                 3184 	ld	(hl+),a
   0A22 73                 3185 	ld	(hl),e
                           3186 ;	genGoto
   0A23 C3 70 08           3187 	jp	00101$
                           3188 ;	genLabel
   0A26                    3189 00107$:
                           3190 ;	background.c 63
                           3191 ;	genPlus
                           3192 ;	AOP_STK for _update_background_x_1_1
                           3193 ;	genPlusIncr
   0A26 F8 31              3194 	lda	hl,49(sp)
   0A28 34                 3195 	inc	(hl)
   0A29 20 02              3196 	jr	nz,00124$
   0A2B 23                 3197 	inc	hl
   0A2C 34                 3198 	inc	(hl)
   0A2D                    3199 00124$:
                           3200 ;	genGoto
   0A2D C3 5B 08           3201 	jp	00105$
                           3202 ;	genLabel
   0A30                    3203 00109$:
                           3204 ;	genEndFunction
   0A30 E8 33              3205 	lda	sp,51(sp)
   0A32 C9                 3206 	ret
   0A33                    3207 ___update_background_end:
                           3208 ;	transition.c 1
                           3209 ;	genLabel
                           3210 ;	genFunction
                           3211 ;	---------------------------------
                           3212 ; Function check_transition
                           3213 ; ---------------------------------
   0A33                    3214 ___check_transition_start:
   0A33                    3215 _check_transition:
   0A33 E8 F1              3216 	lda	sp,-15(sp)
                           3217 ;	transition.c 2
                           3218 ;	genAssign
                           3219 ;	AOP_STK for _check_transition_objectives_1_1
   0A35 F8 09              3220 	lda	hl,9(sp)
   0A37 36 00              3221 	ld	(hl),#0x00
   0A39 23                 3222 	inc	hl
   0A3A 36 00              3223 	ld	(hl),#0x00
                           3224 ;	genAssign
                           3225 ;	AOP_STK for _check_transition_defeat_1_1
   0A3C F8 07              3226 	lda	hl,7(sp)
   0A3E 36 00              3227 	ld	(hl),#0x00
   0A40 23                 3228 	inc	hl
   0A41 36 00              3229 	ld	(hl),#0x00
                           3230 ;	transition.c 5
                           3231 ;	genAssign
                           3232 ;	AOP_STK for _check_transition_x_1_1
   0A43 F8 0D              3233 	lda	hl,13(sp)
   0A45 36 01              3234 	ld	(hl),#0x01
   0A47 23                 3235 	inc	hl
   0A48 36 00              3236 	ld	(hl),#0x00
                           3237 ;	genLabel
   0A4A                    3238 00114$:
                           3239 ;	genCmpEq
                           3240 ;	AOP_STK for _check_transition_x_1_1
                           3241 ; genCmpEq: left 2, right 2, result 0
   0A4A F8 0D              3242 	lda	hl,13(sp)
   0A4C 7E                 3243 	ld	a,(hl)
   0A4D FE 13              3244 	cp	a,#0x13
   0A4F C2 58 0A           3245 	jp	nz,00128$
   0A52 23                 3246 	inc	hl
   0A53 7E                 3247 	ld	a,(hl)
   0A54 B7                 3248 	or	a,a
   0A55 CA FB 0A           3249 	jp	z,00117$
   0A58                    3250 00128$:
                           3251 ;	transition.c 6
                           3252 ;	genAssign
                           3253 ;	AOP_STK for _check_transition_y_1_1
   0A58 F8 0B              3254 	lda	hl,11(sp)
   0A5A 36 14              3255 	ld	(hl),#0x14
   0A5C 23                 3256 	inc	hl
   0A5D 36 00              3257 	ld	(hl),#0x00
                           3258 ;	genLabel
   0A5F                    3259 00110$:
                           3260 ;	genCmpEq
                           3261 ;	AOP_STK for _check_transition_y_1_1
                           3262 ; genCmpEq: left 2, right 2, result 1
   0A5F F8 0B              3263 	lda	hl,11(sp)
   0A61 7E                 3264 	ld	a,(hl)
   0A62 FE 54              3265 	cp	a,#0x54
   0A64 C2 72 0A           3266 	jp	nz,00129$
   0A67 23                 3267 	inc	hl
   0A68 7E                 3268 	ld	a,(hl)
   0A69 FE 01              3269 	cp	a,#0x01
   0A6B C2 72 0A           3270 	jp	nz,00129$
   0A6E 3E 01              3271 	ld	a,#0x01
   0A70 18 01              3272 	jr	00130$
   0A72                    3273 00129$:
   0A72 AF                 3274 	xor	a,a
   0A73                    3275 00130$:
                           3276 ;	genIfx
   0A73 B7                 3277 	or	a,a
   0A74 C2 E9 0A           3278 	jp	nz,00116$
                           3279 ;	transition.c 7
                           3280 ;	genPlus
                           3281 ;	AOP_STK for _check_transition_y_1_1
                           3282 ;	AOP_STK for _check_transition_x_1_1
                           3283 ;	AOP_STK for _check_transition_sloc0_1_0
                           3284 ;	Can't optimise plus by inc, falling back to the normal way
   0A77 F8 0B              3285 	lda	hl,11(sp)
   0A79 5E                 3286 	ld	e,(hl)
   0A7A 23                 3287 	inc	hl
   0A7B 56                 3288 	ld	d,(hl)
   0A7C 23                 3289 	inc	hl
   0A7D 2A                 3290 	ld	a,(hl+)
   0A7E 66                 3291 	ld	h,(hl)
   0A7F 6F                 3292 	ld	l,a
   0A80 19                 3293 	add	hl,de
   0A81 7D                 3294 	ld	a,l
   0A82 54                 3295 	ld	d,h
   0A83 F8 04              3296 	lda	hl,4(sp)
   0A85 22                 3297 	ld	(hl+),a
   0A86 72                 3298 	ld	(hl),d
                           3299 ;	genPlus
                           3300 ;	AOP_STK for _check_transition_sloc0_1_0
                           3301 ;	AOP_STK for _check_transition_sloc1_1_0
                           3302 ;	Can't optimise plus by inc, falling back to the normal way
   0A87 11 48 00           3303 	ld	de,#_current_level
   0A8A 2B                 3304 	dec	hl
   0A8B 2A                 3305 	ld	a,(hl+)
   0A8C 66                 3306 	ld	h,(hl)
   0A8D 6F                 3307 	ld	l,a
   0A8E 19                 3308 	add	hl,de
   0A8F 7D                 3309 	ld	a,l
   0A90 54                 3310 	ld	d,h
   0A91 F8 02              3311 	lda	hl,2(sp)
                           3312 ;	genPointerGet
                           3313 ;	AOP_STK for _check_transition_sloc1_1_0
                           3314 ;	AOP_STK for _check_transition_tile_1_1
   0A93 22                 3315 	ld	(hl+),a
   0A94 72                 3316 	ld	(hl),d
   0A95 5F                 3317 	ld	e,a
   0A96 1A                 3318 	ld	a,(de)
   0A97 F8 06              3319 	lda	hl,6(sp)
                           3320 ;	genAssign
                           3321 ;	AOP_STK for _check_transition_tile_1_1
                           3322 ;	(registers are the same)
                           3323 ;	transition.c 9
                           3324 ;	genCmpEq
                           3325 ;	AOP_STK for _check_transition_tile_1_1
                           3326 ; genCmpEq: left 1, right 1, result 1
   0A99 77                 3327 	ld      (hl),a
                           3328 ; Removed redundent load
   0A9A FE 68              3329 	cp	a,#0x68
   0A9C C2 A3 0A           3330 	jp	nz,00131$
   0A9F 3E 01              3331 	ld	a,#0x01
   0AA1 18 01              3332 	jr	00132$
   0AA3                    3333 00131$:
   0AA3 AF                 3334 	xor	a,a
   0AA4                    3335 00132$:
                           3336 ;	genIfx
   0AA4 B7                 3337 	or	a,a
   0AA5 CA B8 0A           3338 	jp	z,00102$
                           3339 ;	transition.c 10
                           3340 ;	genPlus
                           3341 ;	AOP_STK for _check_transition_objectives_1_1
                           3342 ;	genPlusIncr
                           3343 ;	Can't optimise plus by inc, falling back to the normal way
   0AA8 F8 09              3344 	lda	hl,9(sp)
   0AAA 5E                 3345 	ld	e,(hl)
   0AAB 23                 3346 	inc	hl
   0AAC 56                 3347 	ld	d,(hl)
   0AAD 21 01 00           3348 	ld	hl,#0x0001
   0AB0 19                 3349 	add	hl,de
   0AB1 45                 3350 	ld	b,l
   0AB2 4C                 3351 	ld	c,h
                           3352 ;	genAssign
                           3353 ;	AOP_STK for _check_transition_objectives_1_1
   0AB3 F8 09              3354 	lda	hl,9(sp)
   0AB5 70                 3355 	ld	(hl),b
   0AB6 23                 3356 	inc	hl
   0AB7 71                 3357 	ld	(hl),c
                           3358 ;	genLabel
   0AB8                    3359 00102$:
                           3360 ;	transition.c 11
                           3361 ;	genCmpEq
                           3362 ;	AOP_STK for _check_transition_tile_1_1
                           3363 ; genCmpEq: left 1, right 1, result 1
   0AB8 F8 06              3364 	lda	hl,6(sp)
   0ABA 7E                 3365 	ld	a,(hl)
   0ABB FE 88              3366 	cp	a,#0x88
   0ABD C2 C4 0A           3367 	jp	nz,00133$
   0AC0 3E 01              3368 	ld	a,#0x01
   0AC2 18 01              3369 	jr	00134$
   0AC4                    3370 00133$:
   0AC4 AF                 3371 	xor	a,a
   0AC5                    3372 00134$:
                           3373 ;	genIfx
   0AC5 B7                 3374 	or	a,a
   0AC6 CA D0 0A           3375 	jp	z,00112$
                           3376 ;	transition.c 12
                           3377 ;	genAssign
                           3378 ;	AOP_STK for _check_transition_defeat_1_1
   0AC9 F8 07              3379 	lda	hl,7(sp)
   0ACB 36 01              3380 	ld	(hl),#0x01
   0ACD 23                 3381 	inc	hl
   0ACE 36 00              3382 	ld	(hl),#0x00
                           3383 ;	genLabel
   0AD0                    3384 00112$:
                           3385 ;	transition.c 6
                           3386 ;	genPlus
                           3387 ;	AOP_STK for _check_transition_y_1_1
                           3388 ;	AOP_STK for _check_transition_sloc2_1_0
                           3389 ;	genPlusIncr
                           3390 ;	Can't optimise plus by inc, falling back to the normal way
   0AD0 F8 0B              3391 	lda	hl,11(sp)
   0AD2 5E                 3392 	ld	e,(hl)
   0AD3 23                 3393 	inc	hl
   0AD4 56                 3394 	ld	d,(hl)
   0AD5 21 28 00           3395 	ld	hl,#0x0028
   0AD8 19                 3396 	add	hl,de
   0AD9 7D                 3397 	ld	a,l
   0ADA 54                 3398 	ld	d,h
   0ADB F8 00              3399 	lda	hl,0(sp)
   0ADD 22                 3400 	ld	(hl+),a
   0ADE 72                 3401 	ld	(hl),d
                           3402 ;	genAssign
                           3403 ;	AOP_STK for _check_transition_sloc2_1_0
                           3404 ;	AOP_STK for _check_transition_y_1_1
   0ADF 2B                 3405 	dec	hl
   0AE0 2A                 3406 	ld	a,(hl+)
   0AE1 5E                 3407 	ld	e,(hl)
   0AE2 F8 0B              3408 	lda	hl,11(sp)
   0AE4 22                 3409 	ld	(hl+),a
   0AE5 73                 3410 	ld	(hl),e
                           3411 ;	genGoto
   0AE6 C3 5F 0A           3412 	jp	00110$
                           3413 ;	genLabel
   0AE9                    3414 00116$:
                           3415 ;	transition.c 5
                           3416 ;	genPlus
                           3417 ;	AOP_STK for _check_transition_x_1_1
                           3418 ;	genPlusIncr
                           3419 ;	Can't optimise plus by inc, falling back to the normal way
   0AE9 F8 0D              3420 	lda	hl,13(sp)
   0AEB 5E                 3421 	ld	e,(hl)
   0AEC 23                 3422 	inc	hl
   0AED 56                 3423 	ld	d,(hl)
   0AEE 21 02 00           3424 	ld	hl,#0x0002
   0AF1 19                 3425 	add	hl,de
   0AF2 7D                 3426 	ld	a,l
   0AF3 54                 3427 	ld	d,h
   0AF4 F8 0D              3428 	lda	hl,13(sp)
   0AF6 22                 3429 	ld	(hl+),a
   0AF7 72                 3430 	ld	(hl),d
                           3431 ;	genGoto
   0AF8 C3 4A 0A           3432 	jp	00114$
                           3433 ;	genLabel
   0AFB                    3434 00117$:
                           3435 ;	transition.c 15
                           3436 ;	genIfx
                           3437 ;	AOP_STK for _check_transition_defeat_1_1
   0AFB F8 07              3438 	lda	hl,7(sp)
   0AFD 2A                 3439 	ld	a,(hl+)
   0AFE B6                 3440 	or	a,(hl)
   0AFF CA 20 0B           3441 	jp	z,00108$
                           3442 ;	transition.c 16
                           3443 ;	genIpush
                           3444 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B02 21 F4 01           3445 	ld	hl,#0x01F4
   0B05 E5                 3446 	push	hl
                           3447 ;	genCall
   0B06 CD 00 00           3448 	call	_delay
   0B09 E8 02              3449 	lda	sp,2(sp)
                           3450 ;	transition.c 17
                           3451 ;	genCall
                           3452 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B0B CD F0 10           3453 	call	_display_defeat
                           3454 ;	transition.c 18
                           3455 ;	genCall
                           3456 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B0E CD B8 00           3457 	call	_game_over_sound
                           3458 ;	transition.c 19
                           3459 ;	genIpush
                           3460 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B11 3E FF              3461 	ld	a,#0xFF
   0B13 F5                 3462 	push	af
   0B14 33                 3463 	inc	sp
                           3464 ;	genCall
   0B15 CD 00 00           3465 	call	_waitpad
   0B18 E8 01              3466 	lda	sp,1(sp)
                           3467 ;	transition.c 20
                           3468 ;	genCall
                           3469 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B1A CD 89 10           3470 	call	_display_level
                           3471 ;	genGoto
   0B1D C3 43 0B           3472 	jp	00118$
                           3473 ;	genLabel
   0B20                    3474 00108$:
                           3475 ;	transition.c 21
                           3476 ;	genIfx
                           3477 ;	AOP_STK for _check_transition_objectives_1_1
   0B20 F8 09              3478 	lda	hl,9(sp)
   0B22 2A                 3479 	ld	a,(hl+)
   0B23 B6                 3480 	or	a,(hl)
   0B24 C2 43 0B           3481 	jp	nz,00118$
                           3482 ;	transition.c 22
                           3483 ;	genIpush
                           3484 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B27 21 F4 01           3485 	ld	hl,#0x01F4
   0B2A E5                 3486 	push	hl
                           3487 ;	genCall
   0B2B CD 00 00           3488 	call	_delay
   0B2E E8 02              3489 	lda	sp,2(sp)
                           3490 ;	transition.c 23
                           3491 ;	genPlus
                           3492 ;	AOP_HL for _level
                           3493 ;	genPlusIncr
   0B30 21 B0 01           3494 	ld	hl,#_level
   0B33 34                 3495 	inc	(hl)
                           3496 ;	transition.c 24
                           3497 ;	genCall
                           3498 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B34 CD E6 10           3499 	call	_display_victory
                           3500 ;	transition.c 25
                           3501 ;	genIpush
                           3502 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B37 3E FF              3503 	ld	a,#0xFF
   0B39 F5                 3504 	push	af
   0B3A 33                 3505 	inc	sp
                           3506 ;	genCall
   0B3B CD 00 00           3507 	call	_waitpad
   0B3E E8 01              3508 	lda	sp,1(sp)
                           3509 ;	transition.c 26
                           3510 ;	genCall
                           3511 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B40 CD 89 10           3512 	call	_display_level
                           3513 ;	genLabel
   0B43                    3514 00118$:
                           3515 ;	genEndFunction
   0B43 E8 0F              3516 	lda	sp,15(sp)
   0B45 C9                 3517 	ret
   0B46                    3518 ___check_transition_end:
                           3519 ;	cursor.c 17
                           3520 ;	genLabel
                           3521 ;	genFunction
                           3522 ;	---------------------------------
                           3523 ; Function cursor_toggle
                           3524 ; ---------------------------------
   0B46                    3525 ___cursor_toggle_start:
   0B46                    3526 _cursor_toggle:
   0B46 E8 FC              3527 	lda	sp,-4(sp)
                           3528 ;	cursor.c 19
                           3529 ;	genPointerGet
   0B48 11 F9 01           3530 	ld	de,#_cursor
   0B4B 1A                 3531 	ld	a,(de)
                           3532 ;	genMinus
   0B4C 4F                 3533 	ld	c,a
   0B4D C6 F8              3534 	add	a,#0xF8
                           3535 ;	genRightShift
                           3536 ;	AOP_STK for _cursor_toggle_x_1_1
   0B4F 4F                 3537 	ld	c,a
   0B50 CB 3F              3538 	srl	a
   0B52 CB 3F              3539 	srl	a
   0B54 CB 3F              3540 	srl	a
   0B56 CB 3F              3541 	srl	a
   0B58 F8 02              3542 	lda	hl,2(sp)
   0B5A 77                 3543 	ld	(hl),a
                           3544 ;	cursor.c 20
                           3545 ;	genPlus
                           3546 ;	genPlusIncr
                           3547 ;	Can't optimise plus by inc, falling back to the normal way
   0B5B 3E F9              3548 	ld	a,#<_cursor
   0B5D C6 01              3549 	add	a,#0x01
   0B5F 47                 3550 	ld	b,a
   0B60 3E 01              3551 	ld	a,#>_cursor
   0B62 CE 00              3552 	adc	a,#0x00
   0B64 4F                 3553 	ld	c,a
                           3554 ;	genPointerGet
   0B65 58                 3555 	ld	e,b
   0B66 51                 3556 	ld	d,c
   0B67 1A                 3557 	ld	a,(de)
                           3558 ;	genMinus
   0B68 47                 3559 	ld	b,a
   0B69 C6 F0              3560 	add	a,#0xF0
   0B6B 47                 3561 	ld	b,a
                           3562 ;	genRightShift
                           3563 ; Removed redundent load
   0B6C CB 38              3564 	srl	b
   0B6E CB 38              3565 	srl	b
   0B70 CB 38              3566 	srl	b
   0B72 CB 38              3567 	srl	b
                           3568 ;	cursor.c 21
                           3569 ;	genMult
   0B74 58                 3570 	ld	e,b
   0B75 16 00              3571 	ld	d,#0x00
   0B77 6B                 3572 	ld	l,e
   0B78 62                 3573 	ld	h,d
   0B79 29                 3574 	add	hl,hl
   0B7A 29                 3575 	add	hl,hl
   0B7B 29                 3576 	add	hl,hl
   0B7C 19                 3577 	add	hl,de
   0B7D 45                 3578 	ld	b,l
   0B7E 4C                 3579 	ld	c,h
                           3580 ;	genCast
                           3581 ;	AOP_STK for _cursor_toggle_x_1_1
                           3582 ;	AOP_STK for _cursor_toggle_sloc0_1_0
   0B7F F8 02              3583 	lda	hl,2(sp)
   0B81 7E                 3584 	ld	a,(hl)
   0B82 2B                 3585 	dec	hl
   0B83 2B                 3586 	dec	hl
   0B84 22                 3587 	ld	(hl+),a
   0B85 36 00              3588 	ld	(hl),#0x00
                           3589 ;	genPlus
                           3590 ;	AOP_STK for _cursor_toggle_sloc0_1_0
                           3591 ;	Can't optimise plus by inc, falling back to the normal way
   0B87 2B                 3592 	dec	hl
   0B88 5E                 3593 	ld	e,(hl)
   0B89 23                 3594 	inc	hl
   0B8A 56                 3595 	ld	d,(hl)
   0B8B 68                 3596 	ld	l,b
   0B8C 61                 3597 	ld	h,c
   0B8D 19                 3598 	add	hl,de
   0B8E 45                 3599 	ld	b,l
   0B8F 4C                 3600 	ld	c,h
                           3601 ;	genCast
                           3602 ; Removed redundent load
                           3603 ;	cursor.c 23
                           3604 ;	genPlus
                           3605 ;	genPlusIncr
   0B90 21 FB 01           3606 	ld	hl,#_cursor + 2
                           3607 ;	genAssign (pointer)
   0B93 36 00              3608 	ld	(hl),#0x00
                           3609 ;	cursor.c 24
                           3610 ;	genPlus
                           3611 ;	genPlusIncr
   0B95 23                 3612 	inc	hl
                           3613 ;	genAssign (pointer)
   0B96 36 00              3614 	ld	(hl),#0x00
                           3615 ;	cursor.c 25
                           3616 ;	genAssign
                           3617 ;	AOP_HL for _counter
   0B98 21 FE 01           3618 	ld	hl,#_counter
   0B9B 36 08              3619 	ld	(hl),#0x08
                           3620 ;	cursor.c 27
                           3621 ;	genPlus
                           3622 ;	AOP_STK for _cursor_toggle_sloc0_1_0
                           3623 ;	Can't optimise plus by inc, falling back to the normal way
   0B9D 11 00 00           3624 	ld	de,#_level_objects
   0BA0 68                 3625 	ld	l,b
   0BA1 26 00              3626 	ld	h,#0x00
   0BA3 19                 3627 	add	hl,de
   0BA4 7D                 3628 	ld	a,l
   0BA5 54                 3629 	ld	d,h
   0BA6 F8 00              3630 	lda	hl,0(sp)
                           3631 ;	genPointerGet
                           3632 ;	AOP_STK for _cursor_toggle_sloc0_1_0
                           3633 ;	AOP_STK for _cursor_toggle_currentObject_1_1
   0BA8 22                 3634 	ld	(hl+),a
   0BA9 72                 3635 	ld	(hl),d
   0BAA 5F                 3636 	ld	e,a
   0BAB 1A                 3637 	ld	a,(de)
   0BAC 23                 3638 	inc	hl
   0BAD 23                 3639 	inc	hl
                           3640 ;	genAssign
                           3641 ;	AOP_STK for _cursor_toggle_currentObject_1_1
   0BAE 77                 3642 	ld      (hl),a
   0BAF 4F                 3643 	ld      c,a
                           3644 ;	cursor.c 28
                           3645 ;	genIfx
                           3646 ;	AOP_HL for _selected
   0BB0 AF                 3647 	xor	a,a
   0BB1 21 FD 01           3648 	ld	hl,#_selected
   0BB4 B6                 3649 	or	a,(hl)
   0BB5 CA 2A 0C           3650 	jp	z,00113$
                           3651 ;	cursor.c 29
                           3652 ;	genCmpEq
                           3653 ; genCmpEq: left 1, right 1, result 0
   0BB8 79                 3654 	ld	a,c
   0BB9 FE 08              3655 	cp	a,#0x08
                           3656 ;	cursor.c 30
                           3657 ;	genRet
                           3658 ;	genLabel
   0BBB CA C1 0B           3659 	jp	z,00102$
   0BBE                    3660 00127$:
   0BBE C3 CF 0C           3661 	jp	00115$
   0BC1                    3662 00102$:
                           3663 ;	cursor.c 32
                           3664 ;	genIpush
                           3665 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BC1 C5                 3666 	push	bc
   0BC2 21 05 00           3667 	ld	hl,#0x0005
   0BC5 E5                 3668 	push	hl
                           3669 ;	genCall
   0BC6 CD 00 00           3670 	call	_set_sprite_tile
   0BC9 E8 02              3671 	lda	sp,2(sp)
   0BCB E1                 3672 	pop	hl
   0BCC 4D                 3673 	ld	c,l
                           3674 ;	cursor.c 33
                           3675 ;	genIpush
                           3676 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BCD C5                 3677 	push	bc
   0BCE 21 06 00           3678 	ld	hl,#0x0006
   0BD1 E5                 3679 	push	hl
                           3680 ;	genCall
   0BD2 CD 00 00           3681 	call	_set_sprite_tile
   0BD5 E8 02              3682 	lda	sp,2(sp)
   0BD7 E1                 3683 	pop	hl
   0BD8 4D                 3684 	ld	c,l
                           3685 ;	cursor.c 34
                           3686 ;	genIpush
                           3687 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BD9 C5                 3688 	push	bc
   0BDA 21 09 00           3689 	ld	hl,#0x0009
   0BDD E5                 3690 	push	hl
                           3691 ;	genCall
   0BDE CD 00 00           3692 	call	_set_sprite_tile
   0BE1 E8 02              3693 	lda	sp,2(sp)
   0BE3 E1                 3694 	pop	hl
   0BE4 4D                 3695 	ld	c,l
                           3696 ;	cursor.c 35
                           3697 ;	genIpush
                           3698 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BE5 C5                 3699 	push	bc
   0BE6 21 0A 00           3700 	ld	hl,#0x000A
   0BE9 E5                 3701 	push	hl
                           3702 ;	genCall
   0BEA CD 00 00           3703 	call	_set_sprite_tile
   0BED E8 02              3704 	lda	sp,2(sp)
   0BEF E1                 3705 	pop	hl
   0BF0 4D                 3706 	ld	c,l
                           3707 ;	cursor.c 38
                           3708 ;	genAssign (pointer)
                           3709 ;	AOP_STK for _cursor_toggle_sloc0_1_0
                           3710 ;	AOP_HL for _selected
   0BF1 F8 00              3711 	lda	hl,0(sp)
   0BF3 5E                 3712 	ld	e,(hl)
   0BF4 23                 3713 	inc	hl
   0BF5 56                 3714 	ld	d,(hl)
   0BF6 21 FD 01           3715 	ld	hl,#_selected
   0BF9 7E                 3716 	ld	a,(hl)
   0BFA 12                 3717 	ld	(de),a
                           3718 ;	cursor.c 39
                           3719 ;	genAssign
                           3720 ;	AOP_HL for _selected
   0BFB 36 00              3721 	ld	(hl),#0x00
                           3722 ;	cursor.c 41
                           3723 ;	genIpush
                           3724 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BFD C5                 3725 	push	bc
   0BFE 21 48 00           3726 	ld	hl,#_current_level
   0C01 E5                 3727 	push	hl
                           3728 ;	genIpush
   0C02 21 00 00           3729 	ld	hl,#_level_objects
   0C05 E5                 3730 	push	hl
                           3731 ;	genCall
   0C06 CD 43 08           3732 	call	_update_background
   0C09 E8 04              3733 	lda	sp,4(sp)
   0C0B E1                 3734 	pop	hl
   0C0C 4D                 3735 	ld	c,l
                           3736 ;	cursor.c 42
                           3737 ;	genIpush
                           3738 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C0D C5                 3739 	push	bc
   0C0E 21 48 00           3740 	ld	hl,#_current_level
   0C11 E5                 3741 	push	hl
                           3742 ;	genIpush
   0C12 21 14 12           3743 	ld	hl,#0x1214
   0C15 E5                 3744 	push	hl
                           3745 ;	genIpush
   0C16 21 00 00           3746 	ld	hl,#0x0000
   0C19 E5                 3747 	push	hl
                           3748 ;	genCall
   0C1A CD 00 00           3749 	call	_set_bkg_tiles
   0C1D E8 06              3750 	lda	sp,6(sp)
   0C1F E1                 3751 	pop	hl
   0C20 4D                 3752 	ld	c,l
                           3753 ;	cursor.c 43
                           3754 ;	genCall
                           3755 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C21 C5                 3756 	push	bc
   0C22 CD 33 0A           3757 	call	_check_transition
   0C25 E1                 3758 	pop	hl
   0C26 4D                 3759 	ld	c,l
                           3760 ;	genGoto
   0C27 C3 CF 0C           3761 	jp	00115$
                           3762 ;	genLabel
   0C2A                    3763 00113$:
                           3764 ;	cursor.c 46
                           3765 ;	genCmpEq
                           3766 ; genCmpEq: left 1, right 1, result 0
   0C2A 79                 3767 	ld	a,c
   0C2B FE 28              3768 	cp	a,#0x28
   0C2D CA 5D 0C           3769 	jp	z,00104$
   0C30                    3770 00128$:
                           3771 ;	cursor.c 47
                           3772 ;	genCmpEq
                           3773 ; genCmpEq: left 1, right 1, result 0
   0C30 79                 3774 	ld	a,c
   0C31 FE 18              3775 	cp	a,#0x18
   0C33 CA 5D 0C           3776 	jp	z,00104$
   0C36                    3777 00129$:
                           3778 ;	cursor.c 48
                           3779 ;	genCmpEq
                           3780 ; genCmpEq: left 1, right 1, result 0
   0C36 79                 3781 	ld	a,c
   0C37 FE 48              3782 	cp	a,#0x48
   0C39 CA 5D 0C           3783 	jp	z,00104$
   0C3C                    3784 00130$:
                           3785 ;	cursor.c 49
                           3786 ;	genCmpEq
                           3787 ; genCmpEq: left 1, right 1, result 0
   0C3C 79                 3788 	ld	a,c
   0C3D FE 38              3789 	cp	a,#0x38
   0C3F CA 5D 0C           3790 	jp	z,00104$
   0C42                    3791 00131$:
                           3792 ;	cursor.c 50
                           3793 ;	genCmpEq
                           3794 ; genCmpEq: left 1, right 1, result 0
   0C42 79                 3795 	ld	a,c
   0C43 FE 58              3796 	cp	a,#0x58
   0C45 CA 5D 0C           3797 	jp	z,00104$
   0C48                    3798 00132$:
                           3799 ;	cursor.c 51
                           3800 ;	genCmpEq
                           3801 ; genCmpEq: left 1, right 1, result 0
   0C48 79                 3802 	ld	a,c
   0C49 FE 70              3803 	cp	a,#0x70
   0C4B CA 5D 0C           3804 	jp	z,00104$
   0C4E                    3805 00133$:
                           3806 ;	cursor.c 52
                           3807 ;	genCmpEq
                           3808 ; genCmpEq: left 1, right 1, result 0
   0C4E 79                 3809 	ld	a,c
   0C4F FE 60              3810 	cp	a,#0x60
   0C51 CA 5D 0C           3811 	jp	z,00104$
   0C54                    3812 00134$:
                           3813 ;	cursor.c 54
                           3814 ;	genCmpEq
                           3815 ; genCmpEq: left 1, right 1, result 0
   0C54 79                 3816 	ld	a,c
   0C55 FE 78              3817 	cp	a,#0x78
                           3818 ;	genRet
                           3819 ;	genLabel
   0C57 CA 5D 0C           3820 	jp	z,00104$
   0C5A                    3821 00135$:
   0C5A C3 CF 0C           3822 	jp	00115$
   0C5D                    3823 00104$:
                           3824 ;	cursor.c 56
                           3825 ;	genAssign
                           3826 ;	AOP_HL for _selected
   0C5D 21 FD 01           3827 	ld	hl,#_selected
   0C60 71                 3828 	ld	(hl),c
                           3829 ;	cursor.c 57
                           3830 ;	genAssign (pointer)
                           3831 ;	AOP_STK for _cursor_toggle_sloc0_1_0
   0C61 F8 00              3832 	lda	hl,0(sp)
   0C63 5E                 3833 	ld	e,(hl)
   0C64 23                 3834 	inc	hl
   0C65 56                 3835 	ld	d,(hl)
   0C66 3E 08              3836 	ld	a,#0x08
   0C68 12                 3837 	ld	(de),a
                           3838 ;	cursor.c 59
                           3839 ;	genIpush
                           3840 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3841 ;	AOP_HL for _selected
   0C69 21 FD 01           3842 	ld	hl,#_selected
   0C6C 7E                 3843 	ld	a,(hl)
   0C6D F5                 3844 	push	af
   0C6E 33                 3845 	inc	sp
                           3846 ;	genIpush
   0C6F 3E 05              3847 	ld	a,#0x05
   0C71 F5                 3848 	push	af
   0C72 33                 3849 	inc	sp
                           3850 ;	genCall
   0C73 CD 00 00           3851 	call	_set_sprite_tile
   0C76 E8 02              3852 	lda	sp,2(sp)
                           3853 ;	cursor.c 60
                           3854 ;	genPlus
                           3855 ;	AOP_HL for _selected
                           3856 ;	genPlusIncr
   0C78 21 FD 01           3857 	ld	hl,#_selected
   0C7B 4E                 3858 	ld	c,(hl)
   0C7C 0C                 3859 	inc	c
                           3860 ;	genIpush
                           3861 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C7D 79                 3862 	ld	a,c
   0C7E F5                 3863 	push	af
   0C7F 33                 3864 	inc	sp
                           3865 ;	genIpush
   0C80 3E 06              3866 	ld	a,#0x06
   0C82 F5                 3867 	push	af
   0C83 33                 3868 	inc	sp
                           3869 ;	genCall
   0C84 CD 00 00           3870 	call	_set_sprite_tile
   0C87 E8 02              3871 	lda	sp,2(sp)
                           3872 ;	cursor.c 61
                           3873 ;	genPlus
                           3874 ;	AOP_HL for _selected
                           3875 ;	genPlusIncr
   0C89 21 FD 01           3876 	ld	hl,#_selected
   0C8C 4E                 3877 	ld	c,(hl)
   0C8D 0C                 3878 	inc	c
   0C8E 0C                 3879 	inc	c
                           3880 ;	genIpush
                           3881 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C8F 79                 3882 	ld	a,c
   0C90 F5                 3883 	push	af
   0C91 33                 3884 	inc	sp
                           3885 ;	genIpush
   0C92 3E 09              3886 	ld	a,#0x09
   0C94 F5                 3887 	push	af
   0C95 33                 3888 	inc	sp
                           3889 ;	genCall
   0C96 CD 00 00           3890 	call	_set_sprite_tile
   0C99 E8 02              3891 	lda	sp,2(sp)
                           3892 ;	cursor.c 62
                           3893 ;	genPlus
                           3894 ;	AOP_HL for _selected
                           3895 ;	genPlusIncr
   0C9B 21 FD 01           3896 	ld	hl,#_selected
   0C9E 4E                 3897 	ld	c,(hl)
   0C9F 0C                 3898 	inc	c
   0CA0 0C                 3899 	inc	c
   0CA1 0C                 3900 	inc	c
                           3901 ;	genIpush
                           3902 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CA2 79                 3903 	ld	a,c
   0CA3 F5                 3904 	push	af
   0CA4 33                 3905 	inc	sp
                           3906 ;	genIpush
   0CA5 3E 0A              3907 	ld	a,#0x0A
   0CA7 F5                 3908 	push	af
   0CA8 33                 3909 	inc	sp
                           3910 ;	genCall
   0CA9 CD 00 00           3911 	call	_set_sprite_tile
   0CAC E8 02              3912 	lda	sp,2(sp)
                           3913 ;	cursor.c 64
                           3914 ;	genIpush
                           3915 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CAE 21 48 00           3916 	ld	hl,#_current_level
   0CB1 E5                 3917 	push	hl
                           3918 ;	genIpush
   0CB2 21 00 00           3919 	ld	hl,#_level_objects
   0CB5 E5                 3920 	push	hl
                           3921 ;	genCall
   0CB6 CD 43 08           3922 	call	_update_background
   0CB9 E8 04              3923 	lda	sp,4(sp)
                           3924 ;	cursor.c 65
                           3925 ;	genIpush
                           3926 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CBB 21 48 00           3927 	ld	hl,#_current_level
   0CBE E5                 3928 	push	hl
                           3929 ;	genIpush
   0CBF 21 14 12           3930 	ld	hl,#0x1214
   0CC2 E5                 3931 	push	hl
                           3932 ;	genIpush
   0CC3 21 00 00           3933 	ld	hl,#0x0000
   0CC6 E5                 3934 	push	hl
                           3935 ;	genCall
   0CC7 CD 00 00           3936 	call	_set_bkg_tiles
   0CCA E8 06              3937 	lda	sp,6(sp)
                           3938 ;	cursor.c 66
                           3939 ;	genCall
                           3940 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CCC CD 33 0A           3941 	call	_check_transition
                           3942 ;	genLabel
   0CCF                    3943 00115$:
                           3944 ;	genEndFunction
   0CCF E8 04              3945 	lda	sp,4(sp)
   0CD1 C9                 3946 	ret
   0CD2                    3947 ___cursor_toggle_end:
                           3948 ;	cursor.c 70
                           3949 ;	genLabel
                           3950 ;	genFunction
                           3951 ;	---------------------------------
                           3952 ; Function cursor_move
                           3953 ; ---------------------------------
   0CD2                    3954 ___cursor_move_start:
   0CD2                    3955 _cursor_move:
   0CD2 E8 FA              3956 	lda	sp,-6(sp)
                           3957 ;	cursor.c 71
                           3958 ;	genPointerGet
   0CD4 11 F9 01           3959 	ld	de,#_cursor
   0CD7 1A                 3960 	ld	a,(de)
   0CD8 4F                 3961 	ld	c,a
                           3962 ;	genLeftShift
                           3963 ;	AOP_STK for 
                           3964 ;	AOP_STK for _cursor_move_sloc0_1_0
   0CD9 F8 08              3965 	lda	hl,8(sp)
   0CDB 7E                 3966 	ld	a,(hl)
   0CDC F8 00              3967 	lda	hl,0(sp)
   0CDE 77                 3968 	ld	(hl),a
   0CDF F8 09              3969 	lda	hl,9(sp)
   0CE1 7E                 3970 	ld	a,(hl)
   0CE2 F8 01              3971 	lda	hl,1(sp)
   0CE4 77                 3972 	ld	(hl),a
   0CE5 3E 04              3973 	ld	a,#0x03+1
   0CE7 18 07              3974 	jr	00117$
   0CE9                    3975 00116$:
   0CE9 F8 00              3976 	lda	hl,0(sp)
   0CEB CB 26              3977 	sla	(hl)
   0CED 23                 3978 	inc	hl
   0CEE CB 16              3979 	rl	(hl)
   0CF0                    3980 00117$:
   0CF0 3D                 3981 	dec	a
   0CF1 20 F6              3982 	jr	nz,00116$
                           3983 ;	genCast
                           3984 ; Removed redundent load
   0CF3 06 00              3985 	ld	b,#0x00
                           3986 ;	genPlus
                           3987 ;	AOP_STK for _cursor_move_sloc0_1_0
                           3988 ;	Can't optimise plus by inc, falling back to the normal way
   0CF5 F8 00              3989 	lda	hl,0(sp)
   0CF7 2A                 3990 	ld	a,(hl+)
   0CF8 66                 3991 	ld	h,(hl)
   0CF9 6F                 3992 	ld	l,a
   0CFA 09                 3993 	add	hl,bc
   0CFB 4D                 3994 	ld	c,l
   0CFC 44                 3995 	ld	b,h
                           3996 ;	genAssign
                           3997 ;	AOP_STK for _cursor_move_destx_1_1
   0CFD F8 04              3998 	lda	hl,4(sp)
   0CFF 71                 3999 	ld	(hl),c
   0D00 23                 4000 	inc	hl
   0D01 70                 4001 	ld	(hl),b
                           4002 ;	cursor.c 72
                           4003 ;	genPlus
                           4004 ;	genPlusIncr
   0D02 01 FA 01           4005 	ld	bc,#_cursor + 1
                           4006 ;	genPointerGet
   0D05 0A                 4007 	ld	a,(bc)
   0D06 4F                 4008 	ld	c,a
                           4009 ;	genLeftShift
                           4010 ;	AOP_STK for 
                           4011 ;	AOP_STK for _cursor_move_sloc0_1_0
   0D07 F8 0A              4012 	lda	hl,10(sp)
   0D09 7E                 4013 	ld	a,(hl)
   0D0A F8 00              4014 	lda	hl,0(sp)
   0D0C 77                 4015 	ld	(hl),a
   0D0D F8 0B              4016 	lda	hl,11(sp)
   0D0F 7E                 4017 	ld	a,(hl)
   0D10 F8 01              4018 	lda	hl,1(sp)
   0D12 77                 4019 	ld	(hl),a
   0D13 3E 04              4020 	ld	a,#0x03+1
   0D15 18 07              4021 	jr	00119$
   0D17                    4022 00118$:
   0D17 F8 00              4023 	lda	hl,0(sp)
   0D19 CB 26              4024 	sla	(hl)
   0D1B 23                 4025 	inc	hl
   0D1C CB 16              4026 	rl	(hl)
   0D1E                    4027 00119$:
   0D1E 3D                 4028 	dec	a
   0D1F 20 F6              4029 	jr	nz,00118$
                           4030 ;	genCast
                           4031 ; Removed redundent load
   0D21 06 00              4032 	ld	b,#0x00
                           4033 ;	genPlus
                           4034 ;	AOP_STK for _cursor_move_sloc0_1_0
                           4035 ;	Can't optimise plus by inc, falling back to the normal way
   0D23 F8 00              4036 	lda	hl,0(sp)
   0D25 2A                 4037 	ld	a,(hl+)
   0D26 66                 4038 	ld	h,(hl)
   0D27 6F                 4039 	ld	l,a
   0D28 09                 4040 	add	hl,bc
   0D29 4D                 4041 	ld	c,l
   0D2A 44                 4042 	ld	b,h
                           4043 ;	genAssign
                           4044 ;	(registers are the same)
                           4045 ;	cursor.c 76
                           4046 ;	genCmpLt
                           4047 ;	AOP_STK for _cursor_move_destx_1_1
   0D2B F8 05              4048 	lda	hl,5(sp)
   0D2D 7E                 4049 	ld	a,(hl)
   0D2E EE 80              4050 	xor	a,#0x80
   0D30 5F                 4051 	ld	e,a
   0D31 16 80              4052 	ld	d,#0x80
   0D33 2B                 4053 	dec	hl
   0D34 7E                 4054 	ld	a,(hl)
   0D35 D6 08              4055 	sub	a,#0x08
   0D37 7B                 4056 	ld	a,e
   0D38 9A                 4057 	sbc	a,d
   0D39 DA 68 0D           4058 	jp	c,00101$
                           4059 ;	genCmpGt
                           4060 ;	AOP_STK for _cursor_move_destx_1_1
   0D3C 1E 80              4061 	ld	e,#0x80
   0D3E 23                 4062 	inc	hl
   0D3F 7E                 4063 	ld	a,(hl)
   0D40 EE 80              4064 	xor	a,#0x80
   0D42 57                 4065 	ld	d,a
   0D43 3E 88              4066 	ld	a,#0x88
   0D45 2B                 4067 	dec	hl
   0D46 96                 4068 	sub	a,(hl)
   0D47 7B                 4069 	ld	a,e
   0D48 9A                 4070 	sbc	a,d
   0D49 DA 68 0D           4071 	jp	c,00101$
                           4072 ;	genCmpLt
   0D4C 78                 4073 	ld	a,b
   0D4D EE 80              4074 	xor	a,#0x80
   0D4F 5F                 4075 	ld	e,a
   0D50 16 80              4076 	ld	d,#0x80
   0D52 79                 4077 	ld	a,c
   0D53 D6 10              4078 	sub	a,#0x10
   0D55 7B                 4079 	ld	a,e
   0D56 9A                 4080 	sbc	a,d
   0D57 DA 68 0D           4081 	jp	c,00101$
                           4082 ;	genCmpGt
   0D5A 1E 80              4083 	ld	e,#0x80
   0D5C 78                 4084 	ld	a,b
   0D5D EE 80              4085 	xor	a,#0x80
   0D5F 57                 4086 	ld	d,a
   0D60 3E 80              4087 	ld	a,#0x80
   0D62 91                 4088 	sub	a,c
   0D63 7B                 4089 	ld	a,e
   0D64 9A                 4090 	sbc	a,d
   0D65 D2 6B 0D           4091 	jp	nc,00102$
                           4092 ;	genLabel
   0D68                    4093 00101$:
                           4094 ;	cursor.c 77
                           4095 ;	genRet
   0D68 C3 0F 0E           4096 	jp	00109$
                           4097 ;	genLabel
   0D6B                    4098 00102$:
                           4099 ;	cursor.c 81
                           4100 ;	genMinus
   0D6B 79                 4101 	ld	a,c
   0D6C C6 F0              4102 	add	a,#0xF0
   0D6E 4F                 4103 	ld	c,a
   0D6F 78                 4104 	ld	a,b
   0D70 CE FF              4105 	adc	a,#0xFF
   0D72 47                 4106 	ld	b,a
                           4107 ;	genRightShift
                           4108 ;	AOP_STK for _cursor_move_destindex_1_1
   0D73 F8 02              4109 	lda	hl,2(sp)
   0D75 71                 4110 	ld	(hl),c
   0D76 23                 4111 	inc	hl
   0D77 70                 4112 	ld	(hl),b
   0D78 CB 2E              4113 	sra	(hl)
   0D7A 2B                 4114 	dec	hl
   0D7B CB 1E              4115 	rr	(hl)
   0D7D 23                 4116 	inc	hl
   0D7E CB 2E              4117 	sra	(hl)
   0D80 2B                 4118 	dec	hl
   0D81 CB 1E              4119 	rr	(hl)
   0D83 23                 4120 	inc	hl
   0D84 CB 2E              4121 	sra	(hl)
   0D86 2B                 4122 	dec	hl
   0D87 CB 1E              4123 	rr	(hl)
   0D89 23                 4124 	inc	hl
   0D8A CB 2E              4125 	sra	(hl)
   0D8C 2B                 4126 	dec	hl
   0D8D CB 1E              4127 	rr	(hl)
                           4128 ;	cursor.c 82
                           4129 ;	genMinus
                           4130 ;	AOP_STK for _cursor_move_destx_1_1
   0D8F 23                 4131 	inc	hl
   0D90 23                 4132 	inc	hl
   0D91 5E                 4133 	ld	e,(hl)
   0D92 23                 4134 	inc	hl
   0D93 56                 4135 	ld	d,(hl)
   0D94 21 08 00           4136 	ld	hl,#0x0008
   0D97 7B                 4137 	ld	a,e
   0D98 95                 4138 	sub	a,l
   0D99 5F                 4139 	ld	e,a
   0D9A 7A                 4140 	ld	a,d
   0D9B 9C                 4141 	sbc	a,h
   0D9C 47                 4142 	ld	b,a
   0D9D 4B                 4143 	ld	c,e
                           4144 ;	genRightShift
   0D9E CB 28              4145 	sra	b
   0DA0 CB 19              4146 	rr	c
   0DA2 CB 28              4147 	sra	b
   0DA4 CB 19              4148 	rr	c
   0DA6 CB 28              4149 	sra	b
   0DA8 CB 19              4150 	rr	c
   0DAA CB 28              4151 	sra	b
   0DAC CB 19              4152 	rr	c
                           4153 ;	genLeftShift
                           4154 ;	AOP_STK for _cursor_move_destindex_1_1
                           4155 ;	AOP_STK for _cursor_move_sloc0_1_0
   0DAE F8 02              4156 	lda	hl,2(sp)
   0DB0 7E                 4157 	ld	a,(hl)
   0DB1 2B                 4158 	dec	hl
   0DB2 2B                 4159 	dec	hl
   0DB3 77                 4160 	ld	(hl),a
   0DB4 F8 03              4161 	lda	hl,3(sp)
   0DB6 7E                 4162 	ld	a,(hl)
   0DB7 2B                 4163 	dec	hl
   0DB8 2B                 4164 	dec	hl
   0DB9 77                 4165 	ld	(hl),a
   0DBA 3E 04              4166 	ld	a,#0x03+1
   0DBC 18 07              4167 	jr	00125$
   0DBE                    4168 00124$:
   0DBE F8 00              4169 	lda	hl,0(sp)
   0DC0 CB 26              4170 	sla	(hl)
   0DC2 23                 4171 	inc	hl
   0DC3 CB 16              4172 	rl	(hl)
   0DC5                    4173 00125$:
   0DC5 3D                 4174 	dec	a
   0DC6 20 F6              4175 	jr	nz,00124$
                           4176 ;	genPlus
                           4177 ;	AOP_STK for _cursor_move_sloc0_1_0
                           4178 ;	Can't optimise plus by inc, falling back to the normal way
   0DC8 F8 00              4179 	lda	hl,0(sp)
   0DCA 2A                 4180 	ld	a,(hl+)
   0DCB 66                 4181 	ld	h,(hl)
   0DCC 6F                 4182 	ld	l,a
   0DCD 09                 4183 	add	hl,bc
   0DCE 4D                 4184 	ld	c,l
   0DCF 44                 4185 	ld	b,h
                           4186 ;	genPlus
                           4187 ;	AOP_STK for _cursor_move_destindex_1_1
                           4188 ;	Can't optimise plus by inc, falling back to the normal way
   0DD0 F8 02              4189 	lda	hl,2(sp)
   0DD2 2A                 4190 	ld	a,(hl+)
   0DD3 66                 4191 	ld	h,(hl)
   0DD4 6F                 4192 	ld	l,a
   0DD5 09                 4193 	add	hl,bc
   0DD6 7D                 4194 	ld	a,l
   0DD7 54                 4195 	ld	d,h
   0DD8 F8 02              4196 	lda	hl,2(sp)
   0DDA 22                 4197 	ld	(hl+),a
   0DDB 72                 4198 	ld	(hl),d
                           4199 ;	cursor.c 83
                           4200 ;	genIfx
                           4201 ;	AOP_HL for _selected
   0DDC AF                 4202 	xor	a,a
   0DDD 21 FD 01           4203 	ld	hl,#_selected
   0DE0 B6                 4204 	or	a,(hl)
   0DE1 CA F9 0D           4205 	jp	z,00107$
                           4206 ;	genPlus
                           4207 ;	AOP_STK for _cursor_move_destindex_1_1
                           4208 ;	Can't optimise plus by inc, falling back to the normal way
   0DE4 11 00 00           4209 	ld	de,#_level_objects
   0DE7 F8 02              4210 	lda	hl,2(sp)
   0DE9 2A                 4211 	ld	a,(hl+)
   0DEA 66                 4212 	ld	h,(hl)
   0DEB 6F                 4213 	ld	l,a
   0DEC 19                 4214 	add	hl,de
   0DED 4D                 4215 	ld	c,l
   0DEE 44                 4216 	ld	b,h
                           4217 ;	genPointerGet
   0DEF 0A                 4218 	ld	a,(bc)
                           4219 ;	genCmpEq
                           4220 ; genCmpEq: left 1, right 1, result 0
   0DF0 4F                 4221 	ld	c,a
   0DF1 FE 08              4222 	cp	a,#0x08
                           4223 ;	cursor.c 84
                           4224 ;	genRet
                           4225 ;	genLabel
   0DF3 CA F9 0D           4226 	jp	z,00107$
   0DF6                    4227 00126$:
   0DF6 C3 0F 0E           4228 	jp	00109$
   0DF9                    4229 00107$:
                           4230 ;	cursor.c 86
                           4231 ;	genPlus
                           4232 ;	genPlusIncr
   0DF9 01 FB 01           4233 	ld	bc,#_cursor + 2
                           4234 ;	genCast
                           4235 ;	AOP_STK for 
   0DFC F8 08              4236 	lda	hl,8(sp)
   0DFE 7E                 4237 	ld	a,(hl)
                           4238 ;	genAssign (pointer)
   0DFF 02                 4239 	ld	(bc),a
                           4240 ;	cursor.c 87
                           4241 ;	genPlus
                           4242 ;	genPlusIncr
   0E00 01 FC 01           4243 	ld	bc,#_cursor + 3
                           4244 ;	genCast
                           4245 ;	AOP_STK for 
   0E03 23                 4246 	inc	hl
   0E04 23                 4247 	inc	hl
   0E05 7E                 4248 	ld	a,(hl)
                           4249 ;	genAssign (pointer)
   0E06 02                 4250 	ld	(bc),a
                           4251 ;	cursor.c 88
                           4252 ;	genAssign
                           4253 ;	AOP_HL for _counter
   0E07 21 FE 01           4254 	ld	hl,#_counter
   0E0A 36 08              4255 	ld	(hl),#0x08
                           4256 ;	cursor.c 89
                           4257 ;	genCall
                           4258 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E0C CD 13 00           4259 	call	_move_cursor_sound
                           4260 ;	genLabel
   0E0F                    4261 00109$:
                           4262 ;	genEndFunction
   0E0F E8 06              4263 	lda	sp,6(sp)
   0E11 C9                 4264 	ret
   0E12                    4265 ___cursor_move_end:
                           4266 ;	cursor.c 92
                           4267 ;	genLabel
                           4268 ;	genFunction
                           4269 ;	---------------------------------
                           4270 ; Function cursor_update
                           4271 ; ---------------------------------
   0E12                    4272 ___cursor_update_start:
   0E12                    4273 _cursor_update:
   0E12 E8 F3              4274 	lda	sp,-13(sp)
                           4275 ;	cursor.c 94
                           4276 ;	genCall
                           4277 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E14 CD 00 00           4278 	call	_joypad
   0E17 4B                 4279 	ld	c,e
                           4280 ;	genAssign
                           4281 ;	(registers are the same)
                           4282 ;	cursor.c 96
                           4283 ;	genCmpEq
                           4284 ;	AOP_HL for _counter
                           4285 ; genCmpEq: left 1, right 1, result 0
   0E18 21 FE 01           4286 	ld	hl,#_counter
   0E1B 7E                 4287 	ld	a,(hl)
   0E1C B7                 4288 	or	a,a
   0E1D C2 8C 0E           4289 	jp	nz,00108$
   0E20 18 03              4290 	jr	00131$
   0E22                    4291 00130$:
   0E22 C3 8C 0E           4292 	jp	00108$
   0E25                    4293 00131$:
                           4294 ;	cursor.c 97
                           4295 ;	genCmpEq
                           4296 ; genCmpEq: left 1, right 1, result 0
   0E25 79                 4297 	ld	a,c
   0E26 FE 01              4298 	cp	a,#0x01
   0E28 CA 76 0E           4299 	jp	z,00104$
   0E2B                    4300 00132$:
                           4301 ;	genCmpEq
                           4302 ; genCmpEq: left 1, right 1, result 0
   0E2B 79                 4303 	ld	a,c
   0E2C FE 02              4304 	cp	a,#0x02
   0E2E CA 66 0E           4305 	jp	z,00103$
   0E31                    4306 00133$:
                           4307 ;	genCmpEq
                           4308 ; genCmpEq: left 1, right 1, result 0
   0E31 79                 4309 	ld	a,c
   0E32 FE 04              4310 	cp	a,#0x04
   0E34 CA 46 0E           4311 	jp	z,00101$
   0E37                    4312 00134$:
                           4313 ;	genCmpEq
                           4314 ; genCmpEq: left 1, right 1, result 0
   0E37 79                 4315 	ld	a,c
   0E38 FE 08              4316 	cp	a,#0x08
   0E3A CA 56 0E           4317 	jp	z,00102$
   0E3D                    4318 00135$:
                           4319 ;	genCmpEq
                           4320 ; genCmpEq: left 1, right 1, result 0
   0E3D 79                 4321 	ld	a,c
   0E3E FE 10              4322 	cp	a,#0x10
   0E40 CA 86 0E           4323 	jp	z,00105$
   0E43                    4324 00136$:
                           4325 ;	genGoto
   0E43 C3 CA 0E           4326 	jp	00109$
                           4327 ;	cursor.c 98
                           4328 ;	genLabel
   0E46                    4329 00101$:
                           4330 ;	genIpush
                           4331 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E46 21 FE FF           4332 	ld	hl,#0xFFFFFFFE
   0E49 E5                 4333 	push	hl
                           4334 ;	genIpush
   0E4A 21 00 00           4335 	ld	hl,#0x0000
   0E4D E5                 4336 	push	hl
                           4337 ;	genCall
   0E4E CD D2 0C           4338 	call	_cursor_move
   0E51 E8 04              4339 	lda	sp,4(sp)
                           4340 ;	genGoto
   0E53 C3 CA 0E           4341 	jp	00109$
                           4342 ;	cursor.c 99
                           4343 ;	genLabel
   0E56                    4344 00102$:
                           4345 ;	genIpush
                           4346 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E56 21 02 00           4347 	ld	hl,#0x0002
   0E59 E5                 4348 	push	hl
                           4349 ;	genIpush
   0E5A 21 00 00           4350 	ld	hl,#0x0000
   0E5D E5                 4351 	push	hl
                           4352 ;	genCall
   0E5E CD D2 0C           4353 	call	_cursor_move
   0E61 E8 04              4354 	lda	sp,4(sp)
                           4355 ;	genGoto
   0E63 C3 CA 0E           4356 	jp	00109$
                           4357 ;	cursor.c 100
                           4358 ;	genLabel
   0E66                    4359 00103$:
                           4360 ;	genIpush
                           4361 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E66 21 00 00           4362 	ld	hl,#0x0000
   0E69 E5                 4363 	push	hl
                           4364 ;	genIpush
   0E6A 21 FE FF           4365 	ld	hl,#0xFFFFFFFE
   0E6D E5                 4366 	push	hl
                           4367 ;	genCall
   0E6E CD D2 0C           4368 	call	_cursor_move
   0E71 E8 04              4369 	lda	sp,4(sp)
                           4370 ;	genGoto
   0E73 C3 CA 0E           4371 	jp	00109$
                           4372 ;	cursor.c 101
                           4373 ;	genLabel
   0E76                    4374 00104$:
                           4375 ;	genIpush
                           4376 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E76 21 00 00           4377 	ld	hl,#0x0000
   0E79 E5                 4378 	push	hl
                           4379 ;	genIpush
   0E7A 21 02 00           4380 	ld	hl,#0x0002
   0E7D E5                 4381 	push	hl
                           4382 ;	genCall
   0E7E CD D2 0C           4383 	call	_cursor_move
   0E81 E8 04              4384 	lda	sp,4(sp)
                           4385 ;	genGoto
   0E83 C3 CA 0E           4386 	jp	00109$
                           4387 ;	cursor.c 102
                           4388 ;	genLabel
   0E86                    4389 00105$:
                           4390 ;	genCall
                           4391 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E86 CD 46 0B           4392 	call	_cursor_toggle
                           4393 ;	cursor.c 103
                           4394 ;	genGoto
   0E89 C3 CA 0E           4395 	jp	00109$
                           4396 ;	genLabel
   0E8C                    4397 00108$:
                           4398 ;	cursor.c 105
                           4399 ;	genPointerGet
   0E8C 11 F9 01           4400 	ld	de,#_cursor
   0E8F 1A                 4401 	ld	a,(de)
   0E90 4F                 4402 	ld	c,a
                           4403 ;	genPlus
                           4404 ;	AOP_STK for _cursor_update_sloc0_1_0
                           4405 ;	genPlusIncr
                           4406 ;	Can't optimise plus by inc, falling back to the normal way
   0E91 11 F9 01           4407 	ld	de,#_cursor
   0E94 21 02 00           4408 	ld	hl,#0x0002
   0E97 19                 4409 	add	hl,de
   0E98 7D                 4410 	ld	a,l
   0E99 54                 4411 	ld	d,h
   0E9A F8 09              4412 	lda	hl,9(sp)
                           4413 ;	genPointerGet
                           4414 ;	AOP_STK for _cursor_update_sloc0_1_0
   0E9C 22                 4415 	ld	(hl+),a
   0E9D 72                 4416 	ld	(hl),d
   0E9E 5F                 4417 	ld	e,a
   0E9F 1A                 4418 	ld	a,(de)
   0EA0 47                 4419 	ld	b,a
                           4420 ;	genPlus
                           4421 ;	Can't optimise plus by inc, falling back to the normal way
   0EA1 79                 4422 	ld	a,c
   0EA2 80                 4423 	add	a,b
                           4424 ;	genAssign (pointer)
   0EA3 11 F9 01           4425 	ld	de,#_cursor
   0EA6 12                 4426 	ld	(de),a
                           4427 ;	cursor.c 106
                           4428 ;	genPlus
                           4429 ;	genPlusIncr
   0EA7 01 FA 01           4430 	ld	bc,#_cursor + 1
                           4431 ;	genPointerGet
                           4432 ;	AOP_STK for _cursor_update_sloc0_1_0
   0EAA 0A                 4433 	ld	a,(bc)
   0EAB 2B                 4434 	dec	hl
   0EAC 77                 4435 	ld	(hl),a
                           4436 ;	genPlus
                           4437 ;	AOP_STK for _cursor_update_sloc1_1_0
                           4438 ;	genPlusIncr
                           4439 ;	Can't optimise plus by inc, falling back to the normal way
   0EAD 11 F9 01           4440 	ld	de,#_cursor
   0EB0 21 03 00           4441 	ld	hl,#0x0003
   0EB3 19                 4442 	add	hl,de
   0EB4 7D                 4443 	ld	a,l
   0EB5 54                 4444 	ld	d,h
   0EB6 F8 07              4445 	lda	hl,7(sp)
                           4446 ;	genPointerGet
                           4447 ;	AOP_STK for _cursor_update_sloc1_1_0
                           4448 ;	AOP_STK for _cursor_update_sloc2_1_0
   0EB8 22                 4449 	ld	(hl+),a
   0EB9 72                 4450 	ld	(hl),d
   0EBA 5F                 4451 	ld	e,a
   0EBB 1A                 4452 	ld	a,(de)
   0EBC 2B                 4453 	dec	hl
   0EBD 2B                 4454 	dec	hl
   0EBE 77                 4455 	ld	(hl),a
                           4456 ;	genPlus
                           4457 ;	AOP_STK for _cursor_update_sloc0_1_0
                           4458 ;	AOP_STK for _cursor_update_sloc2_1_0
                           4459 ;	Can't optimise plus by inc, falling back to the normal way
   0EBF F8 09              4460 	lda	hl,9(sp)
   0EC1 7E                 4461 	ld	a,(hl)
   0EC2 F8 06              4462 	lda	hl,6(sp)
   0EC4 86                 4463 	add	a,(hl)
                           4464 ;	genAssign (pointer)
   0EC5 02                 4465 	ld	(bc),a
                           4466 ;	cursor.c 107
                           4467 ;	genMinus
                           4468 ;	AOP_HL for _counter
   0EC6 21 FE 01           4469 	ld	hl,#_counter
   0EC9 35                 4470 	dec	(hl)
                           4471 ;	genLabel
   0ECA                    4472 00109$:
                           4473 ;	cursor.c 110
                           4474 ;	genAssign
                           4475 ;	AOP_STK for _cursor_update_i_1_1
   0ECA F8 0C              4476 	lda	hl,12(sp)
   0ECC 36 00              4477 	ld	(hl),#0x00
                           4478 ;	genLabel
   0ECE                    4479 00114$:
                           4480 ;	genCmpEq
                           4481 ;	AOP_STK for _cursor_update_i_1_1
                           4482 ; genCmpEq: left 1, right 1, result 0
   0ECE F8 0C              4483 	lda	hl,12(sp)
   0ED0 7E                 4484 	ld	a,(hl)
   0ED1 FE 04              4485 	cp	a,#0x04
   0ED3 CA 57 0F           4486 	jp	z,00118$
   0ED6                    4487 00137$:
                           4488 ;	cursor.c 111
                           4489 ;	genAssign
                           4490 ;	AOP_STK for _cursor_update_j_1_1
   0ED6 F8 0B              4491 	lda	hl,11(sp)
   0ED8 36 00              4492 	ld	(hl),#0x00
                           4493 ;	genLabel
   0EDA                    4494 00110$:
                           4495 ;	genCmpEq
                           4496 ;	AOP_STK for _cursor_update_j_1_1
                           4497 ; genCmpEq: left 1, right 1, result 1
   0EDA F8 0B              4498 	lda	hl,11(sp)
   0EDC 7E                 4499 	ld	a,(hl)
   0EDD FE 04              4500 	cp	a,#0x04
   0EDF C2 E6 0E           4501 	jp	nz,00138$
   0EE2 3E 01              4502 	ld	a,#0x01
   0EE4 18 01              4503 	jr	00139$
   0EE6                    4504 00138$:
   0EE6 AF                 4505 	xor	a,a
   0EE7                    4506 00139$:
                           4507 ;	genIfx
   0EE7 B7                 4508 	or	a,a
   0EE8 C2 51 0F           4509 	jp	nz,00116$
                           4510 ;	cursor.c 113
                           4511 ;	genPlus
                           4512 ;	genPlusIncr
   0EEB 01 FA 01           4513 	ld	bc,#_cursor + 1
                           4514 ;	genPointerGet
                           4515 ;	AOP_STK for _cursor_update_sloc2_1_0
   0EEE 0A                 4516 	ld	a,(bc)
   0EEF F8 06              4517 	lda	hl,6(sp)
   0EF1 77                 4518 	ld	(hl),a
                           4519 ;	genLeftShift
                           4520 ;	AOP_STK for _cursor_update_i_1_1
                           4521 ;	AOP_STK for _cursor_update_sloc1_1_0
   0EF2 F8 0C              4522 	lda	hl,12(sp)
   0EF4 7E                 4523 	ld	a,(hl)
   0EF5 CB 27              4524 	sla	a
   0EF7 CB 17              4525 	rl	a
   0EF9 CB 17              4526 	rl	a
   0EFB E6 F8              4527 	and	a,#0xF8
   0EFD F8 07              4528 	lda	hl,7(sp)
                           4529 ;	genPlus
                           4530 ;	AOP_STK for _cursor_update_sloc2_1_0
                           4531 ;	AOP_STK for _cursor_update_sloc1_1_0
                           4532 ;	AOP_STK for _cursor_update_sloc0_1_0
                           4533 ;	Can't optimise plus by inc, falling back to the normal way
   0EFF 32                 4534 	ld      (hl-),a
   0F00 2A                 4535 	ld	a,(hl+)
   0F01 86                 4536 	add	a,(hl)
   0F02 23                 4537 	inc	hl
   0F03 23                 4538 	inc	hl
   0F04 77                 4539 	ld	(hl),a
                           4540 ;	genPointerGet
                           4541 ;	AOP_STK for _cursor_update_sloc3_1_0
   0F05 11 F9 01           4542 	ld	de,#_cursor
   0F08 1A                 4543 	ld	a,(de)
   0F09 F8 05              4544 	lda	hl,5(sp)
   0F0B 77                 4545 	ld	(hl),a
                           4546 ;	genLeftShift
                           4547 ;	AOP_STK for _cursor_update_j_1_1
                           4548 ;	AOP_STK for _cursor_update_sloc4_1_0
   0F0C F8 0B              4549 	lda	hl,11(sp)
   0F0E 7E                 4550 	ld	a,(hl)
   0F0F CB 27              4551 	sla	a
   0F11 CB 17              4552 	rl	a
   0F13 CB 17              4553 	rl	a
   0F15 E6 F8              4554 	and	a,#0xF8
   0F17 F8 04              4555 	lda	hl,4(sp)
                           4556 ;	genPlus
                           4557 ;	AOP_STK for _cursor_update_sloc3_1_0
                           4558 ;	AOP_STK for _cursor_update_sloc4_1_0
                           4559 ;	AOP_STK for _cursor_update_sloc5_1_0
                           4560 ;	Can't optimise plus by inc, falling back to the normal way
   0F19 22                 4561 	ld	(hl+),a
   0F1A 7E                 4562 	ld	a,(hl)
   0F1B 2B                 4563 	dec	hl
   0F1C 86                 4564 	add	a,(hl)
   0F1D 2B                 4565 	dec	hl
   0F1E 77                 4566 	ld	(hl),a
                           4567 ;	genLeftShift
                           4568 ;	AOP_STK for _cursor_update_i_1_1
                           4569 ;	AOP_STK for _cursor_update_sloc6_1_0
   0F1F F8 0C              4570 	lda	hl,12(sp)
   0F21 7E                 4571 	ld	a,(hl)
   0F22 87                 4572 	add	a,a
   0F23 87                 4573 	add	a,a
   0F24 F8 02              4574 	lda	hl,2(sp)
                           4575 ;	genPlus
                           4576 ;	AOP_STK for _cursor_update_sloc6_1_0
                           4577 ;	AOP_STK for _cursor_update_j_1_1
                           4578 ;	AOP_STK for _cursor_update_sloc7_1_0
                           4579 ;	Can't optimise plus by inc, falling back to the normal way
   0F26 77                 4580 	ld      (hl),a
                           4581 ; Removed redundent load
   0F27 F8 0B              4582 	lda	hl,11(sp)
   0F29 86                 4583 	add	a,(hl)
   0F2A F8 01              4584 	lda	hl,1(sp)
   0F2C 77                 4585 	ld	(hl),a
                           4586 ;	genIpush
                           4587 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0F2D C5                 4588 	push	bc
                           4589 ;	AOP_STK for _cursor_update_sloc0_1_0
   0F2E F8 0B              4590 	lda	hl,11(sp)
   0F30 7E                 4591 	ld	a,(hl)
   0F31 F5                 4592 	push	af
   0F32 33                 4593 	inc	sp
                           4594 ;	genIpush
                           4595 ;	AOP_STK for _cursor_update_sloc5_1_0
   0F33 F8 06              4596 	lda	hl,6(sp)
   0F35 7E                 4597 	ld	a,(hl)
   0F36 F5                 4598 	push	af
   0F37 33                 4599 	inc	sp
                           4600 ;	genIpush
                           4601 ;	AOP_STK for _cursor_update_sloc7_1_0
   0F38 2B                 4602 	dec	hl
   0F39 2B                 4603 	dec	hl
   0F3A 7E                 4604 	ld	a,(hl)
   0F3B F5                 4605 	push	af
   0F3C 33                 4606 	inc	sp
                           4607 ;	genCall
   0F3D CD 00 00           4608 	call	_move_sprite
   0F40 E8 03              4609 	lda	sp,3(sp)
   0F42 C1                 4610 	pop	bc
                           4611 ;	cursor.c 111
                           4612 ;	genPlus
                           4613 ;	AOP_STK for _cursor_update_j_1_1
                           4614 ;	AOP_STK for _cursor_update_sloc8_1_0
                           4615 ;	genPlusIncr
                           4616 ;	Can't optimise plus by inc, falling back to the normal way
   0F43 F8 0B              4617 	lda	hl,11(sp)
   0F45 7E                 4618 	ld	a,(hl)
   0F46 C6 01              4619 	add	a,#0x01
   0F48 F8 00              4620 	lda	hl,0(sp)
                           4621 ;	genAssign
                           4622 ;	AOP_STK for _cursor_update_sloc8_1_0
                           4623 ;	AOP_STK for _cursor_update_j_1_1
   0F4A 77                 4624 	ld      (hl),a
                           4625 ; Removed redundent load
   0F4B F8 0B              4626 	lda	hl,11(sp)
   0F4D 77                 4627 	ld	(hl),a
                           4628 ;	genGoto
   0F4E C3 DA 0E           4629 	jp	00110$
                           4630 ;	genLabel
   0F51                    4631 00116$:
                           4632 ;	cursor.c 110
                           4633 ;	genPlus
                           4634 ;	AOP_STK for _cursor_update_i_1_1
                           4635 ;	genPlusIncr
   0F51 F8 0C              4636 	lda	hl,12(sp)
   0F53 34                 4637 	inc	(hl)
                           4638 ;	genGoto
   0F54 C3 CE 0E           4639 	jp	00114$
                           4640 ;	genLabel
   0F57                    4641 00118$:
                           4642 ;	genEndFunction
   0F57 E8 0D              4643 	lda	sp,13(sp)
   0F59 C9                 4644 	ret
   0F5A                    4645 ___cursor_update_end:
                           4646 ;	cursor.c 118
                           4647 ;	genLabel
                           4648 ;	genFunction
                           4649 ;	---------------------------------
                           4650 ; Function cursor_reset
                           4651 ; ---------------------------------
   0F5A                    4652 ___cursor_reset_start:
   0F5A                    4653 _cursor_reset:
                           4654 	
                           4655 ;	cursor.c 119
                           4656 ;	genIpush
                           4657 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F5A 21 05 00           4658 	ld	hl,#0x0005
   0F5D E5                 4659 	push	hl
                           4660 ;	genCall
   0F5E CD 00 00           4661 	call	_set_sprite_tile
   0F61 E8 02              4662 	lda	sp,2(sp)
                           4663 ;	cursor.c 120
                           4664 ;	genIpush
                           4665 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F63 21 06 00           4666 	ld	hl,#0x0006
   0F66 E5                 4667 	push	hl
                           4668 ;	genCall
   0F67 CD 00 00           4669 	call	_set_sprite_tile
   0F6A E8 02              4670 	lda	sp,2(sp)
                           4671 ;	cursor.c 121
                           4672 ;	genIpush
                           4673 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F6C 21 09 00           4674 	ld	hl,#0x0009
   0F6F E5                 4675 	push	hl
                           4676 ;	genCall
   0F70 CD 00 00           4677 	call	_set_sprite_tile
   0F73 E8 02              4678 	lda	sp,2(sp)
                           4679 ;	cursor.c 122
                           4680 ;	genIpush
                           4681 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F75 21 0A 00           4682 	ld	hl,#0x000A
   0F78 E5                 4683 	push	hl
                           4684 ;	genCall
   0F79 CD 00 00           4685 	call	_set_sprite_tile
   0F7C E8 02              4686 	lda	sp,2(sp)
                           4687 ;	cursor.c 124
                           4688 ;	genAssign
                           4689 ;	AOP_HL for _counter
   0F7E 21 FE 01           4690 	ld	hl,#_counter
   0F81 36 00              4691 	ld	(hl),#0x00
                           4692 ;	cursor.c 125
                           4693 ;	genAssign
                           4694 ;	AOP_HL for _selected
   0F83 21 FD 01           4695 	ld	hl,#_selected
   0F86 36 00              4696 	ld	(hl),#0x00
                           4697 ;	cursor.c 126
                           4698 ;	genAssign (pointer)
   0F88 11 F9 01           4699 	ld	de,#_cursor
   0F8B 3E 08              4700 	ld	a,#0x08
   0F8D 12                 4701 	ld	(de),a
                           4702 ;	cursor.c 127
                           4703 ;	genPlus
                           4704 ;	genPlusIncr
   0F8E 21 FA 01           4705 	ld	hl,#_cursor + 1
                           4706 ;	genAssign (pointer)
   0F91 36 10              4707 	ld	(hl),#0x10
                           4708 ;	cursor.c 128
                           4709 ;	genPlus
                           4710 ;	genPlusIncr
   0F93 23                 4711 	inc	hl
                           4712 ;	genAssign (pointer)
   0F94 36 00              4713 	ld	(hl),#0x00
                           4714 ;	cursor.c 129
                           4715 ;	genPlus
                           4716 ;	genPlusIncr
   0F96 23                 4717 	inc	hl
                           4718 ;	genAssign (pointer)
   0F97 36 00              4719 	ld	(hl),#0x00
                           4720 ;	genLabel
   0F99                    4721 00101$:
                           4722 ;	genEndFunction
                           4723 	
   0F99 C9                 4724 	ret
   0F9A                    4725 ___cursor_reset_end:
                           4726 ;	cursor.c 132
                           4727 ;	genLabel
                           4728 ;	genFunction
                           4729 ;	---------------------------------
                           4730 ; Function cursor_init
                           4731 ; ---------------------------------
   0F9A                    4732 ___cursor_init_start:
   0F9A                    4733 _cursor_init:
                           4734 	
                           4735 ;	cursor.c 134
                           4736 ;	genIpush
                           4737 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F9A 21 00 01           4738 	ld	hl,#0x0100
   0F9D E5                 4739 	push	hl
                           4740 ;	genCall
   0F9E CD 00 00           4741 	call	_set_sprite_tile
   0FA1 E8 02              4742 	lda	sp,2(sp)
                           4743 ;	cursor.c 135
                           4744 ;	genIpush
                           4745 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FA3 21 01 02           4746 	ld	hl,#0x0201
   0FA6 E5                 4747 	push	hl
                           4748 ;	genCall
   0FA7 CD 00 00           4749 	call	_set_sprite_tile
   0FAA E8 02              4750 	lda	sp,2(sp)
                           4751 ;	cursor.c 136
                           4752 ;	genIpush
                           4753 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FAC 21 04 03           4754 	ld	hl,#0x0304
   0FAF E5                 4755 	push	hl
                           4756 ;	genCall
   0FB0 CD 00 00           4757 	call	_set_sprite_tile
   0FB3 E8 02              4758 	lda	sp,2(sp)
                           4759 ;	cursor.c 139
                           4760 ;	genIpush
                           4761 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FB5 21 02 02           4762 	ld	hl,#0x0202
   0FB8 E5                 4763 	push	hl
                           4764 ;	genCall
   0FB9 CD 00 00           4765 	call	_set_sprite_tile
   0FBC E8 02              4766 	lda	sp,2(sp)
                           4767 ;	cursor.c 140
                           4768 ;	genIpush
                           4769 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FBE 21 02 20           4770 	ld	hl,#0x2002
   0FC1 E5                 4771 	push	hl
                           4772 ;	genCall
   0FC2 CD 00 00           4773 	call	_set_sprite_prop
   0FC5 E8 02              4774 	lda	sp,2(sp)
                           4775 ;	cursor.c 141
                           4776 ;	genIpush
                           4777 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FC7 21 03 01           4778 	ld	hl,#0x0103
   0FCA E5                 4779 	push	hl
                           4780 ;	genCall
   0FCB CD 00 00           4781 	call	_set_sprite_tile
   0FCE E8 02              4782 	lda	sp,2(sp)
                           4783 ;	cursor.c 142
                           4784 ;	genIpush
                           4785 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FD0 21 03 20           4786 	ld	hl,#0x2003
   0FD3 E5                 4787 	push	hl
                           4788 ;	genCall
   0FD4 CD 00 00           4789 	call	_set_sprite_prop
   0FD7 E8 02              4790 	lda	sp,2(sp)
                           4791 ;	cursor.c 143
                           4792 ;	genIpush
                           4793 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FD9 21 07 03           4794 	ld	hl,#0x0307
   0FDC E5                 4795 	push	hl
                           4796 ;	genCall
   0FDD CD 00 00           4797 	call	_set_sprite_tile
   0FE0 E8 02              4798 	lda	sp,2(sp)
                           4799 ;	cursor.c 144
                           4800 ;	genIpush
                           4801 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FE2 21 07 20           4802 	ld	hl,#0x2007
   0FE5 E5                 4803 	push	hl
                           4804 ;	genCall
   0FE6 CD 00 00           4805 	call	_set_sprite_prop
   0FE9 E8 02              4806 	lda	sp,2(sp)
                           4807 ;	cursor.c 147
                           4808 ;	genIpush
                           4809 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FEB 21 08 03           4810 	ld	hl,#0x0308
   0FEE E5                 4811 	push	hl
                           4812 ;	genCall
   0FEF CD 00 00           4813 	call	_set_sprite_tile
   0FF2 E8 02              4814 	lda	sp,2(sp)
                           4815 ;	cursor.c 148
                           4816 ;	genIpush
                           4817 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FF4 21 08 40           4818 	ld	hl,#0x4008
   0FF7 E5                 4819 	push	hl
                           4820 ;	genCall
   0FF8 CD 00 00           4821 	call	_set_sprite_prop
   0FFB E8 02              4822 	lda	sp,2(sp)
                           4823 ;	cursor.c 149
                           4824 ;	genIpush
                           4825 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FFD 21 0C 01           4826 	ld	hl,#0x010C
   1000 E5                 4827 	push	hl
                           4828 ;	genCall
   1001 CD 00 00           4829 	call	_set_sprite_tile
   1004 E8 02              4830 	lda	sp,2(sp)
                           4831 ;	cursor.c 150
                           4832 ;	genIpush
                           4833 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1006 21 0C 40           4834 	ld	hl,#0x400C
   1009 E5                 4835 	push	hl
                           4836 ;	genCall
   100A CD 00 00           4837 	call	_set_sprite_prop
   100D E8 02              4838 	lda	sp,2(sp)
                           4839 ;	cursor.c 151
                           4840 ;	genIpush
                           4841 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   100F 21 0D 02           4842 	ld	hl,#0x020D
   1012 E5                 4843 	push	hl
                           4844 ;	genCall
   1013 CD 00 00           4845 	call	_set_sprite_tile
   1016 E8 02              4846 	lda	sp,2(sp)
                           4847 ;	cursor.c 152
                           4848 ;	genIpush
                           4849 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1018 21 0D 40           4850 	ld	hl,#0x400D
   101B E5                 4851 	push	hl
                           4852 ;	genCall
   101C CD 00 00           4853 	call	_set_sprite_prop
   101F E8 02              4854 	lda	sp,2(sp)
                           4855 ;	cursor.c 155
                           4856 ;	genIpush
                           4857 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1021 21 0B 03           4858 	ld	hl,#0x030B
   1024 E5                 4859 	push	hl
                           4860 ;	genCall
   1025 CD 00 00           4861 	call	_set_sprite_tile
   1028 E8 02              4862 	lda	sp,2(sp)
                           4863 ;	cursor.c 156
                           4864 ;	genIpush
                           4865 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   102A 21 0B 60           4866 	ld	hl,#0x600B
   102D E5                 4867 	push	hl
                           4868 ;	genCall
   102E CD 00 00           4869 	call	_set_sprite_prop
   1031 E8 02              4870 	lda	sp,2(sp)
                           4871 ;	cursor.c 157
                           4872 ;	genIpush
                           4873 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1033 21 0E 02           4874 	ld	hl,#0x020E
   1036 E5                 4875 	push	hl
                           4876 ;	genCall
   1037 CD 00 00           4877 	call	_set_sprite_tile
   103A E8 02              4878 	lda	sp,2(sp)
                           4879 ;	cursor.c 158
                           4880 ;	genIpush
                           4881 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   103C 21 0E 60           4882 	ld	hl,#0x600E
   103F E5                 4883 	push	hl
                           4884 ;	genCall
   1040 CD 00 00           4885 	call	_set_sprite_prop
   1043 E8 02              4886 	lda	sp,2(sp)
                           4887 ;	cursor.c 159
                           4888 ;	genIpush
                           4889 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1045 21 0F 01           4890 	ld	hl,#0x010F
   1048 E5                 4891 	push	hl
                           4892 ;	genCall
   1049 CD 00 00           4893 	call	_set_sprite_tile
   104C E8 02              4894 	lda	sp,2(sp)
                           4895 ;	cursor.c 160
                           4896 ;	genIpush
                           4897 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   104E 21 0F 60           4898 	ld	hl,#0x600F
   1051 E5                 4899 	push	hl
                           4900 ;	genCall
   1052 CD 00 00           4901 	call	_set_sprite_prop
   1055 E8 02              4902 	lda	sp,2(sp)
                           4903 ;	cursor.c 163
                           4904 ;	genIpush
                           4905 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1057 21 05 00           4906 	ld	hl,#0x0005
   105A E5                 4907 	push	hl
                           4908 ;	genCall
   105B CD 00 00           4909 	call	_set_sprite_tile
   105E E8 02              4910 	lda	sp,2(sp)
                           4911 ;	cursor.c 164
                           4912 ;	genIpush
                           4913 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1060 21 06 00           4914 	ld	hl,#0x0006
   1063 E5                 4915 	push	hl
                           4916 ;	genCall
   1064 CD 00 00           4917 	call	_set_sprite_tile
   1067 E8 02              4918 	lda	sp,2(sp)
                           4919 ;	cursor.c 165
                           4920 ;	genIpush
                           4921 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1069 21 09 00           4922 	ld	hl,#0x0009
   106C E5                 4923 	push	hl
                           4924 ;	genCall
   106D CD 00 00           4925 	call	_set_sprite_tile
   1070 E8 02              4926 	lda	sp,2(sp)
                           4927 ;	cursor.c 166
                           4928 ;	genIpush
                           4929 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1072 21 0A 00           4930 	ld	hl,#0x000A
   1075 E5                 4931 	push	hl
                           4932 ;	genCall
   1076 CD 00 00           4933 	call	_set_sprite_tile
   1079 E8 02              4934 	lda	sp,2(sp)
                           4935 ;	cursor.c 168
                           4936 ;	genCall
                           4937 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   107B CD 12 0E           4938 	call	_cursor_update
                           4939 ;	genLabel
   107E                    4940 00101$:
                           4941 ;	genEndFunction
                           4942 	
   107E C9                 4943 	ret
   107F                    4944 ___cursor_init_end:
                           4945 ;	LazerMaze.c 28
                           4946 ;	genLabel
                           4947 ;	genFunction
                           4948 ;	---------------------------------
                           4949 ; Function display_title
                           4950 ; ---------------------------------
   107F                    4951 ___display_title_start:
   107F                    4952 _display_title:
                           4953 	
                           4954 ;	LazerMaze.c 29
                           4955 ;	genAssign
   107F 01 00 20           4956 	ld	bc,#0x2000
                           4957 ;	genAssign (pointer)
   1082 3E 01              4958 	ld	a,#0x01
   1084 02                 4959 	ld	(bc),a
                           4960 ;	LazerMaze.c 30
                           4961 ;	genCall
                           4962 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1085 CD 00 00           4963 	call	_show_title
                           4964 ;	genLabel
   1088                    4965 00101$:
                           4966 ;	genEndFunction
                           4967 	
   1088 C9                 4968 	ret
   1089                    4969 ___display_title_end:
                           4970 ;	LazerMaze.c 33
                           4971 ;	genLabel
                           4972 ;	genFunction
                           4973 ;	---------------------------------
                           4974 ; Function display_level
                           4975 ; ---------------------------------
   1089                    4976 ___display_level_start:
   1089                    4977 _display_level:
   1089 E8 FD              4978 	lda	sp,-3(sp)
                           4979 ;	LazerMaze.c 34
                           4980 ;	genAssign
   108B 01 00 20           4981 	ld	bc,#0x2000
                           4982 ;	genAssign (pointer)
   108E 3E 02              4983 	ld	a,#0x02
   1090 02                 4984 	ld	(bc),a
                           4985 ;	LazerMaze.c 35
                           4986 ;	genCall
                           4987 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1091 CD 00 00           4988 	call	_display_off
                           4989 ;	LazerMaze.c 37
                           4990 ;	genIpush
                           4991 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1094 21 48 00           4992 	ld	hl,#_current_level
   1097 E5                 4993 	push	hl
                           4994 ;	genCall
   1098 CD 45 07           4995 	call	_init_background
   109B E8 02              4996 	lda	sp,2(sp)
                           4997 ;	LazerMaze.c 38
                           4998 ;	genIpush
                           4999 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   109D 21 00 00           5000 	ld	hl,#_level_objects
   10A0 E5                 5001 	push	hl
                           5002 ;	genIpush
                           5003 ;	AOP_HL for _level
   10A1 21 B0 01           5004 	ld	hl,#_level
   10A4 7E                 5005 	ld	a,(hl)
   10A5 F5                 5006 	push	af
   10A6 33                 5007 	inc	sp
                           5008 ;	genCall
   10A7 CD 00 00           5009 	call	_show_level
   10AA E8 03              5010 	lda	sp,3(sp)
                           5011 ;	LazerMaze.c 40
                           5012 ;	genIpush
                           5013 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10AC 21 48 00           5014 	ld	hl,#_current_level
   10AF E5                 5015 	push	hl
                           5016 ;	genIpush
   10B0 21 00 00           5017 	ld	hl,#_level_objects
   10B3 E5                 5018 	push	hl
                           5019 ;	genCall
   10B4 CD 43 08           5020 	call	_update_background
   10B7 E8 04              5021 	lda	sp,4(sp)
                           5022 ;	LazerMaze.c 41
                           5023 ;	genIpush
                           5024 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10B9 21 48 00           5025 	ld	hl,#_current_level
   10BC E5                 5026 	push	hl
                           5027 ;	genIpush
   10BD 21 14 12           5028 	ld	hl,#0x1214
   10C0 E5                 5029 	push	hl
                           5030 ;	genIpush
   10C1 21 00 00           5031 	ld	hl,#0x0000
   10C4 E5                 5032 	push	hl
                           5033 ;	genCall
   10C5 CD 00 00           5034 	call	_set_bkg_tiles
   10C8 E8 06              5035 	lda	sp,6(sp)
                           5036 ;	LazerMaze.c 43
                           5037 ;	genCall
                           5038 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10CA CD 5A 0F           5039 	call	_cursor_reset
                           5040 ;	LazerMaze.c 44
                           5041 ;	genAssign
   10CD 01 40 FF           5042 	ld	bc,#0xFF40
                           5043 ;	genAssign
                           5044 ;	AOP_STK for _display_level_sloc0_1_0
   10D0 F8 01              5045 	lda	hl,1(sp)
   10D2 36 40              5046 	ld	(hl),#0x40
   10D4 23                 5047 	inc	hl
   10D5 36 FF              5048 	ld	(hl),#0xFF
                           5049 ;	genPointerGet
                           5050 ;	AOP_STK for _display_level_sloc0_1_0
                           5051 ;	AOP_STK for _display_level_sloc1_1_0
   10D7 2B                 5052 	dec	hl
   10D8 5E                 5053 	ld	e,(hl)
   10D9 23                 5054 	inc	hl
   10DA 56                 5055 	ld	d,(hl)
   10DB 1A                 5056 	ld	a,(de)
   10DC 2B                 5057 	dec	hl
   10DD 2B                 5058 	dec	hl
                           5059 ;	genOr
                           5060 ;	AOP_STK for _display_level_sloc1_1_0
   10DE 77                 5061 	ld      (hl),a
   10DF 7F                 5062 	ld      a,a
   10E0 F6 80              5063 	or	a,#0x80
                           5064 ;	genAssign (pointer)
   10E2 02                 5065 	ld	(bc),a
                           5066 ;	genLabel
   10E3                    5067 00101$:
                           5068 ;	genEndFunction
   10E3 E8 03              5069 	lda	sp,3(sp)
   10E5 C9                 5070 	ret
   10E6                    5071 ___display_level_end:
                           5072 ;	LazerMaze.c 47
                           5073 ;	genLabel
                           5074 ;	genFunction
                           5075 ;	---------------------------------
                           5076 ; Function display_victory
                           5077 ; ---------------------------------
   10E6                    5078 ___display_victory_start:
   10E6                    5079 _display_victory:
                           5080 	
                           5081 ;	LazerMaze.c 48
                           5082 ;	genAssign
   10E6 01 00 20           5083 	ld	bc,#0x2000
                           5084 ;	genAssign (pointer)
   10E9 3E 01              5085 	ld	a,#0x01
   10EB 02                 5086 	ld	(bc),a
                           5087 ;	LazerMaze.c 49
                           5088 ;	genCall
                           5089 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10EC CD 00 00           5090 	call	_show_victory
                           5091 ;	genLabel
   10EF                    5092 00101$:
                           5093 ;	genEndFunction
                           5094 	
   10EF C9                 5095 	ret
   10F0                    5096 ___display_victory_end:
                           5097 ;	LazerMaze.c 52
                           5098 ;	genLabel
                           5099 ;	genFunction
                           5100 ;	---------------------------------
                           5101 ; Function display_defeat
                           5102 ; ---------------------------------
   10F0                    5103 ___display_defeat_start:
   10F0                    5104 _display_defeat:
                           5105 	
                           5106 ;	LazerMaze.c 53
                           5107 ;	genAssign
   10F0 01 00 20           5108 	ld	bc,#0x2000
                           5109 ;	genAssign (pointer)
   10F3 3E 01              5110 	ld	a,#0x01
   10F5 02                 5111 	ld	(bc),a
                           5112 ;	LazerMaze.c 54
                           5113 ;	genCall
                           5114 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10F6 CD 00 00           5115 	call	_show_defeat
                           5116 ;	genLabel
   10F9                    5117 00101$:
                           5118 ;	genEndFunction
                           5119 	
   10F9 C9                 5120 	ret
   10FA                    5121 ___display_defeat_end:
                           5122 ;	LazerMaze.c 57
                           5123 ;	genLabel
                           5124 ;	genFunction
                           5125 ;	---------------------------------
                           5126 ; Function main
                           5127 ; ---------------------------------
   10FA                    5128 ___main_start:
   10FA                    5129 _main:
   10FA E8 FD              5130 	lda	sp,-3(sp)
                           5131 ;	LazerMaze.c 59
                           5132 ;	genAssign
   10FC 01 40 FF           5133 	ld	bc,#0xFF40
                           5134 ;	genAssign
                           5135 ;	AOP_STK for _main_sloc0_1_0
   10FF F8 01              5136 	lda	hl,1(sp)
   1101 36 40              5137 	ld	(hl),#0x40
   1103 23                 5138 	inc	hl
   1104 36 FF              5139 	ld	(hl),#0xFF
                           5140 ;	genPointerGet
                           5141 ;	AOP_STK for _main_sloc0_1_0
                           5142 ;	AOP_STK for _main_sloc1_1_0
   1106 2B                 5143 	dec	hl
   1107 5E                 5144 	ld	e,(hl)
   1108 23                 5145 	inc	hl
   1109 56                 5146 	ld	d,(hl)
   110A 1A                 5147 	ld	a,(de)
   110B 2B                 5148 	dec	hl
   110C 2B                 5149 	dec	hl
                           5150 ;	genAnd
                           5151 ;	AOP_STK for _main_sloc1_1_0
   110D 77                 5152 	ld      (hl),a
   110E 7F                 5153 	ld      a,a
   110F E6 FB              5154 	and	a,#0xFB
                           5155 ;	genAssign (pointer)
   1111 02                 5156 	ld	(bc),a
                           5157 ;	LazerMaze.c 60
                           5158 ;	genAssign
   1112 01 4F FF           5159 	ld	bc,#0xFF4F
                           5160 ;	genAssign (pointer)
   1115 3E 01              5161 	ld	a,#0x01
   1117 02                 5162 	ld	(bc),a
                           5163 ;	LazerMaze.c 61
                           5164 ;	genAssign
   1118 01 4F FF           5165 	ld	bc,#0xFF4F
                           5166 ;	genAssign (pointer)
   111B 3E 00              5167 	ld	a,#0x00
   111D 02                 5168 	ld	(bc),a
                           5169 ;	LazerMaze.c 63
                           5170 ;	genAssign
   111E 01 40 FF           5171 	ld	bc,#0xFF40
                           5172 ;	genAssign
                           5173 ;	AOP_STK for _main_sloc0_1_0
   1121 23                 5174 	inc	hl
   1122 36 40              5175 	ld	(hl),#0x40
   1124 23                 5176 	inc	hl
   1125 36 FF              5177 	ld	(hl),#0xFF
                           5178 ;	genPointerGet
                           5179 ;	AOP_STK for _main_sloc0_1_0
                           5180 ;	AOP_STK for _main_sloc1_1_0
   1127 2B                 5181 	dec	hl
   1128 5E                 5182 	ld	e,(hl)
   1129 23                 5183 	inc	hl
   112A 56                 5184 	ld	d,(hl)
   112B 1A                 5185 	ld	a,(de)
   112C 2B                 5186 	dec	hl
   112D 2B                 5187 	dec	hl
                           5188 ;	genOr
                           5189 ;	AOP_STK for _main_sloc1_1_0
   112E 77                 5190 	ld      (hl),a
   112F 7F                 5191 	ld      a,a
   1130 F6 01              5192 	or	a,#0x01
                           5193 ;	genAssign (pointer)
   1132 02                 5194 	ld	(bc),a
                           5195 ;	LazerMaze.c 65
                           5196 ;	genCall
                           5197 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1133 CD 7F 10           5198 	call	_display_title
                           5199 ;	LazerMaze.c 66
                           5200 ;	genAssign
   1136 01 40 FF           5201 	ld	bc,#0xFF40
                           5202 ;	genAssign
                           5203 ;	AOP_STK for _main_sloc0_1_0
   1139 F8 01              5204 	lda	hl,1(sp)
   113B 36 40              5205 	ld	(hl),#0x40
   113D 23                 5206 	inc	hl
   113E 36 FF              5207 	ld	(hl),#0xFF
                           5208 ;	genPointerGet
                           5209 ;	AOP_STK for _main_sloc0_1_0
                           5210 ;	AOP_STK for _main_sloc1_1_0
   1140 2B                 5211 	dec	hl
   1141 5E                 5212 	ld	e,(hl)
   1142 23                 5213 	inc	hl
   1143 56                 5214 	ld	d,(hl)
   1144 1A                 5215 	ld	a,(de)
   1145 2B                 5216 	dec	hl
   1146 2B                 5217 	dec	hl
                           5218 ;	genOr
                           5219 ;	AOP_STK for _main_sloc1_1_0
   1147 77                 5220 	ld      (hl),a
   1148 7F                 5221 	ld      a,a
   1149 F6 80              5222 	or	a,#0x80
                           5223 ;	genAssign (pointer)
   114B 02                 5224 	ld	(bc),a
                           5225 ;	LazerMaze.c 67
                           5226 ;	genIpush
                           5227 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   114C 3E FF              5228 	ld	a,#0xFF
   114E F5                 5229 	push	af
   114F 33                 5230 	inc	sp
                           5231 ;	genCall
   1150 CD 00 00           5232 	call	_waitpad
   1153 E8 01              5233 	lda	sp,1(sp)
                           5234 ;	LazerMaze.c 69
                           5235 ;	genIpush
                           5236 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1155 21 AD 11           5237 	ld	hl,#__str_0
   1158 E5                 5238 	push	hl
                           5239 ;	genCall
   1159 CD 00 00           5240 	call	_printf
   115C E8 02              5241 	lda	sp,2(sp)
                           5242 ;	LazerMaze.c 70
                           5243 ;	genIpush
                           5244 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   115E 21 FA 11           5245 	ld	hl,#__str_1
   1161 E5                 5246 	push	hl
                           5247 ;	genCall
   1162 CD 00 00           5248 	call	_printf
   1165 E8 02              5249 	lda	sp,2(sp)
                           5250 ;	LazerMaze.c 71
                           5251 ;	genIpush
                           5252 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1167 21 20 12           5253 	ld	hl,#__str_2
   116A E5                 5254 	push	hl
                           5255 ;	genCall
   116B CD 00 00           5256 	call	_printf
   116E E8 02              5257 	lda	sp,2(sp)
                           5258 ;	LazerMaze.c 72
                           5259 ;	genIpush
                           5260 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1170 21 63 12           5261 	ld	hl,#__str_3
   1173 E5                 5262 	push	hl
                           5263 ;	genCall
   1174 CD 00 00           5264 	call	_printf
   1177 E8 02              5265 	lda	sp,2(sp)
                           5266 ;	LazerMaze.c 74
                           5267 ;	genIpush
                           5268 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1179 3E 80              5269 	ld	a,#0x80
   117B F5                 5270 	push	af
   117C 33                 5271 	inc	sp
                           5272 ;	genCall
   117D CD 00 00           5273 	call	_waitpad
   1180 E8 01              5274 	lda	sp,1(sp)
                           5275 ;	LazerMaze.c 76
                           5276 ;	genAssign
   1182 01 40 FF           5277 	ld	bc,#0xFF40
                           5278 ;	genAssign
                           5279 ;	AOP_STK for _main_sloc0_1_0
   1185 F8 01              5280 	lda	hl,1(sp)
   1187 36 40              5281 	ld	(hl),#0x40
   1189 23                 5282 	inc	hl
   118A 36 FF              5283 	ld	(hl),#0xFF
                           5284 ;	genPointerGet
                           5285 ;	AOP_STK for _main_sloc0_1_0
                           5286 ;	AOP_STK for _main_sloc1_1_0
   118C 2B                 5287 	dec	hl
   118D 5E                 5288 	ld	e,(hl)
   118E 23                 5289 	inc	hl
   118F 56                 5290 	ld	d,(hl)
   1190 1A                 5291 	ld	a,(de)
   1191 2B                 5292 	dec	hl
   1192 2B                 5293 	dec	hl
                           5294 ;	genOr
                           5295 ;	AOP_STK for _main_sloc1_1_0
   1193 77                 5296 	ld      (hl),a
   1194 7F                 5297 	ld      a,a
   1195 F6 02              5298 	or	a,#0x02
                           5299 ;	genAssign (pointer)
   1197 02                 5300 	ld	(bc),a
                           5301 ;	LazerMaze.c 77
                           5302 ;	genCall
                           5303 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1198 CD 89 10           5304 	call	_display_level
                           5305 ;	LazerMaze.c 78
                           5306 ;	genCall
                           5307 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   119B CD 9A 0F           5308 	call	_cursor_init
                           5309 ;	LazerMaze.c 79
                           5310 ;	genCall
                           5311 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   119E CD 00 00           5312 	call	_init_sound
                           5313 ;	LazerMaze.c 81
                           5314 ;	genLabel
   11A1                    5315 00102$:
                           5316 ;	LazerMaze.c 82
                           5317 ;	genCall
                           5318 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11A1 CD 12 0E           5319 	call	_cursor_update
                           5320 ;	LazerMaze.c 83
                           5321 ;	genCall
                           5322 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11A4 CD 00 00           5323 	call	_wait_vbl_done
                           5324 ;	genGoto
   11A7 C3 A1 11           5325 	jp	00102$
                           5326 ;	genLabel
   11AA                    5327 00104$:
                           5328 ;	genEndFunction
   11AA E8 03              5329 	lda	sp,3(sp)
   11AC C9                 5330 	ret
   11AD                    5331 ___main_end:
   11AD                    5332 __str_0:
   11AD 20                 5333 	.ascii " "
   11AE 0A                 5334 	.db 0x0A
   11AF 20 4D 6F 76 65 20  5335 	.ascii " Move the elements"
        74 68 65 20 65 6C
        65 6D 65 6E 74 73
   11C1 0A                 5336 	.db 0x0A
   11C2 20 69 6E 20 74 68  5337 	.ascii " in the level to"
        65 20 6C 65 76 65
        6C 20 74 6F
   11D2 0A                 5338 	.db 0x0A
   11D3 20 68 69 74 20 61  5339 	.ascii " hit all objectives"
        6C 6C 20 6F 62 6A
        65 63 74 69 76 65
        73
   11E6 0A                 5340 	.db 0x0A
   11E7 20 77              5341 	.ascii " w"
   11E9 69 74 68 20 74 68  5342 	.ascii "ith the laser."
        65 20 6C 61 73 65
        72 2E
   11F7 0A                 5343 	.db 0x0A
   11F8 0A                 5344 	.db 0x0A
   11F9 00                 5345 	.db 0x00
   11FA                    5346 __str_1:
   11FA 20 55 73 65 20 74  5347 	.ascii " Use the arrors to"
        68 65 20 61 72 72
        6F 72 73 20 74 6F
   120C 0A                 5348 	.db 0x0A
   120D 20 6D 6F 76 65 74  5349 	.ascii " movethe cursor."
        68 65 20 63 75 72
        73 6F 72 2E
   121D 0A                 5350 	.db 0x0A
   121E 0A                 5351 	.db 0x0A
   121F 00                 5352 	.db 0x00
   1220                    5353 __str_2:
   1220 20 50 72 65 73 73  5354 	.ascii " Press A to move an"
        20 41 20 74 6F 20
        6D 6F 76 65 20 61
        6E
   1233 0A                 5355 	.db 0x0A
   1234 20 65 6C 65 6D 65  5356 	.ascii " element. Only some"
        6E 74 2E 20 4F 6E
        6C 79 20 73 6F 6D
        65
   1247 0A                 5357 	.db 0x0A
   1248 20 65 6C 65 6D 65  5358 	.ascii " elements can be"
        6E 74 73 20 63 61
        6E 20 62 65
   1258 0A                 5359 	.db 0x0A
   1259 20 6D 6F           5360 	.ascii " mo"
   125C 76 65 64 2E        5361 	.ascii "ved."
   1260 0A                 5362 	.db 0x0A
   1261 0A                 5363 	.db 0x0A
   1262 00                 5364 	.db 0x00
   1263                    5365 __str_3:
   1263 20 50 72 65 73 73  5366 	.ascii " Press start to"
        20 73 74 61 72 74
        20 74 6F
   1272 0A                 5367 	.db 0x0A
   1273 20 63 6F 6E 74 69  5368 	.ascii " continue"
        6E 75 65
   127C 0A                 5369 	.db 0x0A
   127D 00                 5370 	.db 0x00
                           5371 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___check_transition_end            0B46 R
  0 ___check_transition_start          0A33 R
  0 ___cursor_init_end                 107F R
  0 ___cursor_init_start               0F9A R
  0 ___cursor_move_end                 0E12 R
  0 ___cursor_move_start               0CD2 R
  0 ___cursor_reset_end                0F9A R
  0 ___cursor_reset_start              0F5A R
  0 ___cursor_toggle_end               0CD2 R
  0 ___cursor_toggle_start             0B46 R
  0 ___cursor_update_end               0F5A R
  0 ___cursor_update_start             0E12 R
  0 ___determine_lazer_path_end        068F R
  0 ___determine_lazer_path_start      045F R
  0 ___determine_next_direction_end    045F R
  0 ___determine_next_direction_star   0325 R
  0 ___determine_next_lazer_stat_end   0325 R
  0 ___determine_next_lazer_stat_sta   01CE R
  0 ___display_defeat_end              10FA R
  0 ___display_defeat_start            10F0 R
  0 ___display_level_end               10E6 R
  0 ___display_level_start             1089 R
  0 ___display_title_end               1089 R
  0 ___display_title_start             107F R
  0 ___display_victory_end             10F0 R
  0 ___display_victory_start           10E6 R
  0 ___explosion_sound_end             004B R
  0 ___explosion_sound_start           0032 R
  0 ___game_over_sound_end             00D7 R
  0 ___game_over_sound_start           00B8 R
  0 ___init_background_end             0843 R
  0 ___init_background_start           0745 R
  0 ___init_sound_end                  0013 R
  0 ___init_sound_start                0000 R
  0 ___main_end                        11AD R
  0 ___main_start                      10FA R
  0 ___move_cursor_sound_end           0032 R
  0 ___move_cursor_sound_start         0013 R
  0 ___project_lazer_end               0745 R
  0 ___project_lazer_start             068F R
  0 ___random_music_end                01AB R
  0 ___random_music_start              00D7 R
  0 ___row_col_to_cel_end              01CE R
  0 ___row_col_to_cel_start            01AB R
  0 ___update_background_end           0A33 R
  0 ___update_background_start         0843 R
  0 ___victory_sound_end               00B8 R
  0 ___victory_sound_start             004B R
    __divuint_rrx_s                    **** GX
    __moduint_rrx_s                    **** GX
  0 __str_0                            11AD R
  0 __str_1                            11FA R
  0 __str_2                            1220 R
  0 __str_3                            1263 R
  0 _check_transition                  0A33 GR
  1 _counter                           01FE GR
  1 _current_level                     0048 GR
  1 _cursor                            01F9 GR
  0 _cursor_init                       0F9A GR
  0 _cursor_move                       0CD2 GR
  0 _cursor_reset                      0F5A GR
  0 _cursor_toggle                     0B46 GR
  0 _cursor_update                     0E12 GR
    _delay                             **** GX
  0 _determine_lazer_path              045F GR
  0 _determine_next_direction          0325 GR
  0 _determine_next_lazer_stat         01CE GR
  0 _display_defeat                    10F0 GR
  0 _display_level                     1089 GR
    _display_off                       **** GX
  0 _display_title                     107F GR
  0 _display_victory                   10E6 GR
  0 _explosion_sound                   0032 GR
  0 _game_over_sound                   00B8 GR
  0 _init_background                   0745 GR
  0 _init_sound                        0000 GR
    _joypad                            **** GX
  1 _lazer_map                         01B1 GR
  1 _level                             01B0 GR
  1 _level_objects                     0000 GR
  0 _main                              10FA GR
  0 _move_cursor_sound                 0013 GR
    _move_sprite                       **** GX
    _printf                            **** GX
  0 _project_lazer                     068F GR
  0 _random_music                      00D7 GR
  0 _row_col_to_cel                    01AB GR
  1 _selected                          01FD GR
    _set_bkg_tiles                     **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
    _show_defeat                       **** GX
    _show_level                        **** GX
    _show_title                        **** GX
    _show_victory                      **** GX
  0 _update_background                 0843 GR
  0 _victory_sound                     004B GR
    _wait_vbl_done                     **** GX
    _waitpad                           **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 127E   flags 0
   1 _DATA                              size  1FF   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    5   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
