                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Sun Feb 17 18:32:14 2019
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc317200
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _cursor_init
                             13 	.globl _cursor_reset
                             14 	.globl _cursor_update
                             15 	.globl _cursor_move
                             16 	.globl _cursor_toggle
                             17 	.globl _check_transition
                             18 	.globl _update_background
                             19 	.globl _init_background
                             20 	.globl _project_lazer
                             21 	.globl _determine_lazer_path
                             22 	.globl _determine_next_direction
                             23 	.globl _determine_next_lazer_stat
                             24 	.globl _row_col_to_cel
                             25 	.globl _game_over_sound
                             26 	.globl _victory_sound
                             27 	.globl _title_sound
                             28 	.globl _explosion_sound
                             29 	.globl _move_cursor_sound
                             30 	.globl _update_music
                             31 	.globl _play_gameplay_music
                             32 	.globl _setNote
                             33 	.globl _init_sound
                             34 	.globl _counter
                             35 	.globl _selected
                             36 	.globl _cursor
                             37 	.globl _lazer_map
                             38 	.globl _defeat
                             39 	.globl _level
                             40 	.globl _current_level
                             41 	.globl _level_objects
                             42 	.globl _currentBeat
                             43 	.globl _timerCounter
                             44 	.globl _game_ch2
                             45 	.globl _game_ch1
                             46 	.globl _frequencies
                             47 	.globl _display_title
                             48 	.globl _display_level
                             49 	.globl _display_victory
                             50 	.globl _display_defeat
                             51 ;--------------------------------------------------------
                             52 ; special function registers
                             53 ;--------------------------------------------------------
                             54 ;--------------------------------------------------------
                             55 ; special function bits 
                             56 ;--------------------------------------------------------
                             57 ;--------------------------------------------------------
                             58 ; internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area _DATA
   0000                      61 _timerCounter::
   0000                      62 	.ds 1
   0001                      63 _currentBeat::
   0001                      64 	.ds 1
   0002                      65 _level_objects::
   0002                      66 	.ds 72
   004A                      67 _current_level::
   004A                      68 	.ds 360
   01B2                      69 _level::
   01B2                      70 	.ds 1
   01B3                      71 _defeat::
   01B3                      72 	.ds 1
   01B4                      73 _lazer_map::
   01B4                      74 	.ds 72
   01FC                      75 _cursor::
   01FC                      76 	.ds 4
   0200                      77 _selected::
   0200                      78 	.ds 1
   0201                      79 _counter::
   0201                      80 	.ds 1
                             81 ;--------------------------------------------------------
                             82 ; overlayable items in internal ram 
                             83 ;--------------------------------------------------------
                             84 	.area _OVERLAY
                             85 ;--------------------------------------------------------
                             86 ; indirectly addressable internal ram data
                             87 ;--------------------------------------------------------
                             88 	.area _ISEG
                             89 ;--------------------------------------------------------
                             90 ; bit data
                             91 ;--------------------------------------------------------
                             92 	.area _BSEG
                             93 ;--------------------------------------------------------
                             94 ; external ram data
                             95 ;--------------------------------------------------------
                             96 	.area _XSEG
                             97 ;--------------------------------------------------------
                             98 ; global & static initialisations
                             99 ;--------------------------------------------------------
                            100 	.area _GSINIT
                            101 	.area _GSFINAL
                            102 	.area _GSINIT
                            103 ;	LazerMaze.c 8
                            104 ;	genAssign
                            105 ;	AOP_HL for _level
   0000 21 B2 01            106 	ld	hl,#_level
   0003 36 00               107 	ld	(hl),#0x00
                            108 ;--------------------------------------------------------
                            109 ; Home
                            110 ;--------------------------------------------------------
                            111 	.area _HOME
                            112 	.area _CODE
                            113 ;--------------------------------------------------------
                            114 ; code
                            115 ;--------------------------------------------------------
                            116 	.area _CODE
                            117 ;	sounds.c 6
                            118 ;	genLabel
                            119 ;	genFunction
                            120 ;	---------------------------------
                            121 ; Function init_sound
                            122 ; ---------------------------------
   0000                     123 ___init_sound_start:
   0000                     124 _init_sound:
                            125 	
                            126 ;	sounds.c 7
                            127 ;	genAssign
   0000 01 26 FF            128 	ld	bc,#0xFF26
                            129 ;	genAssign (pointer)
   0003 3E 80               130 	ld	a,#0x80
   0005 02                  131 	ld	(bc),a
                            132 ;	sounds.c 8
                            133 ;	genAssign
   0006 01 25 FF            134 	ld	bc,#0xFF25
                            135 ;	genAssign (pointer)
   0009 3E FF               136 	ld	a,#0xFF
   000B 02                  137 	ld	(bc),a
                            138 ;	sounds.c 9
                            139 ;	genAssign
   000C 01 24 FF            140 	ld	bc,#0xFF24
                            141 ;	genAssign (pointer)
   000F 3E 77               142 	ld	a,#0x77
   0011 02                  143 	ld	(bc),a
                            144 ;	sounds.c 10
                            145 ;	genAssign
                            146 ;	AOP_HL for _timerCounter
   0012 21 00 00            147 	ld	hl,#_timerCounter
   0015 36 00               148 	ld	(hl),#0x00
                            149 ;	sounds.c 11
                            150 ;	genAssign
                            151 ;	AOP_HL for _currentBeat
   0017 21 01 00            152 	ld	hl,#_currentBeat
   001A 36 00               153 	ld	(hl),#0x00
                            154 ;	genLabel
   001C                     155 00101$:
                            156 ;	genEndFunction
                            157 	
   001C C9                  158 	ret
   001D                     159 ___init_sound_end:
   001D                     160 _frequencies:
   001D 2C 00               161 	.dw #0x002C
   001F 9C 00               162 	.dw #0x009C
   0021 06 01               163 	.dw #0x0106
   0023 6B 01               164 	.dw #0x016B
   0025 C9 01               165 	.dw #0x01C9
   0027 23 02               166 	.dw #0x0223
   0029 77 02               167 	.dw #0x0277
   002B C6 02               168 	.dw #0x02C6
   002D 12 03               169 	.dw #0x0312
   002F 56 03               170 	.dw #0x0356
   0031 9B 03               171 	.dw #0x039B
   0033 DA 03               172 	.dw #0x03DA
   0035 16 04               173 	.dw #0x0416
   0037 4E 04               174 	.dw #0x044E
   0039 83 04               175 	.dw #0x0483
   003B B5 04               176 	.dw #0x04B5
   003D E5 04               177 	.dw #0x04E5
   003F 11 05               178 	.dw #0x0511
   0041 3B 05               179 	.dw #0x053B
   0043 63 05               180 	.dw #0x0563
   0045 89 05               181 	.dw #0x0589
   0047 AC 05               182 	.dw #0x05AC
   0049 CE 05               183 	.dw #0x05CE
   004B ED 05               184 	.dw #0x05ED
   004D 0A 06               185 	.dw #0x060A
   004F 27 06               186 	.dw #0x0627
   0051 42 06               187 	.dw #0x0642
   0053 5B 06               188 	.dw #0x065B
   0055 72 06               189 	.dw #0x0672
   0057 89 06               190 	.dw #0x0689
   0059 9E 06               191 	.dw #0x069E
   005B B2 06               192 	.dw #0x06B2
   005D C4 06               193 	.dw #0x06C4
   005F D6 06               194 	.dw #0x06D6
   0061 E7 06               195 	.dw #0x06E7
   0063 F7 06               196 	.dw #0x06F7
   0065 06 07               197 	.dw #0x0706
   0067 14 07               198 	.dw #0x0714
   0069 21 07               199 	.dw #0x0721
   006B 2D 07               200 	.dw #0x072D
   006D 39 07               201 	.dw #0x0739
   006F 44 07               202 	.dw #0x0744
   0071 4F 07               203 	.dw #0x074F
   0073 59 07               204 	.dw #0x0759
   0075 62 07               205 	.dw #0x0762
   0077 6B 07               206 	.dw #0x076B
   0079 73 07               207 	.dw #0x0773
   007B 7B 07               208 	.dw #0x077B
   007D 83 07               209 	.dw #0x0783
   007F 8A 07               210 	.dw #0x078A
   0081 90 07               211 	.dw #0x0790
   0083 97 07               212 	.dw #0x0797
   0085 9D 07               213 	.dw #0x079D
   0087 A2 07               214 	.dw #0x07A2
   0089 A7 07               215 	.dw #0x07A7
   008B AC 07               216 	.dw #0x07AC
   008D B1 07               217 	.dw #0x07B1
   008F B6 07               218 	.dw #0x07B6
   0091 BA 07               219 	.dw #0x07BA
   0093 BE 07               220 	.dw #0x07BE
   0095 C1 07               221 	.dw #0x07C1
   0097 C4 07               222 	.dw #0x07C4
   0099 C8 07               223 	.dw #0x07C8
   009B CB 07               224 	.dw #0x07CB
   009D CE 07               225 	.dw #0x07CE
   009F D1 07               226 	.dw #0x07D1
   00A1 D4 07               227 	.dw #0x07D4
   00A3 D6 07               228 	.dw #0x07D6
   00A5 D9 07               229 	.dw #0x07D9
   00A7 DB 07               230 	.dw #0x07DB
   00A9 DD 07               231 	.dw #0x07DD
   00AB DF 07               232 	.dw #0x07DF
   00AD 00 00               233 	.dw #0x0000
   00AF                     234 _game_ch1:
   00AF 01                  235 	.db #0x01
   00B0 04                  236 	.db #0x04
   00B1 81 00               237 	.dw #0x0081
   00B3 00                  238 	.db #0x00
   00B4 48                  239 	.db #0x48
   00B5 84 00               240 	.dw #0x0084
   00B7 01                  241 	.db #0x01
   00B8 04                  242 	.db #0x04
   00B9 81 00               243 	.dw #0x0081
   00BB 00                  244 	.db #0x00
   00BC 48                  245 	.db #0x48
   00BD 84 00               246 	.dw #0x0084
   00BF 01                  247 	.db #0x01
   00C0 05                  248 	.db #0x05
   00C1 81 00               249 	.dw #0x0081
   00C3 00                  250 	.db #0x00
   00C4 48                  251 	.db #0x48
   00C5 84 00               252 	.dw #0x0084
   00C7 01                  253 	.db #0x01
   00C8 07                  254 	.db #0x07
   00C9 81 00               255 	.dw #0x0081
   00CB 00                  256 	.db #0x00
   00CC 48                  257 	.db #0x48
   00CD 84 00               258 	.dw #0x0084
   00CF 01                  259 	.db #0x01
   00D0 05                  260 	.db #0x05
   00D1 81 00               261 	.dw #0x0081
   00D3 00                  262 	.db #0x00
   00D4 48                  263 	.db #0x48
   00D5 84 00               264 	.dw #0x0084
   00D7 01                  265 	.db #0x01
   00D8 04                  266 	.db #0x04
   00D9 81 00               267 	.dw #0x0081
   00DB 00                  268 	.db #0x00
   00DC 48                  269 	.db #0x48
   00DD 84 00               270 	.dw #0x0084
   00DF 01                  271 	.db #0x01
   00E0 02                  272 	.db #0x02
   00E1 81 00               273 	.dw #0x0081
   00E3 00                  274 	.db #0x00
   00E4 48                  275 	.db #0x48
   00E5 84 00               276 	.dw #0x0084
   00E7 01                  277 	.db #0x01
   00E8 00                  278 	.db #0x00
   00E9 81 00               279 	.dw #0x0081
   00EB 00                  280 	.db #0x00
   00EC 48                  281 	.db #0x48
   00ED 84 00               282 	.dw #0x0084
   00EF 01                  283 	.db #0x01
   00F0 00                  284 	.db #0x00
   00F1 81 00               285 	.dw #0x0081
   00F3 00                  286 	.db #0x00
   00F4 48                  287 	.db #0x48
   00F5 84 00               288 	.dw #0x0084
   00F7 01                  289 	.db #0x01
   00F8 02                  290 	.db #0x02
   00F9 81 00               291 	.dw #0x0081
   00FB 00                  292 	.db #0x00
   00FC 48                  293 	.db #0x48
   00FD 84 00               294 	.dw #0x0084
   00FF 01                  295 	.db #0x01
   0100 04                  296 	.db #0x04
   0101 81 00               297 	.dw #0x0081
   0103 00                  298 	.db #0x00
   0104 48                  299 	.db #0x48
   0105 84 00               300 	.dw #0x0084
   0107 01                  301 	.db #0x01
   0108 02                  302 	.db #0x02
   0109 81 00               303 	.dw #0x0081
   010B 00                  304 	.db #0x00
   010C 48                  305 	.db #0x48
   010D 84 00               306 	.dw #0x0084
   010F 01                  307 	.db #0x01
   0110 00                  308 	.db #0x00
   0111 81 00               309 	.dw #0x0081
   0113 00                  310 	.db #0x00
   0114 48                  311 	.db #0x48
   0115 84 00               312 	.dw #0x0084
   0117 01                  313 	.db #0x01
   0118 00                  314 	.db #0x00
   0119 84 00               315 	.dw #0x0084
   011B 00                  316 	.db #0x00
   011C 48                  317 	.db #0x48
   011D 84 00               318 	.dw #0x0084
   011F 00                  319 	.db #0x00
   0120 48                  320 	.db #0x48
   0121 81 00               321 	.dw #0x0081
   0123 00                  322 	.db #0x00
   0124 48                  323 	.db #0x48
   0125 84 00               324 	.dw #0x0084
   0127 00                  325 	.db #0x00
   0128 48                  326 	.db #0x48
   0129 81 00               327 	.dw #0x0081
   012B 00                  328 	.db #0x00
   012C 48                  329 	.db #0x48
   012D 81 00               330 	.dw #0x0081
   012F                     331 _game_ch2:
   012F 05                  332 	.db #0x05
   0130 07                  333 	.db #0x07
   0131 81 00               334 	.dw #0x0081
   0133 00                  335 	.db #0x00
   0134 48                  336 	.db #0x48
   0135 87 00               337 	.dw #0x0087
   0137 00                  338 	.db #0x00
   0138 48                  339 	.db #0x48
   0139 87 00               340 	.dw #0x0087
   013B 00                  341 	.db #0x00
   013C 48                  342 	.db #0x48
   013D 87 00               343 	.dw #0x0087
   013F 04                  344 	.db #0x04
   0140 02                  345 	.db #0x02
   0141 81 00               346 	.dw #0x0081
   0143 00                  347 	.db #0x00
   0144 48                  348 	.db #0x48
   0145 87 00               349 	.dw #0x0087
   0147 00                  350 	.db #0x00
   0148 48                  351 	.db #0x48
   0149 87 00               352 	.dw #0x0087
   014B 00                  353 	.db #0x00
   014C 48                  354 	.db #0x48
   014D 87 00               355 	.dw #0x0087
   014F 05                  356 	.db #0x05
   0150 07                  357 	.db #0x07
   0151 81 00               358 	.dw #0x0081
   0153 00                  359 	.db #0x00
   0154 48                  360 	.db #0x48
   0155 87 00               361 	.dw #0x0087
   0157 00                  362 	.db #0x00
   0158 48                  363 	.db #0x48
   0159 87 00               364 	.dw #0x0087
   015B 00                  365 	.db #0x00
   015C 48                  366 	.db #0x48
   015D 87 00               367 	.dw #0x0087
   015F 04                  368 	.db #0x04
   0160 02                  369 	.db #0x02
   0161 81 00               370 	.dw #0x0081
   0163 00                  371 	.db #0x00
   0164 48                  372 	.db #0x48
   0165 87 00               373 	.dw #0x0087
   0167 00                  374 	.db #0x00
   0168 48                  375 	.db #0x48
   0169 87 00               376 	.dw #0x0087
   016B 00                  377 	.db #0x00
   016C 48                  378 	.db #0x48
   016D 87 00               379 	.dw #0x0087
   016F 05                  380 	.db #0x05
   0170 07                  381 	.db #0x07
   0171 81 00               382 	.dw #0x0081
   0173 00                  383 	.db #0x00
   0174 48                  384 	.db #0x48
   0175 87 00               385 	.dw #0x0087
   0177 00                  386 	.db #0x00
   0178 48                  387 	.db #0x48
   0179 87 00               388 	.dw #0x0087
   017B 00                  389 	.db #0x00
   017C 48                  390 	.db #0x48
   017D 87 00               391 	.dw #0x0087
   017F 04                  392 	.db #0x04
   0180 02                  393 	.db #0x02
   0181 81 00               394 	.dw #0x0081
   0183 00                  395 	.db #0x00
   0184 48                  396 	.db #0x48
   0185 87 00               397 	.dw #0x0087
   0187 00                  398 	.db #0x00
   0188 48                  399 	.db #0x48
   0189 87 00               400 	.dw #0x0087
   018B 00                  401 	.db #0x00
   018C 48                  402 	.db #0x48
   018D 87 00               403 	.dw #0x0087
   018F 04                  404 	.db #0x04
   0190 07                  405 	.db #0x07
   0191 81 00               406 	.dw #0x0081
   0193 00                  407 	.db #0x00
   0194 48                  408 	.db #0x48
   0195 87 00               409 	.dw #0x0087
   0197 00                  410 	.db #0x00
   0198 48                  411 	.db #0x48
   0199 87 00               412 	.dw #0x0087
   019B 00                  413 	.db #0x00
   019C 48                  414 	.db #0x48
   019D 87 00               415 	.dw #0x0087
   019F 05                  416 	.db #0x05
   01A0 07                  417 	.db #0x07
   01A1 81 00               418 	.dw #0x0081
   01A3 05                  419 	.db #0x05
   01A4 07                  420 	.db #0x07
   01A5 81 00               421 	.dw #0x0081
   01A7 00                  422 	.db #0x00
   01A8 48                  423 	.db #0x48
   01A9 87 00               424 	.dw #0x0087
   01AB 00                  425 	.db #0x00
   01AC 48                  426 	.db #0x48
   01AD 87 00               427 	.dw #0x0087
                            428 ;	sounds.c 14
                            429 ;	genLabel
                            430 ;	genFunction
                            431 ;	---------------------------------
                            432 ; Function setNote
                            433 ; ---------------------------------
   01AF                     434 ___setNote_start:
   01AF                     435 _setNote:
   01AF E8 F8               436 	lda	sp,-8(sp)
                            437 ;	sounds.c 15
                            438 ;	genAssign
                            439 ;	AOP_STK for 
   01B1 F8 0A               440 	lda	hl,10(sp)
   01B3 4E                  441 	ld	c,(hl)
   01B4 23                  442 	inc	hl
   01B5 46                  443 	ld	b,(hl)
                            444 ;	genPointerGet
                            445 ;	AOP_STK for _setNote_sloc0_1_0
   01B6 0A                  446 	ld	a,(bc)
   01B7 F8 07               447 	lda	hl,7(sp)
                            448 ;	genCmpLt
                            449 ;	AOP_STK for _setNote_sloc0_1_0
   01B9 77                  450 	ld      (hl),a
                            451 ; Removed redundent load
   01BA FE 01               452 	cp	#0x01
   01BC DA 0C 03            453 	jp	c,00107$
                            454 ;	genCmpGt
                            455 ;	AOP_STK for _setNote_sloc0_1_0
   01BF 3E 05               456 	ld	a,#0x05
   01C1 96                  457 	sub	a,(hl)
   01C2 DA 0C 03            458 	jp	c,00107$
                            459 ;	genMinus
                            460 ;	AOP_STK for _setNote_sloc0_1_0
                            461 ;	AOP_STK for _setNote_sloc1_1_0
   01C5 7E                  462 	ld	a,(hl)
   01C6 C6 FF               463 	add	a,#0xFF
   01C8 2B                  464 	dec	hl
                            465 ;	genJumpTab
                            466 ;	AOP_STK for _setNote_sloc1_1_0
   01C9 77                  467 	ld      (hl),a
   01CA 5F                  468 	ld      e,a
   01CB 16 00               469 	ld	d,#0x00
   01CD 21 D4 01            470 	ld	hl,#00111$
   01D0 19                  471 	add	hl,de
   01D1 19                  472 	add	hl,de
   01D2 19                  473 	add	hl,de
   01D3 E9                  474 	jp	(hl)
   01D4                     475 00111$:
   01D4 C3 E3 01            476 	jp	00101$
   01D7 C3 75 02            477 	jp	00102$
   01DA C3 DA 02            478 	jp	00103$
   01DD C3 DD 02            479 	jp	00104$
   01E0 C3 E0 02            480 	jp	00105$
                            481 ;	sounds.c 17
                            482 ;	genLabel
   01E3                     483 00101$:
                            484 ;	genAssign
                            485 ;	AOP_STK for _setNote_sloc2_1_0
   01E3 F8 04               486 	lda	hl,4(sp)
   01E5 36 16               487 	ld	(hl),#0x16
   01E7 23                  488 	inc	hl
   01E8 36 FF               489 	ld	(hl),#0xFF
                            490 ;	genAssign (pointer)
                            491 ;	AOP_STK for _setNote_sloc2_1_0
   01EA 2B                  492 	dec	hl
   01EB 5E                  493 	ld	e,(hl)
   01EC 23                  494 	inc	hl
   01ED 56                  495 	ld	d,(hl)
   01EE 3E C6               496 	ld	a,#0xC6
   01F0 12                  497 	ld	(de),a
                            498 ;	sounds.c 18
                            499 ;	genAssign
                            500 ;	AOP_STK for _setNote_sloc2_1_0
   01F1 2B                  501 	dec	hl
   01F2 36 17               502 	ld	(hl),#0x17
   01F4 23                  503 	inc	hl
   01F5 36 FF               504 	ld	(hl),#0xFF
                            505 ;	genPlus
                            506 ;	AOP_STK for _setNote_sloc3_1_0
                            507 ;	genPlusIncr
                            508 ;	Can't optimise plus by inc, falling back to the normal way
   01F7 21 02 00            509 	ld	hl,#0x0002
   01FA 09                  510 	add	hl,bc
   01FB 7D                  511 	ld	a,l
   01FC 54                  512 	ld	d,h
   01FD F8 02               513 	lda	hl,2(sp)
                            514 ;	genPointerGet
                            515 ;	AOP_STK for _setNote_sloc3_1_0
                            516 ;	AOP_STK for _setNote_sloc4_1_0
   01FF 22                  517 	ld	(hl+),a
   0200 72                  518 	ld	(hl),d
   0201 5F                  519 	ld	e,a
   0202 1A                  520 	ld	a,(de)
   0203 F8 00               521 	lda	hl,0(sp)
   0205 77                  522 	ld	(hl),a
   0206 13                  523 	inc	de
   0207 1A                  524 	ld	a,(de)
   0208 23                  525 	inc	hl
                            526 ;	genCast
                            527 ;	AOP_STK for _setNote_sloc4_1_0
   0209 32                  528 	ld      (hl-),a
   020A 7E                  529 	ld	a,(hl)
                            530 ;	genAssign (pointer)
                            531 ;	AOP_STK for _setNote_sloc2_1_0
   020B F8 04               532 	lda	hl,4(sp)
   020D 5E                  533 	ld	e,(hl)
   020E 23                  534 	inc	hl
   020F 56                  535 	ld	d,(hl)
   0210 12                  536 	ld	(de),a
                            537 ;	sounds.c 19
                            538 ;	genAssign
                            539 ;	AOP_STK for _setNote_sloc4_1_0
   0211 F8 00               540 	lda	hl,0(sp)
   0213 36 18               541 	ld	(hl),#0x18
   0215 23                  542 	inc	hl
   0216 36 FF               543 	ld	(hl),#0xFF
                            544 ;	genPlus
                            545 ;	AOP_STK for _setNote_sloc3_1_0
                            546 ;	genPlusIncr
                            547 ;	Can't optimise plus by inc, falling back to the normal way
   0218 21 01 00            548 	ld	hl,#0x0001
   021B 09                  549 	add	hl,bc
   021C 7D                  550 	ld	a,l
   021D 54                  551 	ld	d,h
   021E F8 02               552 	lda	hl,2(sp)
                            553 ;	genPointerGet
                            554 ;	AOP_STK for _setNote_sloc3_1_0
                            555 ;	AOP_STK for _setNote_sloc2_1_0
   0220 22                  556 	ld	(hl+),a
   0221 72                  557 	ld	(hl),d
   0222 5F                  558 	ld	e,a
   0223 1A                  559 	ld	a,(de)
   0224 23                  560 	inc	hl
                            561 ;	genCast
                            562 ;	AOP_STK for _setNote_sloc2_1_0
                            563 ;	AOP_STK for _setNote_sloc3_1_0
                            564 ; Removed redundent load
   0225 32                  565 	ld      (hl-),a
   0226 2B                  566 	dec	hl
   0227 22                  567 	ld	(hl+),a
   0228 36 00               568 	ld	(hl),#0x00
                            569 ;	genLeftShift
                            570 ;	AOP_STK for _setNote_sloc3_1_0
                            571 ;	AOP_STK for _setNote_sloc2_1_0
   022A 2B                  572 	dec	hl
   022B 2A                  573 	ld	a,(hl+)
   022C 23                  574 	inc	hl
   022D 32                  575 	ld      (hl-),a
   022E 2A                  576 	ld	a,(hl+)
   022F 23                  577 	inc	hl
   0230 32                  578 	ld      (hl-),a
   0231 CB 26               579 	sla	(hl)
   0233 23                  580 	inc	hl
   0234 CB 16               581 	rl	(hl)
                            582 ;	genPlus
                            583 ;	AOP_STK for _setNote_sloc2_1_0
                            584 ;	AOP_STK for _setNote_sloc3_1_0
                            585 ;	Can't optimise plus by inc, falling back to the normal way
   0236 11 1D 00            586 	ld	de,#_frequencies
   0239 2B                  587 	dec	hl
   023A 2A                  588 	ld	a,(hl+)
   023B 66                  589 	ld	h,(hl)
   023C 6F                  590 	ld	l,a
   023D 19                  591 	add	hl,de
   023E 7D                  592 	ld	a,l
   023F 54                  593 	ld	d,h
   0240 F8 02               594 	lda	hl,2(sp)
                            595 ;	genPointerGet
                            596 ;	AOP_STK for _setNote_sloc3_1_0
                            597 ;	AOP_STK for _setNote_sloc2_1_0
   0242 22                  598 	ld	(hl+),a
   0243 72                  599 	ld	(hl),d
   0244 5F                  600 	ld	e,a
   0245 1A                  601 	ld	a,(de)
   0246 23                  602 	inc	hl
   0247 77                  603 	ld	(hl),a
   0248 13                  604 	inc	de
   0249 1A                  605 	ld	a,(de)
   024A 23                  606 	inc	hl
                            607 ;	genCast
                            608 ;	AOP_STK for _setNote_sloc2_1_0
   024B 32                  609 	ld      (hl-),a
   024C 7E                  610 	ld	a,(hl)
                            611 ;	genAssign (pointer)
                            612 ;	AOP_STK for _setNote_sloc4_1_0
   024D F8 00               613 	lda	hl,0(sp)
   024F 5E                  614 	ld	e,(hl)
   0250 23                  615 	inc	hl
   0251 56                  616 	ld	d,(hl)
   0252 12                  617 	ld	(de),a
                            618 ;	sounds.c 20
                            619 ;	genAssign
                            620 ;	AOP_STK for _setNote_sloc4_1_0
   0253 2B                  621 	dec	hl
   0254 36 19               622 	ld	(hl),#0x19
   0256 23                  623 	inc	hl
   0257 36 FF               624 	ld	(hl),#0xFF
                            625 ;	genRightShift
                            626 ;	AOP_STK for _setNote_sloc2_1_0
                            627 ;	AOP_STK for _setNote_sloc3_1_0
   0259 F8 05               628 	lda	hl,5(sp)
   025B 7E                  629 	ld	a,(hl)
   025C F8 02               630 	lda	hl,2(sp)
   025E 22                  631 	ld	(hl+),a
   025F 36 00               632 	ld	(hl),#0x00
                            633 ;	genOr
                            634 ;	AOP_STK for _setNote_sloc3_1_0
                            635 ;	AOP_STK for _setNote_sloc2_1_0
   0261 2B                  636 	dec	hl
   0262 7E                  637 	ld	a,(hl)
   0263 F6 80               638 	or	a,#0x80
   0265 23                  639 	inc	hl
   0266 23                  640 	inc	hl
   0267 32                  641 	ld      (hl-),a
   0268 2A                  642 	ld	a,(hl+)
   0269 23                  643 	inc	hl
                            644 ;	genCast
                            645 ;	AOP_STK for _setNote_sloc2_1_0
   026A 32                  646 	ld      (hl-),a
   026B 7E                  647 	ld	a,(hl)
                            648 ;	genAssign (pointer)
                            649 ;	AOP_STK for _setNote_sloc4_1_0
   026C F8 00               650 	lda	hl,0(sp)
   026E 5E                  651 	ld	e,(hl)
   026F 23                  652 	inc	hl
   0270 56                  653 	ld	d,(hl)
   0271 12                  654 	ld	(de),a
                            655 ;	sounds.c 21
                            656 ;	genGoto
   0272 C3 0C 03            657 	jp	00107$
                            658 ;	sounds.c 23
                            659 ;	genLabel
   0275                     660 00102$:
                            661 ;	genAssign
                            662 ;	AOP_STK for _setNote_sloc4_1_0
   0275 F8 00               663 	lda	hl,0(sp)
   0277 36 16               664 	ld	(hl),#0x16
   0279 23                  665 	inc	hl
   027A 36 FF               666 	ld	(hl),#0xFF
                            667 ;	genAssign (pointer)
                            668 ;	AOP_STK for _setNote_sloc4_1_0
   027C 2B                  669 	dec	hl
   027D 5E                  670 	ld	e,(hl)
   027E 23                  671 	inc	hl
   027F 56                  672 	ld	d,(hl)
   0280 3E C0               673 	ld	a,#0xC0
   0282 12                  674 	ld	(de),a
                            675 ;	sounds.c 24
                            676 ;	genAssign
                            677 ;	AOP_STK for _setNote_sloc4_1_0
   0283 2B                  678 	dec	hl
   0284 36 17               679 	ld	(hl),#0x17
   0286 23                  680 	inc	hl
   0287 36 FF               681 	ld	(hl),#0xFF
                            682 ;	genPlus
                            683 ;	AOP_STK for _setNote_sloc3_1_0
                            684 ;	genPlusIncr
                            685 ;	Can't optimise plus by inc, falling back to the normal way
   0289 21 02 00            686 	ld	hl,#0x0002
   028C 09                  687 	add	hl,bc
   028D 7D                  688 	ld	a,l
   028E 54                  689 	ld	d,h
   028F F8 02               690 	lda	hl,2(sp)
                            691 ;	genPointerGet
                            692 ;	AOP_STK for _setNote_sloc3_1_0
                            693 ;	AOP_STK for _setNote_sloc2_1_0
   0291 22                  694 	ld	(hl+),a
   0292 72                  695 	ld	(hl),d
   0293 5F                  696 	ld	e,a
   0294 1A                  697 	ld	a,(de)
   0295 23                  698 	inc	hl
   0296 77                  699 	ld	(hl),a
   0297 13                  700 	inc	de
   0298 1A                  701 	ld	a,(de)
   0299 23                  702 	inc	hl
                            703 ;	genCast
                            704 ;	AOP_STK for _setNote_sloc2_1_0
   029A 32                  705 	ld      (hl-),a
   029B 7E                  706 	ld	a,(hl)
                            707 ;	genAssign (pointer)
                            708 ;	AOP_STK for _setNote_sloc4_1_0
   029C F8 00               709 	lda	hl,0(sp)
   029E 5E                  710 	ld	e,(hl)
   029F 23                  711 	inc	hl
   02A0 56                  712 	ld	d,(hl)
   02A1 12                  713 	ld	(de),a
                            714 ;	sounds.c 25
                            715 ;	genAssign
                            716 ;	AOP_STK for _setNote_sloc4_1_0
   02A2 2B                  717 	dec	hl
   02A3 36 18               718 	ld	(hl),#0x18
   02A5 23                  719 	inc	hl
   02A6 36 FF               720 	ld	(hl),#0xFF
                            721 ;	genPlus
                            722 ;	genPlusIncr
   02A8 03                  723 	inc	bc
                            724 ;	genPointerGet
   02A9 0A                  725 	ld	a,(bc)
   02AA 4F                  726 	ld	c,a
                            727 ;	genCast
                            728 ; Removed redundent load
   02AB 06 00               729 	ld	b,#0x00
                            730 ;	genLeftShift
   02AD CB 21               731 	sla	c
   02AF CB 10               732 	rl	b
                            733 ;	genPlus
                            734 ;	Can't optimise plus by inc, falling back to the normal way
   02B1 21 1D 00            735 	ld	hl,#_frequencies
   02B4 09                  736 	add	hl,bc
   02B5 4D                  737 	ld	c,l
   02B6 44                  738 	ld	b,h
                            739 ;	genPointerGet
   02B7 59                  740 	ld	e,c
   02B8 50                  741 	ld	d,b
   02B9 1A                  742 	ld	a,(de)
   02BA 4F                  743 	ld	c,a
   02BB 13                  744 	inc	de
   02BC 1A                  745 	ld	a,(de)
   02BD 47                  746 	ld	b,a
                            747 ;	genCast
   02BE 79                  748 	ld	a,c
                            749 ;	genAssign (pointer)
                            750 ;	AOP_STK for _setNote_sloc4_1_0
   02BF F8 00               751 	lda	hl,0(sp)
   02C1 5E                  752 	ld	e,(hl)
   02C2 23                  753 	inc	hl
   02C3 56                  754 	ld	d,(hl)
   02C4 12                  755 	ld	(de),a
                            756 ;	sounds.c 26
                            757 ;	genAssign
                            758 ;	AOP_STK for _setNote_sloc4_1_0
   02C5 2B                  759 	dec	hl
   02C6 36 19               760 	ld	(hl),#0x19
   02C8 23                  761 	inc	hl
   02C9 36 FF               762 	ld	(hl),#0xFF
                            763 ;	genRightShift
   02CB 48                  764 	ld	c,b
   02CC 06 00               765 	ld	b,#0x00
                            766 ;	genOr
   02CE 79                  767 	ld	a,c
   02CF F6 80               768 	or	a,#0x80
                            769 ;	genCast
   02D1 4F                  770 	ld	c,a
                            771 ;	genAssign (pointer)
                            772 ;	AOP_STK for _setNote_sloc4_1_0
   02D2 2B                  773 	dec	hl
   02D3 5E                  774 	ld	e,(hl)
   02D4 23                  775 	inc	hl
   02D5 56                  776 	ld	d,(hl)
   02D6 12                  777 	ld	(de),a
                            778 ;	sounds.c 27
                            779 ;	genGoto
   02D7 C3 0C 03            780 	jp	00107$
                            781 ;	sounds.c 30
                            782 ;	genLabel
   02DA                     783 00103$:
                            784 ;	genGoto
   02DA C3 0C 03            785 	jp	00107$
                            786 ;	sounds.c 33
                            787 ;	genLabel
   02DD                     788 00104$:
                            789 ;	genGoto
   02DD C3 0C 03            790 	jp	00107$
                            791 ;	sounds.c 35
                            792 ;	genLabel
   02E0                     793 00105$:
                            794 ;	genAssign
   02E0 01 20 FF            795 	ld	bc,#0xFF20
                            796 ;	genAssign (pointer)
   02E3 3E 1E               797 	ld	a,#0x1E
   02E5 02                  798 	ld	(bc),a
                            799 ;	sounds.c 36
                            800 ;	genAssign
   02E6 01 21 FF            801 	ld	bc,#0xFF21
                            802 ;	genAssign (pointer)
   02E9 3E 37               803 	ld	a,#0x37
   02EB 02                  804 	ld	(bc),a
                            805 ;	sounds.c 37
                            806 ;	genAssign
   02EC 01 22 FF            807 	ld	bc,#0xFF22
                            808 ;	genAssign (pointer)
   02EF 3E 32               809 	ld	a,#0x32
   02F1 02                  810 	ld	(bc),a
                            811 ;	sounds.c 38
                            812 ;	genAssign
   02F2 01 23 FF            813 	ld	bc,#0xFF23
                            814 ;	genAssign (pointer)
   02F5 3E C0               815 	ld	a,#0xC0
   02F7 02                  816 	ld	(bc),a
                            817 ;	sounds.c 39
                            818 ;	genAssign
   02F8 01 25 FF            819 	ld	bc,#0xFF25
                            820 ;	genAssign
                            821 ;	AOP_STK for _setNote_sloc4_1_0
   02FB F8 00               822 	lda	hl,0(sp)
   02FD 36 25               823 	ld	(hl),#0x25
   02FF 23                  824 	inc	hl
   0300 36 FF               825 	ld	(hl),#0xFF
                            826 ;	genPointerGet
                            827 ;	AOP_STK for _setNote_sloc4_1_0
                            828 ;	AOP_STK for _setNote_sloc3_1_0
   0302 2B                  829 	dec	hl
   0303 5E                  830 	ld	e,(hl)
   0304 23                  831 	inc	hl
   0305 56                  832 	ld	d,(hl)
   0306 1A                  833 	ld	a,(de)
   0307 23                  834 	inc	hl
                            835 ;	genOr
                            836 ;	AOP_STK for _setNote_sloc3_1_0
   0308 77                  837 	ld      (hl),a
                            838 ; Removed redundent load
   0309 F6 88               839 	or	a,#0x88
                            840 ;	genAssign (pointer)
   030B 02                  841 	ld	(bc),a
                            842 ;	sounds.c 41
                            843 ;	genLabel
   030C                     844 00107$:
                            845 ;	genEndFunction
   030C E8 08               846 	lda	sp,8(sp)
   030E C9                  847 	ret
   030F                     848 ___setNote_end:
                            849 ;	sounds.c 45
                            850 ;	genLabel
                            851 ;	genFunction
                            852 ;	---------------------------------
                            853 ; Function play_gameplay_music
                            854 ; ---------------------------------
   030F                     855 ___play_gameplay_music_start:
   030F                     856 _play_gameplay_music:
   030F E8 FE               857 	lda	sp,-2(sp)
                            858 ;	sounds.c 46
                            859 ;	genCast
                            860 ;	AOP_HL for _currentBeat
   0311 21 01 00            861 	ld	hl,#_currentBeat
   0314 4E                  862 	ld	c,(hl)
   0315 06 00               863 	ld	b,#0x00
                            864 ;	genLeftShift
   0317 3E 03               865 	ld	a,#0x02+1
   0319 18 04               866 	jr	00104$
   031B                     867 00103$:
   031B CB 21               868 	sla	c
   031D CB 10               869 	rl	b
   031F                     870 00104$:
   031F 3D                  871 	dec	a
   0320 20 F9               872 	jr	nz,00103$
                            873 ;	genPlus
                            874 ;	AOP_STK for _play_gameplay_music_sloc0_1_0
                            875 ;	Can't optimise plus by inc, falling back to the normal way
   0322 21 AF 00            876 	ld	hl,#_game_ch1
   0325 09                  877 	add	hl,bc
   0326 7D                  878 	ld	a,l
   0327 54                  879 	ld	d,h
   0328 F8 00               880 	lda	hl,0(sp)
   032A 22                  881 	ld	(hl+),a
   032B 72                  882 	ld	(hl),d
                            883 ;	genIpush
                            884 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   032C C5                  885 	push	bc
                            886 ;	AOP_STK for _play_gameplay_music_sloc0_1_0
   032D 2B                  887 	dec	hl
   032E 2A                  888 	ld	a,(hl+)
   032F 66                  889 	ld	h,(hl)
   0330 6F                  890 	ld	l,a
   0331 E5                  891 	push	hl
                            892 ;	genCall
   0332 CD AF 01            893 	call	_setNote
   0335 E8 02               894 	lda	sp,2(sp)
   0337 C1                  895 	pop	bc
                            896 ;	sounds.c 47
                            897 ;	genPlus
                            898 ;	Can't optimise plus by inc, falling back to the normal way
   0338 21 2F 01            899 	ld	hl,#_game_ch2
   033B 09                  900 	add	hl,bc
   033C 4D                  901 	ld	c,l
   033D 44                  902 	ld	b,h
                            903 ;	genIpush
                            904 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   033E C5                  905 	push	bc
                            906 ;	genCall
   033F CD AF 01            907 	call	_setNote
   0342 E8 02               908 	lda	sp,2(sp)
                            909 ;	genLabel
   0344                     910 00101$:
                            911 ;	genEndFunction
   0344 E8 02               912 	lda	sp,2(sp)
   0346 C9                  913 	ret
   0347                     914 ___play_gameplay_music_end:
                            915 ;	sounds.c 51
                            916 ;	genLabel
                            917 ;	genFunction
                            918 ;	---------------------------------
                            919 ; Function update_music
                            920 ; ---------------------------------
   0347                     921 ___update_music_start:
   0347                     922 _update_music:
                            923 	
                            924 ;	sounds.c 52
                            925 ;	genCmpLt
                            926 ;	AOP_HL for _timerCounter
   0347 21 00 00            927 	ld	hl,#_timerCounter
   034A 7E                  928 	ld	a,(hl)
   034B FE 07               929 	cp	#0x07
   034D DA 67 03            930 	jp	c,00105$
                            931 ;	sounds.c 53
                            932 ;	genAssign
                            933 ;	AOP_HL for _timerCounter
   0350 36 00               934 	ld	(hl),#0x00
                            935 ;	sounds.c 55
                            936 ;	genCmpLt
                            937 ;	AOP_HL for _currentBeat
   0352 21 01 00            938 	ld	hl,#_currentBeat
   0355 7E                  939 	ld	a,(hl)
   0356 FE 1F               940 	cp	#0x1F
   0358 D2 5F 03            941 	jp	nc,00102$
                            942 ;	sounds.c 57
                            943 ;	genPlus
                            944 ;	AOP_HL for _currentBeat
                            945 ;	genPlusIncr
   035B 34                  946 	inc	(hl)
                            947 ;	genGoto
   035C C3 64 03            948 	jp	00103$
                            949 ;	genLabel
   035F                     950 00102$:
                            951 ;	sounds.c 61
                            952 ;	genAssign
                            953 ;	AOP_HL for _currentBeat
   035F 21 01 00            954 	ld	hl,#_currentBeat
   0362 36 00               955 	ld	(hl),#0x00
                            956 ;	genLabel
   0364                     957 00103$:
                            958 ;	sounds.c 64
                            959 ;	genCall
                            960 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0364 CD 0F 03            961 	call	_play_gameplay_music
                            962 ;	genLabel
   0367                     963 00105$:
                            964 ;	sounds.c 67
                            965 ;	genPlus
                            966 ;	AOP_HL for _timerCounter
                            967 ;	genPlusIncr
   0367 21 00 00            968 	ld	hl,#_timerCounter
   036A 34                  969 	inc	(hl)
                            970 ;	genLabel
   036B                     971 00106$:
                            972 ;	genEndFunction
                            973 	
   036B C9                  974 	ret
   036C                     975 ___update_music_end:
                            976 ;	sounds.c 70
                            977 ;	genLabel
                            978 ;	genFunction
                            979 ;	---------------------------------
                            980 ; Function move_cursor_sound
                            981 ; ---------------------------------
   036C                     982 ___move_cursor_sound_start:
   036C                     983 _move_cursor_sound:
                            984 	
                            985 ;	sounds.c 71
                            986 ;	genAssign
   036C 01 10 FF            987 	ld	bc,#0xFF10
                            988 ;	genAssign (pointer)
   036F 3E 15               989 	ld	a,#0x15
   0371 02                  990 	ld	(bc),a
                            991 ;	sounds.c 72
                            992 ;	genAssign
   0372 01 11 FF            993 	ld	bc,#0xFF11
                            994 ;	genAssign (pointer)
   0375 3E 96               995 	ld	a,#0x96
   0377 02                  996 	ld	(bc),a
                            997 ;	sounds.c 73
                            998 ;	genAssign
   0378 01 12 FF            999 	ld	bc,#0xFF12
                           1000 ;	genAssign (pointer)
   037B 3E 73              1001 	ld	a,#0x73
   037D 02                 1002 	ld	(bc),a
                           1003 ;	sounds.c 74
                           1004 ;	genAssign
   037E 01 13 FF           1005 	ld	bc,#0xFF13
                           1006 ;	genAssign (pointer)
   0381 3E BB              1007 	ld	a,#0xBB
   0383 02                 1008 	ld	(bc),a
                           1009 ;	sounds.c 75
                           1010 ;	genAssign
   0384 01 14 FF           1011 	ld	bc,#0xFF14
                           1012 ;	genAssign (pointer)
   0387 3E 85              1013 	ld	a,#0x85
   0389 02                 1014 	ld	(bc),a
                           1015 ;	genLabel
   038A                    1016 00101$:
                           1017 ;	genEndFunction
                           1018 	
   038A C9                 1019 	ret
   038B                    1020 ___move_cursor_sound_end:
                           1021 ;	sounds.c 78
                           1022 ;	genLabel
                           1023 ;	genFunction
                           1024 ;	---------------------------------
                           1025 ; Function explosion_sound
                           1026 ; ---------------------------------
   038B                    1027 ___explosion_sound_start:
   038B                    1028 _explosion_sound:
                           1029 	
                           1030 ;	sounds.c 79
                           1031 ;	genAssign
   038B 01 20 FF           1032 	ld	bc,#0xFF20
                           1033 ;	genAssign (pointer)
   038E 3E 00              1034 	ld	a,#0x00
   0390 02                 1035 	ld	(bc),a
                           1036 ;	sounds.c 80
                           1037 ;	genAssign
   0391 01 21 FF           1038 	ld	bc,#0xFF21
                           1039 ;	genAssign (pointer)
   0394 3E B8              1040 	ld	a,#0xB8
   0396 02                 1041 	ld	(bc),a
                           1042 ;	sounds.c 81
                           1043 ;	genAssign
   0397 01 22 FF           1044 	ld	bc,#0xFF22
                           1045 ;	genAssign (pointer)
   039A 3E 7B              1046 	ld	a,#0x7B
   039C 02                 1047 	ld	(bc),a
                           1048 ;	sounds.c 82
                           1049 ;	genAssign
   039D 01 23 FF           1050 	ld	bc,#0xFF23
                           1051 ;	genAssign (pointer)
   03A0 3E C0              1052 	ld	a,#0xC0
   03A2 02                 1053 	ld	(bc),a
                           1054 ;	genLabel
   03A3                    1055 00101$:
                           1056 ;	genEndFunction
                           1057 	
   03A3 C9                 1058 	ret
   03A4                    1059 ___explosion_sound_end:
                           1060 ;	sounds.c 85
                           1061 ;	genLabel
                           1062 ;	genFunction
                           1063 ;	---------------------------------
                           1064 ; Function title_sound
                           1065 ; ---------------------------------
   03A4                    1066 ___title_sound_start:
   03A4                    1067 _title_sound:
                           1068 	
                           1069 ;	sounds.c 86
                           1070 ;	genIpush
                           1071 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03A4 21 AF 00           1072 	ld	hl,#_game_ch1
   03A7 E5                 1073 	push	hl
                           1074 ;	genCall
   03A8 CD AF 01           1075 	call	_setNote
   03AB E8 02              1076 	lda	sp,2(sp)
                           1077 ;	sounds.c 87
                           1078 ;	genPlus
                           1079 ;	genPlusIncr
   03AD 21 B3 00           1080 	ld	hl,#_game_ch1 + 4
                           1081 ;	genIpush
                           1082 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03B0 E5                 1083 	push	hl
                           1084 ;	genCall
   03B1 CD AF 01           1085 	call	_setNote
   03B4 E8 02              1086 	lda	sp,2(sp)
                           1087 ;	sounds.c 88
                           1088 ;	genIpush
                           1089 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03B6 21 96 00           1090 	ld	hl,#0x0096
   03B9 E5                 1091 	push	hl
                           1092 ;	genCall
   03BA CD 00 00           1093 	call	_delay
   03BD E8 02              1094 	lda	sp,2(sp)
                           1095 ;	sounds.c 89
                           1096 ;	genIpush
                           1097 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03BF 21 AF 00           1098 	ld	hl,#_game_ch1
   03C2 E5                 1099 	push	hl
                           1100 ;	genCall
   03C3 CD AF 01           1101 	call	_setNote
   03C6 E8 02              1102 	lda	sp,2(sp)
                           1103 ;	sounds.c 90
                           1104 ;	genPlus
                           1105 ;	genPlusIncr
   03C8 21 B3 00           1106 	ld	hl,#_game_ch1 + 4
                           1107 ;	genIpush
                           1108 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03CB E5                 1109 	push	hl
                           1110 ;	genCall
   03CC CD AF 01           1111 	call	_setNote
   03CF E8 02              1112 	lda	sp,2(sp)
                           1113 ;	sounds.c 91
                           1114 ;	genIpush
                           1115 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03D1 21 96 00           1116 	ld	hl,#0x0096
   03D4 E5                 1117 	push	hl
                           1118 ;	genCall
   03D5 CD 00 00           1119 	call	_delay
   03D8 E8 02              1120 	lda	sp,2(sp)
                           1121 ;	sounds.c 92
                           1122 ;	genIpush
                           1123 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03DA 21 AF 00           1124 	ld	hl,#_game_ch1
   03DD E5                 1125 	push	hl
                           1126 ;	genCall
   03DE CD AF 01           1127 	call	_setNote
   03E1 E8 02              1128 	lda	sp,2(sp)
                           1129 ;	sounds.c 93
                           1130 ;	genPlus
                           1131 ;	genPlusIncr
   03E3 21 B3 00           1132 	ld	hl,#_game_ch1 + 4
                           1133 ;	genIpush
                           1134 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03E6 E5                 1135 	push	hl
                           1136 ;	genCall
   03E7 CD AF 01           1137 	call	_setNote
   03EA E8 02              1138 	lda	sp,2(sp)
                           1139 ;	sounds.c 94
                           1140 ;	genIpush
                           1141 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03EC 21 96 00           1142 	ld	hl,#0x0096
   03EF E5                 1143 	push	hl
                           1144 ;	genCall
   03F0 CD 00 00           1145 	call	_delay
   03F3 E8 02              1146 	lda	sp,2(sp)
                           1147 ;	sounds.c 96
                           1148 ;	genAssign
   03F5 01 10 FF           1149 	ld	bc,#0xFF10
                           1150 ;	genAssign (pointer)
   03F8 3E 15              1151 	ld	a,#0x15
   03FA 02                 1152 	ld	(bc),a
                           1153 ;	sounds.c 97
                           1154 ;	genAssign
   03FB 01 11 FF           1155 	ld	bc,#0xFF11
                           1156 ;	genAssign (pointer)
   03FE 3E 96              1157 	ld	a,#0x96
   0400 02                 1158 	ld	(bc),a
                           1159 ;	sounds.c 98
                           1160 ;	genAssign
   0401 01 12 FF           1161 	ld	bc,#0xFF12
                           1162 ;	genAssign (pointer)
   0404 3E 73              1163 	ld	a,#0x73
   0406 02                 1164 	ld	(bc),a
                           1165 ;	sounds.c 99
                           1166 ;	genAssign
   0407 01 13 FF           1167 	ld	bc,#0xFF13
                           1168 ;	genAssign (pointer)
   040A 3E BB              1169 	ld	a,#0xBB
   040C 02                 1170 	ld	(bc),a
                           1171 ;	sounds.c 100
                           1172 ;	genAssign
   040D 01 14 FF           1173 	ld	bc,#0xFF14
                           1174 ;	genAssign (pointer)
   0410 3E 85              1175 	ld	a,#0x85
   0412 02                 1176 	ld	(bc),a
                           1177 ;	genLabel
   0413                    1178 00101$:
                           1179 ;	genEndFunction
                           1180 	
   0413 C9                 1181 	ret
   0414                    1182 ___title_sound_end:
                           1183 ;	sounds.c 103
                           1184 ;	genLabel
                           1185 ;	genFunction
                           1186 ;	---------------------------------
                           1187 ; Function victory_sound
                           1188 ; ---------------------------------
   0414                    1189 ___victory_sound_start:
   0414                    1190 _victory_sound:
                           1191 	
                           1192 ;	sounds.c 104
                           1193 ;	genAssign
   0414 01 10 FF           1194 	ld	bc,#0xFF10
                           1195 ;	genAssign (pointer)
   0417 3E 77              1196 	ld	a,#0x77
   0419 02                 1197 	ld	(bc),a
                           1198 ;	sounds.c 105
                           1199 ;	genAssign
   041A 01 11 FF           1200 	ld	bc,#0xFF11
                           1201 ;	genAssign (pointer)
   041D 3E 07              1202 	ld	a,#0x07
   041F 02                 1203 	ld	(bc),a
                           1204 ;	sounds.c 106
                           1205 ;	genAssign
   0420 01 12 FF           1206 	ld	bc,#0xFF12
                           1207 ;	genAssign (pointer)
   0423 3E F7              1208 	ld	a,#0xF7
   0425 02                 1209 	ld	(bc),a
                           1210 ;	sounds.c 107
                           1211 ;	genAssign
   0426 01 13 FF           1212 	ld	bc,#0xFF13
                           1213 ;	genAssign (pointer)
   0429 3E A4              1214 	ld	a,#0xA4
   042B 02                 1215 	ld	(bc),a
                           1216 ;	sounds.c 108
                           1217 ;	genAssign
   042C 01 14 FF           1218 	ld	bc,#0xFF14
                           1219 ;	genAssign (pointer)
   042F 3E 86              1220 	ld	a,#0x86
   0431 02                 1221 	ld	(bc),a
                           1222 ;	sounds.c 110
                           1223 ;	genIpush
                           1224 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0432 21 E2 04           1225 	ld	hl,#0x04E2
   0435 E5                 1226 	push	hl
                           1227 ;	genCall
   0436 CD 00 00           1228 	call	_delay
   0439 E8 02              1229 	lda	sp,2(sp)
                           1230 ;	sounds.c 112
                           1231 ;	genAssign
   043B 01 10 FF           1232 	ld	bc,#0xFF10
                           1233 ;	genAssign (pointer)
   043E 3E 53              1234 	ld	a,#0x53
   0440 02                 1235 	ld	(bc),a
                           1236 ;	sounds.c 113
                           1237 ;	genAssign
   0441 01 11 FF           1238 	ld	bc,#0xFF11
                           1239 ;	genAssign (pointer)
   0444 3E 00              1240 	ld	a,#0x00
   0446 02                 1241 	ld	(bc),a
                           1242 ;	sounds.c 114
                           1243 ;	genAssign
   0447 01 12 FF           1244 	ld	bc,#0xFF12
                           1245 ;	genAssign (pointer)
   044A 3E F7              1246 	ld	a,#0xF7
   044C 02                 1247 	ld	(bc),a
                           1248 ;	sounds.c 115
                           1249 ;	genAssign
   044D 01 13 FF           1250 	ld	bc,#0xFF13
                           1251 ;	genAssign (pointer)
   0450 3E E2              1252 	ld	a,#0xE2
   0452 02                 1253 	ld	(bc),a
                           1254 ;	sounds.c 116
                           1255 ;	genAssign
   0453 01 14 FF           1256 	ld	bc,#0xFF14
                           1257 ;	genAssign (pointer)
   0456 3E 84              1258 	ld	a,#0x84
   0458 02                 1259 	ld	(bc),a
                           1260 ;	sounds.c 117
                           1261 ;	genIpush
                           1262 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0459 21 64 00           1263 	ld	hl,#0x0064
   045C E5                 1264 	push	hl
                           1265 ;	genCall
   045D CD 00 00           1266 	call	_delay
   0460 E8 02              1267 	lda	sp,2(sp)
                           1268 ;	sounds.c 119
                           1269 ;	genAssign
   0462 01 10 FF           1270 	ld	bc,#0xFF10
                           1271 ;	genAssign (pointer)
   0465 3E 53              1272 	ld	a,#0x53
   0467 02                 1273 	ld	(bc),a
                           1274 ;	sounds.c 120
                           1275 ;	genAssign
   0468 01 11 FF           1276 	ld	bc,#0xFF11
                           1277 ;	genAssign (pointer)
   046B 3E 00              1278 	ld	a,#0x00
   046D 02                 1279 	ld	(bc),a
                           1280 ;	sounds.c 121
                           1281 ;	genAssign
   046E 01 12 FF           1282 	ld	bc,#0xFF12
                           1283 ;	genAssign (pointer)
   0471 3E F7              1284 	ld	a,#0xF7
   0473 02                 1285 	ld	(bc),a
                           1286 ;	sounds.c 122
                           1287 ;	genAssign
   0474 01 13 FF           1288 	ld	bc,#0xFF13
                           1289 ;	genAssign (pointer)
   0477 3E E2              1290 	ld	a,#0xE2
   0479 02                 1291 	ld	(bc),a
                           1292 ;	sounds.c 123
                           1293 ;	genAssign
   047A 01 14 FF           1294 	ld	bc,#0xFF14
                           1295 ;	genAssign (pointer)
   047D 3E 84              1296 	ld	a,#0x84
   047F 02                 1297 	ld	(bc),a
                           1298 ;	genLabel
   0480                    1299 00101$:
                           1300 ;	genEndFunction
                           1301 	
   0480 C9                 1302 	ret
   0481                    1303 ___victory_sound_end:
                           1304 ;	sounds.c 126
                           1305 ;	genLabel
                           1306 ;	genFunction
                           1307 ;	---------------------------------
                           1308 ; Function game_over_sound
                           1309 ; ---------------------------------
   0481                    1310 ___game_over_sound_start:
   0481                    1311 _game_over_sound:
                           1312 	
                           1313 ;	sounds.c 127
                           1314 ;	genAssign
   0481 01 10 FF           1315 	ld	bc,#0xFF10
                           1316 ;	genAssign (pointer)
   0484 3E 4F              1317 	ld	a,#0x4F
   0486 02                 1318 	ld	(bc),a
                           1319 ;	sounds.c 128
                           1320 ;	genAssign
   0487 01 11 FF           1321 	ld	bc,#0xFF11
                           1322 ;	genAssign (pointer)
   048A 3E 96              1323 	ld	a,#0x96
   048C 02                 1324 	ld	(bc),a
                           1325 ;	sounds.c 129
                           1326 ;	genAssign
   048D 01 12 FF           1327 	ld	bc,#0xFF12
                           1328 ;	genAssign (pointer)
   0490 3E B7              1329 	ld	a,#0xB7
   0492 02                 1330 	ld	(bc),a
                           1331 ;	sounds.c 130
                           1332 ;	genAssign
   0493 01 13 FF           1333 	ld	bc,#0xFF13
                           1334 ;	genAssign (pointer)
   0496 3E BB              1335 	ld	a,#0xBB
   0498 02                 1336 	ld	(bc),a
                           1337 ;	sounds.c 131
                           1338 ;	genAssign
   0499 01 14 FF           1339 	ld	bc,#0xFF14
                           1340 ;	genAssign (pointer)
   049C 3E 85              1341 	ld	a,#0x85
   049E 02                 1342 	ld	(bc),a
                           1343 ;	sounds.c 132
                           1344 ;	genIpush
                           1345 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   049F 21 E2 04           1346 	ld	hl,#0x04E2
   04A2 E5                 1347 	push	hl
                           1348 ;	genCall
   04A3 CD 00 00           1349 	call	_delay
   04A6 E8 02              1350 	lda	sp,2(sp)
                           1351 ;	sounds.c 134
                           1352 ;	genAssign
   04A8 01 10 FF           1353 	ld	bc,#0xFF10
                           1354 ;	genAssign (pointer)
   04AB 3E 53              1355 	ld	a,#0x53
   04AD 02                 1356 	ld	(bc),a
                           1357 ;	sounds.c 135
                           1358 ;	genAssign
   04AE 01 11 FF           1359 	ld	bc,#0xFF11
                           1360 ;	genAssign (pointer)
   04B1 3E 00              1361 	ld	a,#0x00
   04B3 02                 1362 	ld	(bc),a
                           1363 ;	sounds.c 136
                           1364 ;	genAssign
   04B4 01 12 FF           1365 	ld	bc,#0xFF12
                           1366 ;	genAssign (pointer)
   04B7 3E F7              1367 	ld	a,#0xF7
   04B9 02                 1368 	ld	(bc),a
                           1369 ;	sounds.c 137
                           1370 ;	genAssign
   04BA 01 13 FF           1371 	ld	bc,#0xFF13
                           1372 ;	genAssign (pointer)
   04BD 3E E2              1373 	ld	a,#0xE2
   04BF 02                 1374 	ld	(bc),a
                           1375 ;	sounds.c 138
                           1376 ;	genAssign
   04C0 01 14 FF           1377 	ld	bc,#0xFF14
                           1378 ;	genAssign (pointer)
   04C3 3E 84              1379 	ld	a,#0x84
   04C5 02                 1380 	ld	(bc),a
                           1381 ;	sounds.c 139
                           1382 ;	genIpush
                           1383 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04C6 21 64 00           1384 	ld	hl,#0x0064
   04C9 E5                 1385 	push	hl
                           1386 ;	genCall
   04CA CD 00 00           1387 	call	_delay
   04CD E8 02              1388 	lda	sp,2(sp)
                           1389 ;	sounds.c 141
                           1390 ;	genAssign
   04CF 01 10 FF           1391 	ld	bc,#0xFF10
                           1392 ;	genAssign (pointer)
   04D2 3E 53              1393 	ld	a,#0x53
   04D4 02                 1394 	ld	(bc),a
                           1395 ;	sounds.c 142
                           1396 ;	genAssign
   04D5 01 11 FF           1397 	ld	bc,#0xFF11
                           1398 ;	genAssign (pointer)
   04D8 3E 00              1399 	ld	a,#0x00
   04DA 02                 1400 	ld	(bc),a
                           1401 ;	sounds.c 143
                           1402 ;	genAssign
   04DB 01 12 FF           1403 	ld	bc,#0xFF12
                           1404 ;	genAssign (pointer)
   04DE 3E F7              1405 	ld	a,#0xF7
   04E0 02                 1406 	ld	(bc),a
                           1407 ;	sounds.c 144
                           1408 ;	genAssign
   04E1 01 13 FF           1409 	ld	bc,#0xFF13
                           1410 ;	genAssign (pointer)
   04E4 3E E2              1411 	ld	a,#0xE2
   04E6 02                 1412 	ld	(bc),a
                           1413 ;	sounds.c 145
                           1414 ;	genAssign
   04E7 01 14 FF           1415 	ld	bc,#0xFF14
                           1416 ;	genAssign (pointer)
   04EA 3E 84              1417 	ld	a,#0x84
   04EC 02                 1418 	ld	(bc),a
                           1419 ;	genLabel
   04ED                    1420 00101$:
                           1421 ;	genEndFunction
                           1422 	
   04ED C9                 1423 	ret
   04EE                    1424 ___game_over_sound_end:
                           1425 ;	lazer.c 12
                           1426 ;	genLabel
                           1427 ;	genFunction
                           1428 ;	---------------------------------
                           1429 ; Function row_col_to_cel
                           1430 ; ---------------------------------
   04EE                    1431 ___row_col_to_cel_start:
   04EE                    1432 _row_col_to_cel:
                           1433 	
                           1434 ;	lazer.c 13
                           1435 ;	genLeftShift
                           1436 ;	AOP_STK for 
   04EE F8 02              1437 	lda	hl,2(sp)
   04F0 4E                 1438 	ld	c,(hl)
   04F1 23                 1439 	inc	hl
   04F2 46                 1440 	ld	b,(hl)
   04F3 3E 04              1441 	ld	a,#0x03+1
   04F5 18 04              1442 	jr	00104$
   04F7                    1443 00103$:
   04F7 CB 21              1444 	sla	c
   04F9 CB 10              1445 	rl	b
   04FB                    1446 00104$:
   04FB 3D                 1447 	dec	a
   04FC 20 F9              1448 	jr	nz,00103$
                           1449 ;	genPlus
                           1450 ;	AOP_STK for 
                           1451 ;	Can't optimise plus by inc, falling back to the normal way
   04FE F8 02              1452 	lda	hl,2(sp)
   0500 2A                 1453 	ld	a,(hl+)
   0501 66                 1454 	ld	h,(hl)
   0502 6F                 1455 	ld	l,a
   0503 09                 1456 	add	hl,bc
   0504 4D                 1457 	ld	c,l
   0505 44                 1458 	ld	b,h
                           1459 ;	genPlus
                           1460 ;	AOP_STK for 
                           1461 ;	Can't optimise plus by inc, falling back to the normal way
   0506 F8 04              1462 	lda	hl,4(sp)
   0508 2A                 1463 	ld	a,(hl+)
   0509 66                 1464 	ld	h,(hl)
   050A 6F                 1465 	ld	l,a
   050B 09                 1466 	add	hl,bc
   050C 4D                 1467 	ld	c,l
   050D 44                 1468 	ld	b,h
                           1469 ;	genRet
   050E 59                 1470 	ld	e,c
   050F 50                 1471 	ld	d,b
                           1472 ;	genLabel
   0510                    1473 00101$:
                           1474 ;	genEndFunction
                           1475 	
   0510 C9                 1476 	ret
   0511                    1477 ___row_col_to_cel_end:
                           1478 ;	lazer.c 16
                           1479 ;	genLabel
                           1480 ;	genFunction
                           1481 ;	---------------------------------
                           1482 ; Function determine_next_lazer_stat
                           1483 ; ---------------------------------
   0511                    1484 ___determine_next_lazer_stat_start:
   0511                    1485 _determine_next_lazer_stat:
                           1486 	
                           1487 ;	lazer.c 17
                           1488 ;	genCmpEq
                           1489 ;	AOP_STK for 
                           1490 ; genCmpEq: left 1, right 1, result 0
   0511 F8 02              1491 	lda	hl,2(sp)
   0513 7E                 1492 	ld	a,(hl)
   0514 FE 08              1493 	cp	a,#0x08
   0516 CA 2E 06           1494 	jp	z,00133$
   0519                    1495 00167$:
                           1496 ;	genCmpEq
                           1497 ;	AOP_STK for 
                           1498 ; genCmpEq: left 1, right 1, result 0
   0519 F8 02              1499 	lda	hl,2(sp)
   051B 7E                 1500 	ld	a,(hl)
   051C FE 18              1501 	cp	a,#0x18
   051E CA 9E 05           1502 	jp	z,00114$
   0521                    1503 00168$:
                           1504 ;	genCmpEq
                           1505 ;	AOP_STK for 
                           1506 ; genCmpEq: left 1, right 1, result 0
   0521 F8 02              1507 	lda	hl,2(sp)
   0523 7E                 1508 	ld	a,(hl)
   0524 FE 28              1509 	cp	a,#0x28
   0526 CA 6C 05           1510 	jp	z,00107$
   0529                    1511 00169$:
                           1512 ;	genCmpEq
                           1513 ;	AOP_STK for 
                           1514 ; genCmpEq: left 1, right 1, result 0
   0529 F8 02              1515 	lda	hl,2(sp)
   052B 7E                 1516 	ld	a,(hl)
   052C FE 38              1517 	cp	a,#0x38
   052E CA 2E 06           1518 	jp	z,00133$
   0531                    1519 00170$:
                           1520 ;	genCmpEq
                           1521 ;	AOP_STK for 
                           1522 ; genCmpEq: left 1, right 1, result 0
   0531 F8 02              1523 	lda	hl,2(sp)
   0533 7E                 1524 	ld	a,(hl)
   0534 FE 58              1525 	cp	a,#0x58
   0536 CA E9 05           1526 	jp	z,00120$
   0539                    1527 00171$:
                           1528 ;	genCmpEq
                           1529 ;	AOP_STK for 
                           1530 ; genCmpEq: left 1, right 1, result 0
   0539 F8 02              1531 	lda	hl,2(sp)
   053B 7E                 1532 	ld	a,(hl)
   053C FE 60              1533 	cp	a,#0x60
   053E CA 17 06           1534 	jp	z,00126$
   0541                    1535 00172$:
                           1536 ;	genCmpEq
                           1537 ;	AOP_STK for 
                           1538 ; genCmpEq: left 1, right 1, result 0
   0541 F8 02              1539 	lda	hl,2(sp)
   0543 7E                 1540 	ld	a,(hl)
   0544 FE 68              1541 	cp	a,#0x68
   0546 CA 60 06           1542 	jp	z,00136$
   0549                    1543 00173$:
                           1544 ;	genCmpEq
                           1545 ;	AOP_STK for 
                           1546 ; genCmpEq: left 1, right 1, result 0
   0549 F8 02              1547 	lda	hl,2(sp)
   054B 7E                 1548 	ld	a,(hl)
   054C FE 70              1549 	cp	a,#0x70
   054E CA D2 05           1550 	jp	z,00117$
   0551                    1551 00174$:
                           1552 ;	genCmpEq
                           1553 ;	AOP_STK for 
                           1554 ; genCmpEq: left 1, right 1, result 0
   0551 F8 02              1555 	lda	hl,2(sp)
   0553 7E                 1556 	ld	a,(hl)
   0554 FE 78              1557 	cp	a,#0x78
   0556 CA 00 06           1558 	jp	z,00123$
   0559                    1559 00175$:
                           1560 ;	genCmpEq
                           1561 ;	AOP_STK for 
                           1562 ; genCmpEq: left 1, right 1, result 0
   0559 F8 02              1563 	lda	hl,2(sp)
   055B 7E                 1564 	ld	a,(hl)
   055C FE 84              1565 	cp	a,#0x84
   055E CA 60 06           1566 	jp	z,00136$
   0561                    1567 00176$:
                           1568 ;	genCmpEq
                           1569 ;	AOP_STK for 
                           1570 ; genCmpEq: left 1, right 1, result 0
   0561 F8 02              1571 	lda	hl,2(sp)
   0563 7E                 1572 	ld	a,(hl)
   0564 FE 8C              1573 	cp	a,#0x8C
   0566 CA 2E 06           1574 	jp	z,00133$
   0569                    1575 00177$:
                           1576 ;	genGoto
   0569 C3 65 06           1577 	jp	00138$
                           1578 ;	lazer.c 28
                           1579 ;	genLabel
   056C                    1580 00107$:
                           1581 ;	lazer.c 19
                           1582 ;	genCmpEq
                           1583 ;	AOP_STK for 
                           1584 ; genCmpEq: left 1, right 1, result 0
   056C F8 03              1585 	lda	hl,3(sp)
   056E 7E                 1586 	ld	a,(hl)
   056F FE 01              1587 	cp	a,#0x01
   0571 CA 8F 05           1588 	jp	z,00101$
   0574                    1589 00178$:
                           1590 ;	genCmpEq
                           1591 ;	AOP_STK for 
                           1592 ; genCmpEq: left 1, right 1, result 0
   0574 F8 03              1593 	lda	hl,3(sp)
   0576 7E                 1594 	ld	a,(hl)
   0577 FE 02              1595 	cp	a,#0x02
   0579 CA 8F 05           1596 	jp	z,00101$
   057C                    1597 00179$:
                           1598 ;	genCmpEq
                           1599 ;	AOP_STK for 
                           1600 ; genCmpEq: left 1, right 1, result 0
   057C F8 03              1601 	lda	hl,3(sp)
   057E 7E                 1602 	ld	a,(hl)
   057F FE 04              1603 	cp	a,#0x04
   0581 CA 94 05           1604 	jp	z,00103$
   0584                    1605 00180$:
                           1606 ;	genCmpEq
                           1607 ;	AOP_STK for 
                           1608 ; genCmpEq: left 1, right 1, result 0
   0584 F8 03              1609 	lda	hl,3(sp)
   0586 7E                 1610 	ld	a,(hl)
   0587 FE 08              1611 	cp	a,#0x08
   0589 CA 94 05           1612 	jp	z,00103$
   058C                    1613 00181$:
                           1614 ;	genGoto
   058C C3 99 05           1615 	jp	00105$
                           1616 ;	lazer.c 22
                           1617 ;	genLabel
   058F                    1618 00101$:
                           1619 ;	genRet
   058F 1E 04              1620 	ld	e,#0x04
   0591 C3 67 06           1621 	jp	00139$
                           1622 ;	lazer.c 25
                           1623 ;	genLabel
   0594                    1624 00103$:
                           1625 ;	genRet
   0594 1E 08              1626 	ld	e,#0x08
   0596 C3 67 06           1627 	jp	00139$
                           1628 ;	lazer.c 27
                           1629 ;	genLabel
   0599                    1630 00105$:
                           1631 ;	genRet
   0599 1E 00              1632 	ld	e,#0x00
   059B C3 67 06           1633 	jp	00139$
                           1634 ;	lazer.c 39
                           1635 ;	genLabel
   059E                    1636 00114$:
                           1637 ;	lazer.c 30
                           1638 ;	genCmpEq
                           1639 ;	AOP_STK for 
                           1640 ; genCmpEq: left 1, right 1, result 0
   059E F8 03              1641 	lda	hl,3(sp)
   05A0 7E                 1642 	ld	a,(hl)
   05A1 FE 01              1643 	cp	a,#0x01
   05A3 CA C3 05           1644 	jp	z,00108$
   05A6                    1645 00182$:
                           1646 ;	genCmpEq
                           1647 ;	AOP_STK for 
                           1648 ; genCmpEq: left 1, right 1, result 0
   05A6 F8 03              1649 	lda	hl,3(sp)
   05A8 7E                 1650 	ld	a,(hl)
   05A9 FE 02              1651 	cp	a,#0x02
   05AB CA C8 05           1652 	jp	z,00110$
   05AE                    1653 00183$:
                           1654 ;	genCmpEq
                           1655 ;	AOP_STK for 
                           1656 ; genCmpEq: left 1, right 1, result 0
   05AE F8 03              1657 	lda	hl,3(sp)
   05B0 7E                 1658 	ld	a,(hl)
   05B1 FE 04              1659 	cp	a,#0x04
   05B3 CA C8 05           1660 	jp	z,00110$
   05B6                    1661 00184$:
                           1662 ;	genCmpEq
                           1663 ;	AOP_STK for 
                           1664 ; genCmpEq: left 1, right 1, result 0
   05B6 F8 03              1665 	lda	hl,3(sp)
   05B8 7E                 1666 	ld	a,(hl)
   05B9 FE 08              1667 	cp	a,#0x08
   05BB C2 CD 05           1668 	jp	nz,00112$
   05BE 18 03              1669 	jr	00186$
   05C0                    1670 00185$:
   05C0 C3 CD 05           1671 	jp	00112$
   05C3                    1672 00186$:
                           1673 ;	lazer.c 33
                           1674 ;	genLabel
   05C3                    1675 00108$:
                           1676 ;	genRet
   05C3 1E 04              1677 	ld	e,#0x04
   05C5 C3 67 06           1678 	jp	00139$
                           1679 ;	lazer.c 36
                           1680 ;	genLabel
   05C8                    1681 00110$:
                           1682 ;	genRet
   05C8 1E 08              1683 	ld	e,#0x08
   05CA C3 67 06           1684 	jp	00139$
                           1685 ;	lazer.c 38
                           1686 ;	genLabel
   05CD                    1687 00112$:
                           1688 ;	genRet
   05CD 1E 00              1689 	ld	e,#0x00
   05CF C3 67 06           1690 	jp	00139$
                           1691 ;	lazer.c 44
                           1692 ;	genLabel
   05D2                    1693 00117$:
                           1694 ;	lazer.c 41
                           1695 ;	genCmpEq
                           1696 ;	AOP_STK for 
                           1697 ; genCmpEq: left 1, right 1, result 0
   05D2 F8 03              1698 	lda	hl,3(sp)
   05D4 7E                 1699 	ld	a,(hl)
   05D5 FE 04              1700 	cp	a,#0x04
   05D7 C2 E4 05           1701 	jp	nz,00116$
   05DA 18 03              1702 	jr	00188$
   05DC                    1703 00187$:
   05DC C3 E4 05           1704 	jp	00116$
   05DF                    1705 00188$:
                           1706 ;	lazer.c 42
                           1707 ;	genRet
   05DF 1E 04              1708 	ld	e,#0x04
   05E1 C3 67 06           1709 	jp	00139$
                           1710 ;	genLabel
   05E4                    1711 00116$:
                           1712 ;	lazer.c 44
                           1713 ;	genRet
   05E4 1E 00              1714 	ld	e,#0x00
   05E6 C3 67 06           1715 	jp	00139$
                           1716 ;	lazer.c 49
                           1717 ;	genLabel
   05E9                    1718 00120$:
                           1719 ;	lazer.c 46
                           1720 ;	genCmpEq
                           1721 ;	AOP_STK for 
                           1722 ; genCmpEq: left 1, right 1, result 0
   05E9 F8 03              1723 	lda	hl,3(sp)
   05EB 7E                 1724 	ld	a,(hl)
   05EC FE 08              1725 	cp	a,#0x08
   05EE C2 FB 05           1726 	jp	nz,00119$
   05F1 18 03              1727 	jr	00190$
   05F3                    1728 00189$:
   05F3 C3 FB 05           1729 	jp	00119$
   05F6                    1730 00190$:
                           1731 ;	lazer.c 47
                           1732 ;	genRet
   05F6 1E 04              1733 	ld	e,#0x04
   05F8 C3 67 06           1734 	jp	00139$
                           1735 ;	genLabel
   05FB                    1736 00119$:
                           1737 ;	lazer.c 49
                           1738 ;	genRet
   05FB 1E 00              1739 	ld	e,#0x00
   05FD C3 67 06           1740 	jp	00139$
                           1741 ;	lazer.c 54
                           1742 ;	genLabel
   0600                    1743 00123$:
                           1744 ;	lazer.c 51
                           1745 ;	genCmpEq
                           1746 ;	AOP_STK for 
                           1747 ; genCmpEq: left 1, right 1, result 0
   0600 F8 03              1748 	lda	hl,3(sp)
   0602 7E                 1749 	ld	a,(hl)
   0603 FE 02              1750 	cp	a,#0x02
   0605 C2 12 06           1751 	jp	nz,00122$
   0608 18 03              1752 	jr	00192$
   060A                    1753 00191$:
   060A C3 12 06           1754 	jp	00122$
   060D                    1755 00192$:
                           1756 ;	lazer.c 52
                           1757 ;	genRet
   060D 1E 04              1758 	ld	e,#0x04
   060F C3 67 06           1759 	jp	00139$
                           1760 ;	genLabel
   0612                    1761 00122$:
                           1762 ;	lazer.c 54
                           1763 ;	genRet
   0612 1E 00              1764 	ld	e,#0x00
   0614 C3 67 06           1765 	jp	00139$
                           1766 ;	lazer.c 59
                           1767 ;	genLabel
   0617                    1768 00126$:
                           1769 ;	lazer.c 56
                           1770 ;	genCmpEq
                           1771 ;	AOP_STK for 
                           1772 ; genCmpEq: left 1, right 1, result 0
   0617 F8 03              1773 	lda	hl,3(sp)
   0619 7E                 1774 	ld	a,(hl)
   061A FE 01              1775 	cp	a,#0x01
   061C C2 29 06           1776 	jp	nz,00125$
   061F 18 03              1777 	jr	00194$
   0621                    1778 00193$:
   0621 C3 29 06           1779 	jp	00125$
   0624                    1780 00194$:
                           1781 ;	lazer.c 57
                           1782 ;	genRet
   0624 1E 04              1783 	ld	e,#0x04
   0626 C3 67 06           1784 	jp	00139$
                           1785 ;	genLabel
   0629                    1786 00125$:
                           1787 ;	lazer.c 59
                           1788 ;	genRet
   0629 1E 00              1789 	ld	e,#0x00
   062B C3 67 06           1790 	jp	00139$
                           1791 ;	lazer.c 73
                           1792 ;	genLabel
   062E                    1793 00133$:
                           1794 ;	lazer.c 64
                           1795 ;	genCmpEq
                           1796 ;	AOP_STK for 
                           1797 ; genCmpEq: left 1, right 1, result 0
   062E F8 03              1798 	lda	hl,3(sp)
   0630 7E                 1799 	ld	a,(hl)
   0631 FE 01              1800 	cp	a,#0x01
   0633 CA 51 06           1801 	jp	z,00127$
   0636                    1802 00195$:
                           1803 ;	genCmpEq
                           1804 ;	AOP_STK for 
                           1805 ; genCmpEq: left 1, right 1, result 0
   0636 F8 03              1806 	lda	hl,3(sp)
   0638 7E                 1807 	ld	a,(hl)
   0639 FE 02              1808 	cp	a,#0x02
   063B CA 56 06           1809 	jp	z,00129$
   063E                    1810 00196$:
                           1811 ;	genCmpEq
                           1812 ;	AOP_STK for 
                           1813 ; genCmpEq: left 1, right 1, result 0
   063E F8 03              1814 	lda	hl,3(sp)
   0640 7E                 1815 	ld	a,(hl)
   0641 FE 04              1816 	cp	a,#0x04
   0643 CA 51 06           1817 	jp	z,00127$
   0646                    1818 00197$:
                           1819 ;	genCmpEq
                           1820 ;	AOP_STK for 
                           1821 ; genCmpEq: left 1, right 1, result 0
   0646 F8 03              1822 	lda	hl,3(sp)
   0648 7E                 1823 	ld	a,(hl)
   0649 FE 08              1824 	cp	a,#0x08
   064B CA 56 06           1825 	jp	z,00129$
   064E                    1826 00198$:
                           1827 ;	genGoto
   064E C3 5B 06           1828 	jp	00131$
                           1829 ;	lazer.c 67
                           1830 ;	genLabel
   0651                    1831 00127$:
                           1832 ;	genRet
   0651 1E 04              1833 	ld	e,#0x04
   0653 C3 67 06           1834 	jp	00139$
                           1835 ;	lazer.c 70
                           1836 ;	genLabel
   0656                    1837 00129$:
                           1838 ;	genRet
   0656 1E 08              1839 	ld	e,#0x08
   0658 C3 67 06           1840 	jp	00139$
                           1841 ;	lazer.c 72
                           1842 ;	genLabel
   065B                    1843 00131$:
                           1844 ;	genRet
   065B 1E 00              1845 	ld	e,#0x00
   065D C3 67 06           1846 	jp	00139$
                           1847 ;	lazer.c 76
                           1848 ;	genLabel
   0660                    1849 00136$:
                           1850 ;	genRet
   0660 1E 04              1851 	ld	e,#0x04
   0662 C3 67 06           1852 	jp	00139$
                           1853 ;	lazer.c 78
                           1854 ;	genLabel
   0665                    1855 00138$:
                           1856 ;	lazer.c 79
                           1857 ;	genRet
   0665 1E 00              1858 	ld	e,#0x00
                           1859 ;	genLabel
   0667                    1860 00139$:
                           1861 ;	genEndFunction
                           1862 	
   0667 C9                 1863 	ret
   0668                    1864 ___determine_next_lazer_stat_end:
                           1865 ;	lazer.c 82
                           1866 ;	genLabel
                           1867 ;	genFunction
                           1868 ;	---------------------------------
                           1869 ; Function determine_next_direction
                           1870 ; ---------------------------------
   0668                    1871 ___determine_next_direction_start:
   0668                    1872 _determine_next_direction:
                           1873 	
                           1874 ;	lazer.c 83
                           1875 ;	genCmpEq
                           1876 ;	AOP_STK for 
                           1877 ; genCmpEq: left 1, right 1, result 0
   0668 F8 02              1878 	lda	hl,2(sp)
   066A 7E                 1879 	ld	a,(hl)
   066B FE 18              1880 	cp	a,#0x18
   066D CA 06 07           1881 	jp	z,00119$
   0670                    1882 00157$:
                           1883 ;	genCmpEq
                           1884 ;	AOP_STK for 
                           1885 ; genCmpEq: left 1, right 1, result 0
   0670 F8 02              1886 	lda	hl,2(sp)
   0672 7E                 1887 	ld	a,(hl)
   0673 FE 28              1888 	cp	a,#0x28
   0675 CA CA 06           1889 	jp	z,00112$
   0678                    1890 00158$:
                           1891 ;	genCmpEq
                           1892 ;	AOP_STK for 
                           1893 ; genCmpEq: left 1, right 1, result 0
   0678 F8 02              1894 	lda	hl,2(sp)
   067A 7E                 1895 	ld	a,(hl)
   067B FE 48              1896 	cp	a,#0x48
   067D CA C5 06           1897 	jp	z,00101$
   0680                    1898 00159$:
                           1899 ;	genCmpEq
                           1900 ;	AOP_STK for 
                           1901 ; genCmpEq: left 1, right 1, result 0
   0680 F8 02              1902 	lda	hl,2(sp)
   0682 7E                 1903 	ld	a,(hl)
   0683 FE 4C              1904 	cp	a,#0x4C
   0685 CA C5 06           1905 	jp	z,00101$
   0688                    1906 00160$:
                           1907 ;	genCmpEq
                           1908 ;	AOP_STK for 
                           1909 ; genCmpEq: left 1, right 1, result 0
   0688 F8 02              1910 	lda	hl,2(sp)
   068A 7E                 1911 	ld	a,(hl)
   068B FE 58              1912 	cp	a,#0x58
   068D CA 59 07           1913 	jp	z,00125$
   0690                    1914 00161$:
                           1915 ;	genCmpEq
                           1916 ;	AOP_STK for 
                           1917 ; genCmpEq: left 1, right 1, result 0
   0690 F8 02              1918 	lda	hl,2(sp)
   0692 7E                 1919 	ld	a,(hl)
   0693 FE 60              1920 	cp	a,#0x60
   0695 CA 87 07           1921 	jp	z,00131$
   0698                    1922 00162$:
                           1923 ;	genCmpEq
                           1924 ;	AOP_STK for 
                           1925 ; genCmpEq: left 1, right 1, result 0
   0698 F8 02              1926 	lda	hl,2(sp)
   069A 7E                 1927 	ld	a,(hl)
   069B FE 68              1928 	cp	a,#0x68
   069D CA C5 06           1929 	jp	z,00101$
   06A0                    1930 00163$:
                           1931 ;	genCmpEq
                           1932 ;	AOP_STK for 
                           1933 ; genCmpEq: left 1, right 1, result 0
   06A0 F8 02              1934 	lda	hl,2(sp)
   06A2 7E                 1935 	ld	a,(hl)
   06A3 FE 70              1936 	cp	a,#0x70
   06A5 CA 42 07           1937 	jp	z,00122$
   06A8                    1938 00164$:
                           1939 ;	genCmpEq
                           1940 ;	AOP_STK for 
                           1941 ; genCmpEq: left 1, right 1, result 0
   06A8 F8 02              1942 	lda	hl,2(sp)
   06AA 7E                 1943 	ld	a,(hl)
   06AB FE 78              1944 	cp	a,#0x78
   06AD CA 70 07           1945 	jp	z,00128$
   06B0                    1946 00165$:
                           1947 ;	genCmpEq
                           1948 ;	AOP_STK for 
                           1949 ; genCmpEq: left 1, right 1, result 0
   06B0 F8 02              1950 	lda	hl,2(sp)
   06B2 7E                 1951 	ld	a,(hl)
   06B3 FE 80              1952 	cp	a,#0x80
   06B5 CA C5 06           1953 	jp	z,00101$
   06B8                    1954 00166$:
                           1955 ;	genCmpEq
                           1956 ;	AOP_STK for 
                           1957 ; genCmpEq: left 1, right 1, result 0
   06B8 F8 02              1958 	lda	hl,2(sp)
   06BA 7E                 1959 	ld	a,(hl)
   06BB FE 84              1960 	cp	a,#0x84
   06BD C2 9E 07           1961 	jp	nz,00132$
   06C0 18 03              1962 	jr	00168$
   06C2                    1963 00167$:
   06C2 C3 9E 07           1964 	jp	00132$
   06C5                    1965 00168$:
                           1966 ;	lazer.c 89
                           1967 ;	genLabel
   06C5                    1968 00101$:
                           1969 ;	genRet
   06C5 1E 00              1970 	ld	e,#0x00
   06C7 C3 A1 07           1971 	jp	00133$
                           1972 ;	lazer.c 102
                           1973 ;	genLabel
   06CA                    1974 00112$:
                           1975 ;	lazer.c 91
                           1976 ;	genCmpEq
                           1977 ;	AOP_STK for 
                           1978 ; genCmpEq: left 1, right 1, result 0
   06CA F8 03              1979 	lda	hl,3(sp)
   06CC 7E                 1980 	ld	a,(hl)
   06CD FE 01              1981 	cp	a,#0x01
   06CF CA ED 06           1982 	jp	z,00106$
   06D2                    1983 00169$:
                           1984 ;	genCmpEq
                           1985 ;	AOP_STK for 
                           1986 ; genCmpEq: left 1, right 1, result 0
   06D2 F8 03              1987 	lda	hl,3(sp)
   06D4 7E                 1988 	ld	a,(hl)
   06D5 FE 02              1989 	cp	a,#0x02
   06D7 CA F2 06           1990 	jp	z,00107$
   06DA                    1991 00170$:
                           1992 ;	genCmpEq
                           1993 ;	AOP_STK for 
                           1994 ; genCmpEq: left 1, right 1, result 0
   06DA F8 03              1995 	lda	hl,3(sp)
   06DC 7E                 1996 	ld	a,(hl)
   06DD FE 04              1997 	cp	a,#0x04
   06DF CA F7 06           1998 	jp	z,00108$
   06E2                    1999 00171$:
                           2000 ;	genCmpEq
                           2001 ;	AOP_STK for 
                           2002 ; genCmpEq: left 1, right 1, result 0
   06E2 F8 03              2003 	lda	hl,3(sp)
   06E4 7E                 2004 	ld	a,(hl)
   06E5 FE 08              2005 	cp	a,#0x08
   06E7 CA FC 06           2006 	jp	z,00109$
   06EA                    2007 00172$:
                           2008 ;	genGoto
   06EA C3 01 07           2009 	jp	00110$
                           2010 ;	lazer.c 93
                           2011 ;	genLabel
   06ED                    2012 00106$:
                           2013 ;	genRet
   06ED 1E 08              2014 	ld	e,#0x08
   06EF C3 A1 07           2015 	jp	00133$
                           2016 ;	lazer.c 95
                           2017 ;	genLabel
   06F2                    2018 00107$:
                           2019 ;	genRet
   06F2 1E 04              2020 	ld	e,#0x04
   06F4 C3 A1 07           2021 	jp	00133$
                           2022 ;	lazer.c 97
                           2023 ;	genLabel
   06F7                    2024 00108$:
                           2025 ;	genRet
   06F7 1E 02              2026 	ld	e,#0x02
   06F9 C3 A1 07           2027 	jp	00133$
                           2028 ;	lazer.c 99
                           2029 ;	genLabel
   06FC                    2030 00109$:
                           2031 ;	genRet
   06FC 1E 01              2032 	ld	e,#0x01
   06FE C3 A1 07           2033 	jp	00133$
                           2034 ;	lazer.c 101
                           2035 ;	genLabel
   0701                    2036 00110$:
                           2037 ;	genRet
   0701 1E 00              2038 	ld	e,#0x00
   0703 C3 A1 07           2039 	jp	00133$
                           2040 ;	lazer.c 115
                           2041 ;	genLabel
   0706                    2042 00119$:
                           2043 ;	lazer.c 104
                           2044 ;	genCmpEq
                           2045 ;	AOP_STK for 
                           2046 ; genCmpEq: left 1, right 1, result 0
   0706 F8 03              2047 	lda	hl,3(sp)
   0708 7E                 2048 	ld	a,(hl)
   0709 FE 01              2049 	cp	a,#0x01
   070B CA 29 07           2050 	jp	z,00113$
   070E                    2051 00173$:
                           2052 ;	genCmpEq
                           2053 ;	AOP_STK for 
                           2054 ; genCmpEq: left 1, right 1, result 0
   070E F8 03              2055 	lda	hl,3(sp)
   0710 7E                 2056 	ld	a,(hl)
   0711 FE 02              2057 	cp	a,#0x02
   0713 CA 2E 07           2058 	jp	z,00114$
   0716                    2059 00174$:
                           2060 ;	genCmpEq
                           2061 ;	AOP_STK for 
                           2062 ; genCmpEq: left 1, right 1, result 0
   0716 F8 03              2063 	lda	hl,3(sp)
   0718 7E                 2064 	ld	a,(hl)
   0719 FE 04              2065 	cp	a,#0x04
   071B CA 33 07           2066 	jp	z,00115$
   071E                    2067 00175$:
                           2068 ;	genCmpEq
                           2069 ;	AOP_STK for 
                           2070 ; genCmpEq: left 1, right 1, result 0
   071E F8 03              2071 	lda	hl,3(sp)
   0720 7E                 2072 	ld	a,(hl)
   0721 FE 08              2073 	cp	a,#0x08
   0723 CA 38 07           2074 	jp	z,00116$
   0726                    2075 00176$:
                           2076 ;	genGoto
   0726 C3 3D 07           2077 	jp	00117$
                           2078 ;	lazer.c 106
                           2079 ;	genLabel
   0729                    2080 00113$:
                           2081 ;	genRet
   0729 1E 02              2082 	ld	e,#0x02
   072B C3 A1 07           2083 	jp	00133$
                           2084 ;	lazer.c 108
                           2085 ;	genLabel
   072E                    2086 00114$:
                           2087 ;	genRet
   072E 1E 01              2088 	ld	e,#0x01
   0730 C3 A1 07           2089 	jp	00133$
                           2090 ;	lazer.c 110
                           2091 ;	genLabel
   0733                    2092 00115$:
                           2093 ;	genRet
   0733 1E 08              2094 	ld	e,#0x08
   0735 C3 A1 07           2095 	jp	00133$
                           2096 ;	lazer.c 112
                           2097 ;	genLabel
   0738                    2098 00116$:
                           2099 ;	genRet
   0738 1E 04              2100 	ld	e,#0x04
   073A C3 A1 07           2101 	jp	00133$
                           2102 ;	lazer.c 114
                           2103 ;	genLabel
   073D                    2104 00117$:
                           2105 ;	genRet
   073D 1E 00              2106 	ld	e,#0x00
   073F C3 A1 07           2107 	jp	00133$
                           2108 ;	lazer.c 120
                           2109 ;	genLabel
   0742                    2110 00122$:
                           2111 ;	lazer.c 117
                           2112 ;	genCmpEq
                           2113 ;	AOP_STK for 
                           2114 ; genCmpEq: left 1, right 1, result 0
   0742 F8 03              2115 	lda	hl,3(sp)
   0744 7E                 2116 	ld	a,(hl)
   0745 FE 04              2117 	cp	a,#0x04
   0747 C2 54 07           2118 	jp	nz,00121$
   074A 18 03              2119 	jr	00178$
   074C                    2120 00177$:
   074C C3 54 07           2121 	jp	00121$
   074F                    2122 00178$:
                           2123 ;	lazer.c 118
                           2124 ;	genRet
   074F 1E 0A              2125 	ld	e,#0x0A
   0751 C3 A1 07           2126 	jp	00133$
                           2127 ;	genLabel
   0754                    2128 00121$:
                           2129 ;	lazer.c 120
                           2130 ;	genRet
   0754 1E 00              2131 	ld	e,#0x00
   0756 C3 A1 07           2132 	jp	00133$
                           2133 ;	lazer.c 126
                           2134 ;	genLabel
   0759                    2135 00125$:
                           2136 ;	lazer.c 123
                           2137 ;	genCmpEq
                           2138 ;	AOP_STK for 
                           2139 ; genCmpEq: left 1, right 1, result 0
   0759 F8 03              2140 	lda	hl,3(sp)
   075B 7E                 2141 	ld	a,(hl)
   075C FE 08              2142 	cp	a,#0x08
   075E C2 6B 07           2143 	jp	nz,00124$
   0761 18 03              2144 	jr	00180$
   0763                    2145 00179$:
   0763 C3 6B 07           2146 	jp	00124$
   0766                    2147 00180$:
                           2148 ;	lazer.c 124
                           2149 ;	genRet
   0766 1E 05              2150 	ld	e,#0x05
   0768 C3 A1 07           2151 	jp	00133$
                           2152 ;	genLabel
   076B                    2153 00124$:
                           2154 ;	lazer.c 126
                           2155 ;	genRet
   076B 1E 00              2156 	ld	e,#0x00
   076D C3 A1 07           2157 	jp	00133$
                           2158 ;	lazer.c 132
                           2159 ;	genLabel
   0770                    2160 00128$:
                           2161 ;	lazer.c 129
                           2162 ;	genCmpEq
                           2163 ;	AOP_STK for 
                           2164 ; genCmpEq: left 1, right 1, result 0
   0770 F8 03              2165 	lda	hl,3(sp)
   0772 7E                 2166 	ld	a,(hl)
   0773 FE 02              2167 	cp	a,#0x02
   0775 C2 82 07           2168 	jp	nz,00127$
   0778 18 03              2169 	jr	00182$
   077A                    2170 00181$:
   077A C3 82 07           2171 	jp	00127$
   077D                    2172 00182$:
                           2173 ;	lazer.c 130
                           2174 ;	genRet
   077D 1E 05              2175 	ld	e,#0x05
   077F C3 A1 07           2176 	jp	00133$
                           2177 ;	genLabel
   0782                    2178 00127$:
                           2179 ;	lazer.c 132
                           2180 ;	genRet
   0782 1E 00              2181 	ld	e,#0x00
   0784 C3 A1 07           2182 	jp	00133$
                           2183 ;	lazer.c 138
                           2184 ;	genLabel
   0787                    2185 00131$:
                           2186 ;	lazer.c 135
                           2187 ;	genCmpEq
                           2188 ;	AOP_STK for 
                           2189 ; genCmpEq: left 1, right 1, result 0
   0787 F8 03              2190 	lda	hl,3(sp)
   0789 7E                 2191 	ld	a,(hl)
   078A FE 01              2192 	cp	a,#0x01
   078C C2 99 07           2193 	jp	nz,00130$
   078F 18 03              2194 	jr	00184$
   0791                    2195 00183$:
   0791 C3 99 07           2196 	jp	00130$
   0794                    2197 00184$:
                           2198 ;	lazer.c 136
                           2199 ;	genRet
   0794 1E 0A              2200 	ld	e,#0x0A
   0796 C3 A1 07           2201 	jp	00133$
                           2202 ;	genLabel
   0799                    2203 00130$:
                           2204 ;	lazer.c 138
                           2205 ;	genRet
   0799 1E 00              2206 	ld	e,#0x00
   079B C3 A1 07           2207 	jp	00133$
                           2208 ;	lazer.c 139
                           2209 ;	genLabel
   079E                    2210 00132$:
                           2211 ;	lazer.c 140
                           2212 ;	genRet
                           2213 ;	AOP_STK for 
   079E F8 03              2214 	lda	hl,3(sp)
   07A0 5E                 2215 	ld	e,(hl)
                           2216 ;	genLabel
   07A1                    2217 00133$:
                           2218 ;	genEndFunction
                           2219 	
   07A1 C9                 2220 	ret
   07A2                    2221 ___determine_next_direction_end:
                           2222 ;	lazer.c 143
                           2223 ;	genLabel
                           2224 ;	genFunction
                           2225 ;	---------------------------------
                           2226 ; Function determine_lazer_path
                           2227 ; ---------------------------------
   07A2                    2228 ___determine_lazer_path_start:
   07A2                    2229 _determine_lazer_path:
   07A2 E8 F0              2230 	lda	sp,-16(sp)
                           2231 ;	lazer.c 154
                           2232 ;	genCast
                           2233 ;	AOP_STK for 
                           2234 ;	AOP_STK for _determine_lazer_path_row_1_1
   07A4 F8 18              2235 	lda	hl,24(sp)
   07A6 7E                 2236 	ld	a,(hl)
   07A7 F8 0E              2237 	lda	hl,14(sp)
   07A9 22                 2238 	ld	(hl+),a
   07AA 36 00              2239 	ld	(hl),#0x00
                           2240 ;	lazer.c 155
                           2241 ;	genCast
                           2242 ;	AOP_STK for 
                           2243 ;	AOP_STK for _determine_lazer_path_col_1_1
   07AC F8 17              2244 	lda	hl,23(sp)
   07AE 7E                 2245 	ld	a,(hl)
   07AF F8 0C              2246 	lda	hl,12(sp)
   07B1 22                 2247 	ld	(hl+),a
   07B2 36 00              2248 	ld	(hl),#0x00
                           2249 ;	lazer.c 157
                           2250 ;	genAssign
                           2251 ;	AOP_STK for _determine_lazer_path_row_1_1
                           2252 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   07B4 23                 2253 	inc	hl
   07B5 2A                 2254 	ld	a,(hl+)
   07B6 5E                 2255 	ld	e,(hl)
   07B7 F8 0A              2256 	lda	hl,10(sp)
   07B9 22                 2257 	ld	(hl+),a
   07BA 73                 2258 	ld	(hl),e
                           2259 ;	lazer.c 158
                           2260 ;	genAssign
                           2261 ;	AOP_STK for _determine_lazer_path_col_1_1
                           2262 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   07BB 23                 2263 	inc	hl
   07BC 2A                 2264 	ld	a,(hl+)
   07BD 5E                 2265 	ld	e,(hl)
   07BE F8 08              2266 	lda	hl,8(sp)
   07C0 22                 2267 	ld	(hl+),a
   07C1 73                 2268 	ld	(hl),e
                           2269 ;	lazer.c 160
                           2270 ;	genCmpEq
                           2271 ;	AOP_STK for 
                           2272 ; genCmpEq: left 1, right 1, result 0
   07C2 F8 16              2273 	lda	hl,22(sp)
   07C4 7E                 2274 	ld	a,(hl)
   07C5 B7                 2275 	or	a,a
   07C6 CA EC 07           2276 	jp	z,00101$
   07C9                    2277 00148$:
                           2278 ;	genCmpEq
                           2279 ;	AOP_STK for 
                           2280 ; genCmpEq: left 1, right 1, result 0
   07C9 F8 16              2281 	lda	hl,22(sp)
   07CB 7E                 2282 	ld	a,(hl)
   07CC FE 01              2283 	cp	a,#0x01
   07CE CA EF 07           2284 	jp	z,00104$
   07D1                    2285 00149$:
                           2286 ;	genCmpEq
                           2287 ;	AOP_STK for 
                           2288 ; genCmpEq: left 1, right 1, result 0
   07D1 F8 16              2289 	lda	hl,22(sp)
   07D3 7E                 2290 	ld	a,(hl)
   07D4 FE 02              2291 	cp	a,#0x02
   07D6 CA 0A 08           2292 	jp	z,00107$
   07D9                    2293 00150$:
                           2294 ;	genCmpEq
                           2295 ;	AOP_STK for 
                           2296 ; genCmpEq: left 1, right 1, result 0
   07D9 F8 16              2297 	lda	hl,22(sp)
   07DB 7E                 2298 	ld	a,(hl)
   07DC FE 04              2299 	cp	a,#0x04
   07DE CA 2A 08           2300 	jp	z,00110$
   07E1                    2301 00151$:
                           2302 ;	genCmpEq
                           2303 ;	AOP_STK for 
                           2304 ; genCmpEq: left 1, right 1, result 0
   07E1 F8 16              2305 	lda	hl,22(sp)
   07E3 7E                 2306 	ld	a,(hl)
   07E4 FE 08              2307 	cp	a,#0x08
   07E6 CA 4A 08           2308 	jp	z,00113$
   07E9                    2309 00152$:
                           2310 ;	genGoto
   07E9 C3 65 08           2311 	jp	00114$
                           2312 ;	lazer.c 161
                           2313 ;	genLabel
   07EC                    2314 00101$:
                           2315 ;	genRet
   07EC C3 CF 09           2316 	jp	00130$
                           2317 ;	lazer.c 166
                           2318 ;	genLabel
   07EF                    2319 00104$:
                           2320 ;	lazer.c 163
                           2321 ;	genCmpEq
                           2322 ;	AOP_STK for _determine_lazer_path_row_1_1
                           2323 ; genCmpEq: left 2, right 2, result 0
   07EF F8 0E              2324 	lda	hl,14(sp)
   07F1 2A                 2325 	ld	a,(hl+)
   07F2 B6                 2326 	or	a,(hl)
   07F3 CA 68 08           2327 	jp	z,00115$
   07F6                    2328 00153$:
                           2329 ;	lazer.c 164
                           2330 ;	genMinus
                           2331 ;	AOP_STK for _determine_lazer_path_row_1_1
                           2332 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   07F6 F8 0E              2333 	lda	hl,14(sp)
   07F8 5E                 2334 	ld	e,(hl)
   07F9 23                 2335 	inc	hl
   07FA 56                 2336 	ld	d,(hl)
   07FB 21 01 00           2337 	ld	hl,#0x0001
   07FE 7B                 2338 	ld	a,e
   07FF 95                 2339 	sub	a,l
   0800 5F                 2340 	ld	e,a
   0801 7A                 2341 	ld	a,d
   0802 9C                 2342 	sbc	a,h
   0803 F8 0B              2343 	lda	hl,11(sp)
   0805 32                 2344 	ld      (hl-),a
   0806 73                 2345 	ld	(hl),e
                           2346 ;	lazer.c 166
                           2347 ;	genGoto
   0807 C3 68 08           2348 	jp	00115$
                           2349 ;	lazer.c 171
                           2350 ;	genLabel
   080A                    2351 00107$:
                           2352 ;	lazer.c 168
                           2353 ;	genCmpEq
                           2354 ;	AOP_STK for _determine_lazer_path_col_1_1
                           2355 ; genCmpEq: left 2, right 2, result 0
   080A F8 0C              2356 	lda	hl,12(sp)
   080C 7E                 2357 	ld	a,(hl)
   080D FE 08              2358 	cp	a,#0x08
   080F C2 18 08           2359 	jp	nz,00154$
   0812 23                 2360 	inc	hl
   0813 7E                 2361 	ld	a,(hl)
   0814 B7                 2362 	or	a,a
   0815 CA 68 08           2363 	jp	z,00115$
   0818                    2364 00154$:
                           2365 ;	lazer.c 169
                           2366 ;	genPlus
                           2367 ;	AOP_STK for _determine_lazer_path_col_1_1
                           2368 ;	AOP_STK for _determine_lazer_path_next_col_1_1
                           2369 ;	genPlusIncr
                           2370 ;	Can't optimise plus by inc, falling back to the normal way
   0818 F8 0C              2371 	lda	hl,12(sp)
   081A 5E                 2372 	ld	e,(hl)
   081B 23                 2373 	inc	hl
   081C 56                 2374 	ld	d,(hl)
   081D 21 01 00           2375 	ld	hl,#0x0001
   0820 19                 2376 	add	hl,de
   0821 7D                 2377 	ld	a,l
   0822 54                 2378 	ld	d,h
   0823 F8 08              2379 	lda	hl,8(sp)
   0825 22                 2380 	ld	(hl+),a
   0826 72                 2381 	ld	(hl),d
                           2382 ;	lazer.c 171
                           2383 ;	genGoto
   0827 C3 68 08           2384 	jp	00115$
                           2385 ;	lazer.c 176
                           2386 ;	genLabel
   082A                    2387 00110$:
                           2388 ;	lazer.c 173
                           2389 ;	genCmpEq
                           2390 ;	AOP_STK for _determine_lazer_path_row_1_1
                           2391 ; genCmpEq: left 2, right 2, result 0
   082A F8 0E              2392 	lda	hl,14(sp)
   082C 7E                 2393 	ld	a,(hl)
   082D FE 07              2394 	cp	a,#0x07
   082F C2 38 08           2395 	jp	nz,00155$
   0832 23                 2396 	inc	hl
   0833 7E                 2397 	ld	a,(hl)
   0834 B7                 2398 	or	a,a
   0835 CA 68 08           2399 	jp	z,00115$
   0838                    2400 00155$:
                           2401 ;	lazer.c 174
                           2402 ;	genPlus
                           2403 ;	AOP_STK for _determine_lazer_path_row_1_1
                           2404 ;	AOP_STK for _determine_lazer_path_next_row_1_1
                           2405 ;	genPlusIncr
                           2406 ;	Can't optimise plus by inc, falling back to the normal way
   0838 F8 0E              2407 	lda	hl,14(sp)
   083A 5E                 2408 	ld	e,(hl)
   083B 23                 2409 	inc	hl
   083C 56                 2410 	ld	d,(hl)
   083D 21 01 00           2411 	ld	hl,#0x0001
   0840 19                 2412 	add	hl,de
   0841 7D                 2413 	ld	a,l
   0842 54                 2414 	ld	d,h
   0843 F8 0A              2415 	lda	hl,10(sp)
   0845 22                 2416 	ld	(hl+),a
   0846 72                 2417 	ld	(hl),d
                           2418 ;	lazer.c 176
                           2419 ;	genGoto
   0847 C3 68 08           2420 	jp	00115$
                           2421 ;	lazer.c 181
                           2422 ;	genLabel
   084A                    2423 00113$:
                           2424 ;	lazer.c 178
                           2425 ;	genCmpEq
                           2426 ;	AOP_STK for _determine_lazer_path_col_1_1
                           2427 ; genCmpEq: left 2, right 2, result 0
   084A F8 0C              2428 	lda	hl,12(sp)
   084C 2A                 2429 	ld	a,(hl+)
   084D B6                 2430 	or	a,(hl)
   084E CA 68 08           2431 	jp	z,00115$
   0851                    2432 00156$:
                           2433 ;	lazer.c 179
                           2434 ;	genMinus
                           2435 ;	AOP_STK for _determine_lazer_path_col_1_1
                           2436 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   0851 F8 0C              2437 	lda	hl,12(sp)
   0853 5E                 2438 	ld	e,(hl)
   0854 23                 2439 	inc	hl
   0855 56                 2440 	ld	d,(hl)
   0856 21 01 00           2441 	ld	hl,#0x0001
   0859 7B                 2442 	ld	a,e
   085A 95                 2443 	sub	a,l
   085B 5F                 2444 	ld	e,a
   085C 7A                 2445 	ld	a,d
   085D 9C                 2446 	sbc	a,h
   085E F8 09              2447 	lda	hl,9(sp)
   0860 32                 2448 	ld      (hl-),a
   0861 73                 2449 	ld	(hl),e
                           2450 ;	lazer.c 181
                           2451 ;	genGoto
   0862 C3 68 08           2452 	jp	00115$
                           2453 ;	lazer.c 183
                           2454 ;	genLabel
   0865                    2455 00114$:
                           2456 ;	genRet
   0865 C3 CF 09           2457 	jp	00130$
                           2458 ;	lazer.c 184
                           2459 ;	genLabel
   0868                    2460 00115$:
                           2461 ;	lazer.c 187
                           2462 ;	genCmpEq
                           2463 ;	AOP_STK for _determine_lazer_path_next_row_1_1
                           2464 ;	AOP_STK for _determine_lazer_path_row_1_1
                           2465 ; genCmpEq: left 2, right 2, result 0
   0868 F8 0E              2466 	lda	hl,14(sp)
   086A 7E                 2467 	ld	a,(hl)
   086B F8 0A              2468 	lda	hl,10(sp)
   086D BE                 2469 	cp	(hl)
   086E 20 0A              2470 	jr	nz,00157$
   0870 F8 0F              2471 	lda	hl,15(sp)
   0872 7E                 2472 	ld	a,(hl)
   0873 F8 0B              2473 	lda	hl,11(sp)
   0875 BE                 2474 	cp	(hl)
   0876 20 02              2475 	jr	nz,00157$
   0878 18 03              2476 	jr	00158$
   087A                    2477 00157$:
   087A C3 95 08           2478 	jp	00117$
   087D                    2479 00158$:
                           2480 ;	genCmpEq
                           2481 ;	AOP_STK for _determine_lazer_path_next_col_1_1
                           2482 ;	AOP_STK for _determine_lazer_path_col_1_1
                           2483 ; genCmpEq: left 2, right 2, result 0
   087D F8 0C              2484 	lda	hl,12(sp)
   087F 7E                 2485 	ld	a,(hl)
   0880 F8 08              2486 	lda	hl,8(sp)
   0882 BE                 2487 	cp	(hl)
   0883 20 0A              2488 	jr	nz,00159$
   0885 F8 0D              2489 	lda	hl,13(sp)
   0887 7E                 2490 	ld	a,(hl)
   0888 F8 09              2491 	lda	hl,9(sp)
   088A BE                 2492 	cp	(hl)
   088B 20 02              2493 	jr	nz,00159$
   088D 18 03              2494 	jr	00160$
   088F                    2495 00159$:
   088F C3 95 08           2496 	jp	00117$
   0892                    2497 00160$:
                           2498 ;	lazer.c 188
                           2499 ;	genRet
   0892 C3 CF 09           2500 	jp	00130$
                           2501 ;	genLabel
   0895                    2502 00117$:
                           2503 ;	lazer.c 191
                           2504 ;	genIpush
                           2505 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           2506 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   0895 F8 08              2507 	lda	hl,8(sp)
   0897 2A                 2508 	ld	a,(hl+)
   0898 66                 2509 	ld	h,(hl)
   0899 6F                 2510 	ld	l,a
   089A E5                 2511 	push	hl
                           2512 ;	genIpush
                           2513 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   089B F8 0C              2514 	lda	hl,12(sp)
   089D 2A                 2515 	ld	a,(hl+)
   089E 66                 2516 	ld	h,(hl)
   089F 6F                 2517 	ld	l,a
   08A0 E5                 2518 	push	hl
                           2519 ;	genCall
   08A1 CD EE 04           2520 	call	_row_col_to_cel
                           2521 ;	AOP_STK for _determine_lazer_path_next_cell_1_1
   08A4 F8 0B              2522 	lda	hl,11(sp)
   08A6 72                 2523 	ld	(hl),d
   08A7 2B                 2524 	dec	hl
   08A8 73                 2525 	ld	(hl),e
   08A9 E8 04              2526 	lda	sp,4(sp)
                           2527 ;	genAssign
                           2528 ;	AOP_STK for _determine_lazer_path_next_cell_1_1
                           2529 ;	(registers are the same)
                           2530 ;	lazer.c 193
                           2531 ;	genPlus
                           2532 ;	AOP_STK for 
                           2533 ;	AOP_STK for _determine_lazer_path_next_cell_1_1
                           2534 ;	Can't optimise plus by inc, falling back to the normal way
   08AB F8 12              2535 	lda	hl,18(sp)
   08AD 5E                 2536 	ld	e,(hl)
   08AE 23                 2537 	inc	hl
   08AF 56                 2538 	ld	d,(hl)
   08B0 F8 06              2539 	lda	hl,6(sp)
   08B2 2A                 2540 	ld	a,(hl+)
   08B3 66                 2541 	ld	h,(hl)
   08B4 6F                 2542 	ld	l,a
   08B5 19                 2543 	add	hl,de
   08B6 4D                 2544 	ld	c,l
   08B7 44                 2545 	ld	b,h
                           2546 ;	genPointerGet
   08B8 0A                 2547 	ld	a,(bc)
   08B9 4F                 2548 	ld	c,a
                           2549 ;	genAssign
                           2550 ;	AOP_STK for _determine_lazer_path_next_object_1_1
   08BA F8 04              2551 	lda	hl,4(sp)
   08BC 71                 2552 	ld	(hl),c
                           2553 ;	lazer.c 194
                           2554 ;	genIpush
                           2555 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           2556 ;	AOP_STK for 
   08BD F8 16              2557 	lda	hl,22(sp)
   08BF 7E                 2558 	ld	a,(hl)
   08C0 F5                 2559 	push	af
   08C1 33                 2560 	inc	sp
                           2561 ;	genIpush
                           2562 ;	AOP_STK for _determine_lazer_path_next_object_1_1
   08C2 F8 05              2563 	lda	hl,5(sp)
   08C4 7E                 2564 	ld	a,(hl)
   08C5 F5                 2565 	push	af
   08C6 33                 2566 	inc	sp
                           2567 ;	genCall
   08C7 CD 68 06           2568 	call	_determine_next_direction
   08CA 43                 2569 	ld	b,e
   08CB E8 02              2570 	lda	sp,2(sp)
                           2571 ;	genAssign
                           2572 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   08CD F8 05              2573 	lda	hl,5(sp)
   08CF 70                 2574 	ld	(hl),b
                           2575 ;	lazer.c 197
                           2576 ;	genPlus
                           2577 ;	AOP_STK for 
                           2578 ;	AOP_STK for _determine_lazer_path_next_cell_1_1
                           2579 ;	AOP_STK for _determine_lazer_path_sloc0_1_0
                           2580 ;	Can't optimise plus by inc, falling back to the normal way
   08D0 F8 14              2581 	lda	hl,20(sp)
   08D2 5E                 2582 	ld	e,(hl)
   08D3 23                 2583 	inc	hl
   08D4 56                 2584 	ld	d,(hl)
   08D5 F8 06              2585 	lda	hl,6(sp)
   08D7 2A                 2586 	ld	a,(hl+)
   08D8 66                 2587 	ld	h,(hl)
   08D9 6F                 2588 	ld	l,a
   08DA 19                 2589 	add	hl,de
   08DB 7D                 2590 	ld	a,l
   08DC 54                 2591 	ld	d,h
   08DD F8 00              2592 	lda	hl,0(sp)
                           2593 ;	genPointerGet
                           2594 ;	AOP_STK for _determine_lazer_path_sloc0_1_0
                           2595 ;	AOP_STK for _determine_lazer_path_curr_lazer_state_1_1
   08DF 22                 2596 	ld	(hl+),a
   08E0 72                 2597 	ld	(hl),d
   08E1 5F                 2598 	ld	e,a
   08E2 1A                 2599 	ld	a,(de)
   08E3 23                 2600 	inc	hl
   08E4 77                 2601 	ld	(hl),a
                           2602 ;	genAssign
                           2603 ;	AOP_STK for _determine_lazer_path_curr_lazer_state_1_1
                           2604 ;	(registers are the same)
                           2605 ;	lazer.c 200
                           2606 ;	genIpush
                           2607 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           2608 ;	AOP_STK for 
   08E5 F8 16              2609 	lda	hl,22(sp)
   08E7 7E                 2610 	ld	a,(hl)
   08E8 F5                 2611 	push	af
   08E9 33                 2612 	inc	sp
                           2613 ;	genIpush
                           2614 ;	AOP_STK for _determine_lazer_path_next_object_1_1
   08EA F8 05              2615 	lda	hl,5(sp)
   08EC 7E                 2616 	ld	a,(hl)
   08ED F5                 2617 	push	af
   08EE 33                 2618 	inc	sp
                           2619 ;	genCall
   08EF CD 11 05           2620 	call	_determine_next_lazer_stat
                           2621 ;	AOP_STK for _determine_lazer_path_next_lazer_state_1_1
   08F2 F8 05              2622 	lda	hl,5(sp)
   08F4 73                 2623 	ld	(hl),e
   08F5 E8 02              2624 	lda	sp,2(sp)
                           2625 ;	genAssign
                           2626 ;	AOP_STK for _determine_lazer_path_next_lazer_state_1_1
   08F7 F8 03              2627 	lda	hl,3(sp)
   08F9 4E                 2628 	ld	c,(hl)
                           2629 ;	lazer.c 201
                           2630 ;	genPointerGet
                           2631 ;	AOP_STK for _determine_lazer_path_sloc0_1_0
   08FA F8 00              2632 	lda	hl,0(sp)
   08FC 5E                 2633 	ld	e,(hl)
   08FD 23                 2634 	inc	hl
   08FE 56                 2635 	ld	d,(hl)
   08FF 1A                 2636 	ld	a,(de)
                           2637 ;	genOr
   0900 47                 2638 	ld	b,a
   0901 B1                 2639 	or	a,c
                           2640 ;	genAssign (pointer)
                           2641 ;	AOP_STK for _determine_lazer_path_sloc0_1_0
   0902 2B                 2642 	dec	hl
   0903 5E                 2643 	ld	e,(hl)
   0904 23                 2644 	inc	hl
   0905 56                 2645 	ld	d,(hl)
   0906 12                 2646 	ld	(de),a
                           2647 ;	lazer.c 204
                           2648 ;	genCmpEq
                           2649 ; genCmpEq: left 1, right 1, result 0
   0907 79                 2650 	ld	a,c
   0908 B7                 2651 	or	a,a
   0909 CA 20 09           2652 	jp	z,00119$
   090C                    2653 00161$:
                           2654 ;	genCmpEq
                           2655 ;	AOP_STK for _determine_lazer_path_curr_lazer_state_1_1
                           2656 ; genCmpEq: left 1, right 1, result 1
   090C F8 02              2657 	lda	hl,2(sp)
   090E 7E                 2658 	ld	a,(hl)
   090F B9                 2659 	cp	c
   0910 20 04              2660 	jr	nz,00162$
   0912 3E 01              2661 	ld	a,#0x01
   0914 18 01              2662 	jr	00163$
   0916                    2663 00162$:
   0916 AF                 2664 	xor	a,a
   0917                    2665 00163$:
   0917 4F                 2666 	ld	c,a
                           2667 ;	genAnd
                           2668 ;	AOP_STK for _determine_lazer_path_curr_lazer_state_1_1
   0918 F8 02              2669 	lda	hl,2(sp)
   091A 7E                 2670 	ld	a,(hl)
   091B A1                 2671 	and	a,c
                           2672 ;	genIfx
   091C B7                 2673 	or	a,a
   091D CA 23 09           2674 	jp	z,00120$
                           2675 ;	genLabel
   0920                    2676 00119$:
                           2677 ;	lazer.c 205
                           2678 ;	genRet
   0920 C3 CF 09           2679 	jp	00130$
                           2680 ;	genLabel
   0923                    2681 00120$:
                           2682 ;	lazer.c 210
                           2683 ;	genAnd
                           2684 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   0923 F8 05              2685 	lda	hl,5(sp)
   0925 7E                 2686 	ld	a,(hl)
   0926 E6 01              2687 	and	a,#0x01
                           2688 ;	genCmpEq
                           2689 ; genCmpEq: left 1, right 1, result 0
   0928 4F                 2690 	ld	c,a
   0929 B7                 2691 	or	a,a
   092A CA 4E 09           2692 	jp	z,00123$
   092D                    2693 00164$:
                           2694 ;	lazer.c 211
                           2695 ;	genCast
                           2696 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   092D F8 0A              2697 	lda	hl,10(sp)
   092F 4E                 2698 	ld	c,(hl)
                           2699 ;	genCast
                           2700 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   0930 2B                 2701 	dec	hl
   0931 2B                 2702 	dec	hl
   0932 46                 2703 	ld	b,(hl)
                           2704 ;	genIpush
                           2705 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0933 79                 2706 	ld	a,c
   0934 F5                 2707 	push	af
   0935 33                 2708 	inc	sp
                           2709 ;	genIpush
   0936 78                 2710 	ld	a,b
   0937 F5                 2711 	push	af
   0938 33                 2712 	inc	sp
                           2713 ;	genIpush
   0939 3E 01              2714 	ld	a,#0x01
   093B F5                 2715 	push	af
   093C 33                 2716 	inc	sp
                           2717 ;	genIpush
                           2718 ;	AOP_STK for 
   093D F8 17              2719 	lda	hl,23(sp)
   093F 2A                 2720 	ld	a,(hl+)
   0940 66                 2721 	ld	h,(hl)
   0941 6F                 2722 	ld	l,a
   0942 E5                 2723 	push	hl
                           2724 ;	genIpush
                           2725 ;	AOP_STK for 
   0943 F8 17              2726 	lda	hl,23(sp)
   0945 2A                 2727 	ld	a,(hl+)
   0946 66                 2728 	ld	h,(hl)
   0947 6F                 2729 	ld	l,a
   0948 E5                 2730 	push	hl
                           2731 ;	genCall
   0949 CD A2 07           2732 	call	_determine_lazer_path
   094C E8 07              2733 	lda	sp,7(sp)
                           2734 ;	genLabel
   094E                    2735 00123$:
                           2736 ;	lazer.c 214
                           2737 ;	genAnd
                           2738 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   094E F8 05              2739 	lda	hl,5(sp)
   0950 7E                 2740 	ld	a,(hl)
   0951 E6 02              2741 	and	a,#0x02
                           2742 ;	genCmpEq
                           2743 ; genCmpEq: left 1, right 1, result 0
   0953 4F                 2744 	ld	c,a
   0954 B7                 2745 	or	a,a
   0955 CA 79 09           2746 	jp	z,00125$
   0958                    2747 00165$:
                           2748 ;	lazer.c 215
                           2749 ;	genCast
                           2750 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   0958 F8 0A              2751 	lda	hl,10(sp)
   095A 4E                 2752 	ld	c,(hl)
                           2753 ;	genCast
                           2754 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   095B 2B                 2755 	dec	hl
   095C 2B                 2756 	dec	hl
   095D 46                 2757 	ld	b,(hl)
                           2758 ;	genIpush
                           2759 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   095E 79                 2760 	ld	a,c
   095F F5                 2761 	push	af
   0960 33                 2762 	inc	sp
                           2763 ;	genIpush
   0961 78                 2764 	ld	a,b
   0962 F5                 2765 	push	af
   0963 33                 2766 	inc	sp
                           2767 ;	genIpush
   0964 3E 02              2768 	ld	a,#0x02
   0966 F5                 2769 	push	af
   0967 33                 2770 	inc	sp
                           2771 ;	genIpush
                           2772 ;	AOP_STK for 
   0968 F8 17              2773 	lda	hl,23(sp)
   096A 2A                 2774 	ld	a,(hl+)
   096B 66                 2775 	ld	h,(hl)
   096C 6F                 2776 	ld	l,a
   096D E5                 2777 	push	hl
                           2778 ;	genIpush
                           2779 ;	AOP_STK for 
   096E F8 17              2780 	lda	hl,23(sp)
   0970 2A                 2781 	ld	a,(hl+)
   0971 66                 2782 	ld	h,(hl)
   0972 6F                 2783 	ld	l,a
   0973 E5                 2784 	push	hl
                           2785 ;	genCall
   0974 CD A2 07           2786 	call	_determine_lazer_path
   0977 E8 07              2787 	lda	sp,7(sp)
                           2788 ;	genLabel
   0979                    2789 00125$:
                           2790 ;	lazer.c 218
                           2791 ;	genAnd
                           2792 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   0979 F8 05              2793 	lda	hl,5(sp)
   097B 7E                 2794 	ld	a,(hl)
   097C E6 04              2795 	and	a,#0x04
                           2796 ;	genCmpEq
                           2797 ; genCmpEq: left 1, right 1, result 0
   097E 4F                 2798 	ld	c,a
   097F B7                 2799 	or	a,a
   0980 CA A4 09           2800 	jp	z,00127$
   0983                    2801 00166$:
                           2802 ;	lazer.c 219
                           2803 ;	genCast
                           2804 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   0983 F8 0A              2805 	lda	hl,10(sp)
   0985 4E                 2806 	ld	c,(hl)
                           2807 ;	genCast
                           2808 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   0986 2B                 2809 	dec	hl
   0987 2B                 2810 	dec	hl
   0988 46                 2811 	ld	b,(hl)
                           2812 ;	genIpush
                           2813 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0989 79                 2814 	ld	a,c
   098A F5                 2815 	push	af
   098B 33                 2816 	inc	sp
                           2817 ;	genIpush
   098C 78                 2818 	ld	a,b
   098D F5                 2819 	push	af
   098E 33                 2820 	inc	sp
                           2821 ;	genIpush
   098F 3E 04              2822 	ld	a,#0x04
   0991 F5                 2823 	push	af
   0992 33                 2824 	inc	sp
                           2825 ;	genIpush
                           2826 ;	AOP_STK for 
   0993 F8 17              2827 	lda	hl,23(sp)
   0995 2A                 2828 	ld	a,(hl+)
   0996 66                 2829 	ld	h,(hl)
   0997 6F                 2830 	ld	l,a
   0998 E5                 2831 	push	hl
                           2832 ;	genIpush
                           2833 ;	AOP_STK for 
   0999 F8 17              2834 	lda	hl,23(sp)
   099B 2A                 2835 	ld	a,(hl+)
   099C 66                 2836 	ld	h,(hl)
   099D 6F                 2837 	ld	l,a
   099E E5                 2838 	push	hl
                           2839 ;	genCall
   099F CD A2 07           2840 	call	_determine_lazer_path
   09A2 E8 07              2841 	lda	sp,7(sp)
                           2842 ;	genLabel
   09A4                    2843 00127$:
                           2844 ;	lazer.c 222
                           2845 ;	genAnd
                           2846 ;	AOP_STK for _determine_lazer_path_next_direction_1_1
   09A4 F8 05              2847 	lda	hl,5(sp)
   09A6 7E                 2848 	ld	a,(hl)
   09A7 E6 08              2849 	and	a,#0x08
                           2850 ;	genCmpEq
                           2851 ; genCmpEq: left 1, right 1, result 0
   09A9 4F                 2852 	ld	c,a
   09AA B7                 2853 	or	a,a
   09AB CA CF 09           2854 	jp	z,00130$
   09AE                    2855 00167$:
                           2856 ;	lazer.c 223
                           2857 ;	genCast
                           2858 ;	AOP_STK for _determine_lazer_path_next_row_1_1
   09AE F8 0A              2859 	lda	hl,10(sp)
   09B0 4E                 2860 	ld	c,(hl)
                           2861 ;	genCast
                           2862 ;	AOP_STK for _determine_lazer_path_next_col_1_1
   09B1 2B                 2863 	dec	hl
   09B2 2B                 2864 	dec	hl
   09B3 46                 2865 	ld	b,(hl)
                           2866 ;	genIpush
                           2867 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09B4 79                 2868 	ld	a,c
   09B5 F5                 2869 	push	af
   09B6 33                 2870 	inc	sp
                           2871 ;	genIpush
   09B7 78                 2872 	ld	a,b
   09B8 F5                 2873 	push	af
   09B9 33                 2874 	inc	sp
                           2875 ;	genIpush
   09BA 3E 08              2876 	ld	a,#0x08
   09BC F5                 2877 	push	af
   09BD 33                 2878 	inc	sp
                           2879 ;	genIpush
                           2880 ;	AOP_STK for 
   09BE F8 17              2881 	lda	hl,23(sp)
   09C0 2A                 2882 	ld	a,(hl+)
   09C1 66                 2883 	ld	h,(hl)
   09C2 6F                 2884 	ld	l,a
   09C3 E5                 2885 	push	hl
                           2886 ;	genIpush
                           2887 ;	AOP_STK for 
   09C4 F8 17              2888 	lda	hl,23(sp)
   09C6 2A                 2889 	ld	a,(hl+)
   09C7 66                 2890 	ld	h,(hl)
   09C8 6F                 2891 	ld	l,a
   09C9 E5                 2892 	push	hl
                           2893 ;	genCall
   09CA CD A2 07           2894 	call	_determine_lazer_path
   09CD E8 07              2895 	lda	sp,7(sp)
                           2896 ;	genLabel
   09CF                    2897 00130$:
                           2898 ;	genEndFunction
   09CF E8 10              2899 	lda	sp,16(sp)
   09D1 C9                 2900 	ret
   09D2                    2901 ___determine_lazer_path_end:
                           2902 ;	lazer.c 227
                           2903 ;	genLabel
                           2904 ;	genFunction
                           2905 ;	---------------------------------
                           2906 ; Function project_lazer
                           2907 ; ---------------------------------
   09D2                    2908 ___project_lazer_start:
   09D2                    2909 _project_lazer:
   09D2 E8 FB              2910 	lda	sp,-5(sp)
                           2911 ;	lazer.c 236
                           2912 ;	genAssign
                           2913 ;	AOP_STK for _project_lazer_startIdx_1_1
   09D4 F8 03              2914 	lda	hl,3(sp)
   09D6 36 00              2915 	ld	(hl),#0x00
   09D8 23                 2916 	inc	hl
   09D9 36 00              2917 	ld	(hl),#0x00
                           2918 ;	genLabel
   09DB                    2919 00107$:
                           2920 ;	lazer.c 237
                           2921 ;	genCmpEq
                           2922 ;	AOP_STK for _project_lazer_startIdx_1_1
                           2923 ; genCmpEq: left 2, right 2, result 0
   09DB F8 03              2924 	lda	hl,3(sp)
   09DD 7E                 2925 	ld	a,(hl)
   09DE FE 48              2926 	cp	a,#0x48
   09E0 C2 E9 09           2927 	jp	nz,00118$
   09E3 23                 2928 	inc	hl
   09E4 7E                 2929 	ld	a,(hl)
   09E5 B7                 2930 	or	a,a
   09E6 CA 0B 0A           2931 	jp	z,00110$
   09E9                    2932 00118$:
                           2933 ;	lazer.c 238
                           2934 ;	genPlus
                           2935 ;	AOP_STK for 
                           2936 ;	AOP_STK for _project_lazer_startIdx_1_1
                           2937 ;	AOP_STK for _project_lazer_sloc0_1_0
                           2938 ;	Can't optimise plus by inc, falling back to the normal way
   09E9 F8 09              2939 	lda	hl,9(sp)
   09EB 5E                 2940 	ld	e,(hl)
   09EC 23                 2941 	inc	hl
   09ED 56                 2942 	ld	d,(hl)
   09EE F8 03              2943 	lda	hl,3(sp)
   09F0 2A                 2944 	ld	a,(hl+)
   09F1 66                 2945 	ld	h,(hl)
   09F2 6F                 2946 	ld	l,a
   09F3 19                 2947 	add	hl,de
   09F4 7D                 2948 	ld	a,l
   09F5 54                 2949 	ld	d,h
   09F6 F8 00              2950 	lda	hl,0(sp)
   09F8 22                 2951 	ld	(hl+),a
   09F9 72                 2952 	ld	(hl),d
                           2953 ;	genAssign (pointer)
                           2954 ;	AOP_STK for _project_lazer_sloc0_1_0
   09FA 2B                 2955 	dec	hl
   09FB 5E                 2956 	ld	e,(hl)
   09FC 23                 2957 	inc	hl
   09FD 56                 2958 	ld	d,(hl)
   09FE 3E 00              2959 	ld	a,#0x00
   0A00 12                 2960 	ld	(de),a
                           2961 ;	lazer.c 237
                           2962 ;	genPlus
                           2963 ;	AOP_STK for _project_lazer_startIdx_1_1
                           2964 ;	genPlusIncr
   0A01 23                 2965 	inc	hl
   0A02 23                 2966 	inc	hl
   0A03 34                 2967 	inc	(hl)
   0A04 20 02              2968 	jr	nz,00119$
   0A06 23                 2969 	inc	hl
   0A07 34                 2970 	inc	(hl)
   0A08                    2971 00119$:
                           2972 ;	genGoto
   0A08 C3 DB 09           2973 	jp	00107$
                           2974 ;	genLabel
   0A0B                    2975 00110$:
                           2976 ;	lazer.c 245
                           2977 ;	genAssign
                           2978 ;	AOP_STK for _project_lazer_startIdx_1_1
   0A0B F8 03              2979 	lda	hl,3(sp)
   0A0D 36 00              2980 	ld	(hl),#0x00
   0A0F 23                 2981 	inc	hl
   0A10 36 00              2982 	ld	(hl),#0x00
                           2983 ;	genLabel
   0A12                    2984 00103$:
                           2985 ;	lazer.c 246
                           2986 ;	genCmpEq
                           2987 ;	AOP_STK for _project_lazer_startIdx_1_1
                           2988 ; genCmpEq: left 2, right 2, result 0
   0A12 F8 03              2989 	lda	hl,3(sp)
   0A14 7E                 2990 	ld	a,(hl)
   0A15 FE 48              2991 	cp	a,#0x48
   0A17 C2 20 0A           2992 	jp	nz,00120$
   0A1A 23                 2993 	inc	hl
   0A1B 7E                 2994 	ld	a,(hl)
   0A1C B7                 2995 	or	a,a
   0A1D CA 43 0A           2996 	jp	z,00106$
   0A20                    2997 00120$:
                           2998 ;	lazer.c 247
                           2999 ;	genPlus
                           3000 ;	AOP_STK for 
                           3001 ;	AOP_STK for _project_lazer_startIdx_1_1
                           3002 ;	AOP_STK for _project_lazer_sloc0_1_0
                           3003 ;	Can't optimise plus by inc, falling back to the normal way
   0A20 F8 07              3004 	lda	hl,7(sp)
   0A22 5E                 3005 	ld	e,(hl)
   0A23 23                 3006 	inc	hl
   0A24 56                 3007 	ld	d,(hl)
   0A25 F8 03              3008 	lda	hl,3(sp)
   0A27 2A                 3009 	ld	a,(hl+)
   0A28 66                 3010 	ld	h,(hl)
   0A29 6F                 3011 	ld	l,a
   0A2A 19                 3012 	add	hl,de
   0A2B 7D                 3013 	ld	a,l
   0A2C 54                 3014 	ld	d,h
   0A2D F8 00              3015 	lda	hl,0(sp)
                           3016 ;	genPointerGet
                           3017 ;	AOP_STK for _project_lazer_sloc0_1_0
   0A2F 22                 3018 	ld	(hl+),a
   0A30 72                 3019 	ld	(hl),d
   0A31 5F                 3020 	ld	e,a
   0A32 1A                 3021 	ld	a,(de)
                           3022 ;	genCmpEq
                           3023 ; genCmpEq: left 1, right 1, result 0
   0A33 4F                 3024 	ld	c,a
   0A34 FE 80              3025 	cp	a,#0x80
   0A36 CA 43 0A           3026 	jp	z,00106$
   0A39                    3027 00121$:
                           3028 ;	lazer.c 246
                           3029 ;	genPlus
                           3030 ;	AOP_STK for _project_lazer_startIdx_1_1
                           3031 ;	genPlusIncr
   0A39 F8 03              3032 	lda	hl,3(sp)
   0A3B 34                 3033 	inc	(hl)
   0A3C 20 02              3034 	jr	nz,00122$
   0A3E 23                 3035 	inc	hl
   0A3F 34                 3036 	inc	(hl)
   0A40                    3037 00122$:
                           3038 ;	genGoto
   0A40 C3 12 0A           3039 	jp	00103$
                           3040 ;	genLabel
   0A43                    3041 00106$:
                           3042 ;	lazer.c 252
                           3043 ;	genIpush
                           3044 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A43 21 09 00           3045 	ld	hl,#0x0009
   0A46 E5                 3046 	push	hl
                           3047 ;	genIpush
                           3048 ;	AOP_STK for _project_lazer_startIdx_1_1
   0A47 F8 05              3049 	lda	hl,5(sp)
   0A49 2A                 3050 	ld	a,(hl+)
   0A4A 66                 3051 	ld	h,(hl)
   0A4B 6F                 3052 	ld	l,a
   0A4C E5                 3053 	push	hl
                           3054 ;	genCall
   0A4D CD 00 00           3055 	call	__moduint_rrx_s
   0A50 42                 3056 	ld	b,d
   0A51 4B                 3057 	ld	c,e
   0A52 E8 04              3058 	lda	sp,4(sp)
                           3059 ;	genCast
                           3060 ;	AOP_STK for _project_lazer_x_1_1
   0A54 F8 02              3061 	lda	hl,2(sp)
   0A56 71                 3062 	ld	(hl),c
                           3063 ;	lazer.c 253
                           3064 ;	genIpush
                           3065 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A57 21 09 00           3066 	ld	hl,#0x0009
   0A5A E5                 3067 	push	hl
                           3068 ;	genIpush
                           3069 ;	AOP_STK for _project_lazer_startIdx_1_1
   0A5B F8 05              3070 	lda	hl,5(sp)
   0A5D 2A                 3071 	ld	a,(hl+)
   0A5E 66                 3072 	ld	h,(hl)
   0A5F 6F                 3073 	ld	l,a
   0A60 E5                 3074 	push	hl
                           3075 ;	genCall
   0A61 CD 00 00           3076 	call	__divuint_rrx_s
   0A64 4A                 3077 	ld	c,d
   0A65 43                 3078 	ld	b,e
   0A66 E8 04              3079 	lda	sp,4(sp)
                           3080 ;	genCast
                           3081 ; Removed redundent load
                           3082 ;	lazer.c 260
                           3083 ;	genIpush
                           3084 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A68 78                 3085 	ld	a,b
   0A69 F5                 3086 	push	af
   0A6A 33                 3087 	inc	sp
                           3088 ;	genIpush
                           3089 ;	AOP_STK for _project_lazer_x_1_1
   0A6B F8 03              3090 	lda	hl,3(sp)
   0A6D 7E                 3091 	ld	a,(hl)
   0A6E F5                 3092 	push	af
   0A6F 33                 3093 	inc	sp
                           3094 ;	genIpush
   0A70 3E 01              3095 	ld	a,#0x01
   0A72 F5                 3096 	push	af
   0A73 33                 3097 	inc	sp
                           3098 ;	genIpush
                           3099 ;	AOP_STK for 
   0A74 F8 0C              3100 	lda	hl,12(sp)
   0A76 2A                 3101 	ld	a,(hl+)
   0A77 66                 3102 	ld	h,(hl)
   0A78 6F                 3103 	ld	l,a
   0A79 E5                 3104 	push	hl
                           3105 ;	genIpush
                           3106 ;	AOP_STK for 
   0A7A F8 0C              3107 	lda	hl,12(sp)
   0A7C 2A                 3108 	ld	a,(hl+)
   0A7D 66                 3109 	ld	h,(hl)
   0A7E 6F                 3110 	ld	l,a
   0A7F E5                 3111 	push	hl
                           3112 ;	genCall
   0A80 CD A2 07           3113 	call	_determine_lazer_path
   0A83 E8 07              3114 	lda	sp,7(sp)
                           3115 ;	genLabel
   0A85                    3116 00111$:
                           3117 ;	genEndFunction
   0A85 E8 05              3118 	lda	sp,5(sp)
   0A87 C9                 3119 	ret
   0A88                    3120 ___project_lazer_end:
                           3121 ;	background.c 10
                           3122 ;	genLabel
                           3123 ;	genFunction
                           3124 ;	---------------------------------
                           3125 ; Function init_background
                           3126 ; ---------------------------------
   0A88                    3127 ___init_background_start:
   0A88                    3128 _init_background:
   0A88 E8 FB              3129 	lda	sp,-5(sp)
                           3130 ;	background.c 13
                           3131 ;	genAssign
                           3132 ;	AOP_STK for _init_background_i_1_1
   0A8A F8 04              3133 	lda	hl,4(sp)
   0A8C 36 00              3134 	ld	(hl),#0x00
                           3135 ;	genLabel
   0A8E                    3136 00101$:
                           3137 ;	genCmpEq
                           3138 ;	AOP_STK for _init_background_i_1_1
                           3139 ; genCmpEq: left 1, right 1, result 0
   0A8E F8 04              3140 	lda	hl,4(sp)
   0A90 7E                 3141 	ld	a,(hl)
   0A91 FE 48              3142 	cp	a,#0x48
   0A93 CA B1 0A           3143 	jp	z,00104$
   0A96                    3144 00121$:
                           3145 ;	background.c 14
                           3146 ;	genPlus
                           3147 ;	AOP_STK for _init_background_i_1_1
                           3148 ;	AOP_STK for _init_background_sloc0_1_0
                           3149 ;	Can't optimise plus by inc, falling back to the normal way
   0A96 11 B4 01           3150 	ld	de,#_lazer_map
   0A99 F8 04              3151 	lda	hl,4(sp)
   0A9B 6E                 3152 	ld	l,(hl)
   0A9C 26 00              3153 	ld	h,#0x00
   0A9E 19                 3154 	add	hl,de
   0A9F 7D                 3155 	ld	a,l
   0AA0 54                 3156 	ld	d,h
   0AA1 F8 02              3157 	lda	hl,2(sp)
   0AA3 22                 3158 	ld	(hl+),a
   0AA4 72                 3159 	ld	(hl),d
                           3160 ;	genAssign (pointer)
                           3161 ;	AOP_STK for _init_background_sloc0_1_0
   0AA5 2B                 3162 	dec	hl
   0AA6 5E                 3163 	ld	e,(hl)
   0AA7 23                 3164 	inc	hl
   0AA8 56                 3165 	ld	d,(hl)
   0AA9 3E 00              3166 	ld	a,#0x00
   0AAB 12                 3167 	ld	(de),a
                           3168 ;	background.c 13
                           3169 ;	genPlus
                           3170 ;	AOP_STK for _init_background_i_1_1
                           3171 ;	genPlusIncr
   0AAC 23                 3172 	inc	hl
   0AAD 34                 3173 	inc	(hl)
                           3174 ;	genGoto
   0AAE C3 8E 0A           3175 	jp	00101$
                           3176 ;	genLabel
   0AB1                    3177 00104$:
                           3178 ;	background.c 17
                           3179 ;	genAssign
                           3180 ;	AOP_STK for 
   0AB1 F8 07              3181 	lda	hl,7(sp)
   0AB3 46                 3182 	ld	b,(hl)
   0AB4 23                 3183 	inc	hl
   0AB5 4E                 3184 	ld	c,(hl)
                           3185 ;	genAssign (pointer)
   0AB6 58                 3186 	ld	e,b
   0AB7 51                 3187 	ld	d,c
   0AB8 3E 54              3188 	ld	a,#0x54
   0ABA 12                 3189 	ld	(de),a
                           3190 ;	background.c 18
                           3191 ;	genPlus
                           3192 ;	genPlusIncr
                           3193 ;	Can't optimise plus by inc, falling back to the normal way
   0ABB 78                 3194 	ld	a,b
   0ABC C6 13              3195 	add	a,#0x13
   0ABE 6F                 3196 	ld	l,a
   0ABF 79                 3197 	ld	a,c
   0AC0 CE 00              3198 	adc	a,#0x00
   0AC2 67                 3199 	ld	h,a
                           3200 ;	genAssign (pointer)
   0AC3 36 55              3201 	ld	(hl),#0x55
                           3202 ;	background.c 19
                           3203 ;	genPlus
                           3204 ;	genPlusIncr
                           3205 ;	Can't optimise plus by inc, falling back to the normal way
   0AC5 78                 3206 	ld	a,b
   0AC6 C6 54              3207 	add	a,#0x54
   0AC8 6F                 3208 	ld	l,a
   0AC9 79                 3209 	ld	a,c
   0ACA CE 01              3210 	adc	a,#0x01
   0ACC 67                 3211 	ld	h,a
                           3212 ;	genAssign (pointer)
   0ACD 36 56              3213 	ld	(hl),#0x56
                           3214 ;	background.c 20
                           3215 ;	genPlus
                           3216 ;	genPlusIncr
                           3217 ;	Can't optimise plus by inc, falling back to the normal way
   0ACF 78                 3218 	ld	a,b
   0AD0 C6 67              3219 	add	a,#0x67
   0AD2 6F                 3220 	ld	l,a
   0AD3 79                 3221 	ld	a,c
   0AD4 CE 01              3222 	adc	a,#0x01
   0AD6 67                 3223 	ld	h,a
                           3224 ;	genAssign (pointer)
   0AD7 36 57              3225 	ld	(hl),#0x57
                           3226 ;	background.c 22
                           3227 ;	genAssign
                           3228 ;	AOP_STK for _init_background_i_1_1
   0AD9 F8 04              3229 	lda	hl,4(sp)
   0ADB 36 01              3230 	ld	(hl),#0x01
                           3231 ;	genLabel
   0ADD                    3232 00105$:
                           3233 ;	genCmpEq
                           3234 ;	AOP_STK for _init_background_i_1_1
                           3235 ; genCmpEq: left 1, right 1, result 0
   0ADD F8 04              3236 	lda	hl,4(sp)
   0ADF 7E                 3237 	ld	a,(hl)
   0AE0 FE 13              3238 	cp	a,#0x13
   0AE2 CA 28 0B           3239 	jp	z,00108$
   0AE5                    3240 00122$:
                           3241 ;	background.c 23
                           3242 ;	genPlus
                           3243 ;	AOP_STK for _init_background_i_1_1
                           3244 ;	AOP_STK for _init_background_sloc0_1_0
                           3245 ;	Can't optimise plus by inc, falling back to the normal way
   0AE5 58                 3246 	ld	e,b
   0AE6 51                 3247 	ld	d,c
   0AE7 F8 04              3248 	lda	hl,4(sp)
   0AE9 6E                 3249 	ld	l,(hl)
   0AEA 26 00              3250 	ld	h,#0x00
   0AEC 19                 3251 	add	hl,de
   0AED 7D                 3252 	ld	a,l
   0AEE 54                 3253 	ld	d,h
   0AEF F8 02              3254 	lda	hl,2(sp)
   0AF1 22                 3255 	ld	(hl+),a
   0AF2 72                 3256 	ld	(hl),d
                           3257 ;	genAssign (pointer)
                           3258 ;	AOP_STK for _init_background_sloc0_1_0
   0AF3 2B                 3259 	dec	hl
   0AF4 5E                 3260 	ld	e,(hl)
   0AF5 23                 3261 	inc	hl
   0AF6 56                 3262 	ld	d,(hl)
   0AF7 3E 50              3263 	ld	a,#0x50
   0AF9 12                 3264 	ld	(de),a
                           3265 ;	background.c 24
                           3266 ;	genCast
                           3267 ;	AOP_STK for _init_background_i_1_1
                           3268 ;	AOP_STK for _init_background_sloc0_1_0
   0AFA 23                 3269 	inc	hl
   0AFB 7E                 3270 	ld	a,(hl)
   0AFC 2B                 3271 	dec	hl
   0AFD 2B                 3272 	dec	hl
   0AFE 22                 3273 	ld	(hl+),a
   0AFF 36 00              3274 	ld	(hl),#0x00
                           3275 ;	genPlus
                           3276 ;	AOP_STK for _init_background_sloc0_1_0
                           3277 ;	AOP_STK for _init_background_sloc1_1_0
                           3278 ;	genPlusIncr
                           3279 ;	Can't optimise plus by inc, falling back to the normal way
   0B01 2B                 3280 	dec	hl
   0B02 5E                 3281 	ld	e,(hl)
   0B03 23                 3282 	inc	hl
   0B04 56                 3283 	ld	d,(hl)
   0B05 21 54 01           3284 	ld	hl,#0x0154
   0B08 19                 3285 	add	hl,de
   0B09 7D                 3286 	ld	a,l
   0B0A 54                 3287 	ld	d,h
   0B0B F8 00              3288 	lda	hl,0(sp)
   0B0D 22                 3289 	ld	(hl+),a
   0B0E 72                 3290 	ld	(hl),d
                           3291 ;	genPlus
                           3292 ;	AOP_STK for _init_background_sloc1_1_0
                           3293 ;	AOP_STK for _init_background_sloc0_1_0
                           3294 ;	Can't optimise plus by inc, falling back to the normal way
   0B0F 58                 3295 	ld	e,b
   0B10 51                 3296 	ld	d,c
   0B11 2B                 3297 	dec	hl
   0B12 2A                 3298 	ld	a,(hl+)
   0B13 66                 3299 	ld	h,(hl)
   0B14 6F                 3300 	ld	l,a
   0B15 19                 3301 	add	hl,de
   0B16 7D                 3302 	ld	a,l
   0B17 54                 3303 	ld	d,h
   0B18 F8 02              3304 	lda	hl,2(sp)
   0B1A 22                 3305 	ld	(hl+),a
   0B1B 72                 3306 	ld	(hl),d
                           3307 ;	genAssign (pointer)
                           3308 ;	AOP_STK for _init_background_sloc0_1_0
   0B1C 2B                 3309 	dec	hl
   0B1D 5E                 3310 	ld	e,(hl)
   0B1E 23                 3311 	inc	hl
   0B1F 56                 3312 	ld	d,(hl)
   0B20 3E 51              3313 	ld	a,#0x51
   0B22 12                 3314 	ld	(de),a
                           3315 ;	background.c 22
                           3316 ;	genPlus
                           3317 ;	AOP_STK for _init_background_i_1_1
                           3318 ;	genPlusIncr
   0B23 23                 3319 	inc	hl
   0B24 34                 3320 	inc	(hl)
                           3321 ;	genGoto
   0B25 C3 DD 0A           3322 	jp	00105$
                           3323 ;	genLabel
   0B28                    3324 00108$:
                           3325 ;	background.c 27
                           3326 ;	genAssign
                           3327 ;	AOP_STK for _init_background_i_1_1
   0B28 F8 04              3328 	lda	hl,4(sp)
   0B2A 36 01              3329 	ld	(hl),#0x01
                           3330 ;	genLabel
   0B2C                    3331 00109$:
                           3332 ;	genCmpEq
                           3333 ;	AOP_STK for _init_background_i_1_1
                           3334 ; genCmpEq: left 1, right 1, result 0
   0B2C F8 04              3335 	lda	hl,4(sp)
   0B2E 7E                 3336 	ld	a,(hl)
   0B2F FE 11              3337 	cp	a,#0x11
   0B31 CA 83 0B           3338 	jp	z,00113$
   0B34                    3339 00123$:
                           3340 ;	background.c 28
                           3341 ;	genMult
                           3342 ;	AOP_STK for _init_background_i_1_1
                           3343 ;	AOP_STK for _init_background_sloc1_1_0
   0B34 F8 04              3344 	lda	hl,4(sp)
   0B36 5E                 3345 	ld	e,(hl)
   0B37 16 00              3346 	ld	d,#0x00
   0B39 6B                 3347 	ld	l,e
   0B3A 62                 3348 	ld	h,d
   0B3B 29                 3349 	add	hl,hl
   0B3C 29                 3350 	add	hl,hl
   0B3D 19                 3351 	add	hl,de
   0B3E 29                 3352 	add	hl,hl
   0B3F 29                 3353 	add	hl,hl
   0B40 7D                 3354 	ld	a,l
   0B41 54                 3355 	ld	d,h
   0B42 F8 00              3356 	lda	hl,0(sp)
   0B44 22                 3357 	ld	(hl+),a
   0B45 72                 3358 	ld	(hl),d
                           3359 ;	genPlus
                           3360 ;	AOP_STK for _init_background_sloc1_1_0
                           3361 ;	AOP_STK for _init_background_sloc0_1_0
                           3362 ;	Can't optimise plus by inc, falling back to the normal way
   0B46 58                 3363 	ld	e,b
   0B47 51                 3364 	ld	d,c
   0B48 2B                 3365 	dec	hl
   0B49 2A                 3366 	ld	a,(hl+)
   0B4A 66                 3367 	ld	h,(hl)
   0B4B 6F                 3368 	ld	l,a
   0B4C 19                 3369 	add	hl,de
   0B4D 7D                 3370 	ld	a,l
   0B4E 54                 3371 	ld	d,h
   0B4F F8 02              3372 	lda	hl,2(sp)
   0B51 22                 3373 	ld	(hl+),a
   0B52 72                 3374 	ld	(hl),d
                           3375 ;	genAssign (pointer)
                           3376 ;	AOP_STK for _init_background_sloc0_1_0
   0B53 2B                 3377 	dec	hl
   0B54 5E                 3378 	ld	e,(hl)
   0B55 23                 3379 	inc	hl
   0B56 56                 3380 	ld	d,(hl)
   0B57 3E 52              3381 	ld	a,#0x52
   0B59 12                 3382 	ld	(de),a
                           3383 ;	background.c 29
                           3384 ;	genPlus
                           3385 ;	AOP_STK for _init_background_sloc1_1_0
                           3386 ;	AOP_STK for _init_background_sloc0_1_0
                           3387 ;	genPlusIncr
                           3388 ;	Can't optimise plus by inc, falling back to the normal way
   0B5A F8 00              3389 	lda	hl,0(sp)
   0B5C 5E                 3390 	ld	e,(hl)
   0B5D 23                 3391 	inc	hl
   0B5E 56                 3392 	ld	d,(hl)
   0B5F 21 13 00           3393 	ld	hl,#0x0013
   0B62 19                 3394 	add	hl,de
   0B63 7D                 3395 	ld	a,l
   0B64 54                 3396 	ld	d,h
   0B65 F8 02              3397 	lda	hl,2(sp)
   0B67 22                 3398 	ld	(hl+),a
   0B68 72                 3399 	ld	(hl),d
                           3400 ;	genPlus
                           3401 ;	AOP_STK for _init_background_sloc0_1_0
                           3402 ;	AOP_STK for _init_background_sloc1_1_0
                           3403 ;	Can't optimise plus by inc, falling back to the normal way
   0B69 58                 3404 	ld	e,b
   0B6A 51                 3405 	ld	d,c
   0B6B 2B                 3406 	dec	hl
   0B6C 2A                 3407 	ld	a,(hl+)
   0B6D 66                 3408 	ld	h,(hl)
   0B6E 6F                 3409 	ld	l,a
   0B6F 19                 3410 	add	hl,de
   0B70 7D                 3411 	ld	a,l
   0B71 54                 3412 	ld	d,h
   0B72 F8 00              3413 	lda	hl,0(sp)
   0B74 22                 3414 	ld	(hl+),a
   0B75 72                 3415 	ld	(hl),d
                           3416 ;	genAssign (pointer)
                           3417 ;	AOP_STK for _init_background_sloc1_1_0
   0B76 2B                 3418 	dec	hl
   0B77 5E                 3419 	ld	e,(hl)
   0B78 23                 3420 	inc	hl
   0B79 56                 3421 	ld	d,(hl)
   0B7A 3E 53              3422 	ld	a,#0x53
   0B7C 12                 3423 	ld	(de),a
                           3424 ;	background.c 27
                           3425 ;	genPlus
                           3426 ;	AOP_STK for _init_background_i_1_1
                           3427 ;	genPlusIncr
   0B7D F8 04              3428 	lda	hl,4(sp)
   0B7F 34                 3429 	inc	(hl)
                           3430 ;	genGoto
   0B80 C3 2C 0B           3431 	jp	00109$
                           3432 ;	genLabel
   0B83                    3433 00113$:
                           3434 ;	genEndFunction
   0B83 E8 05              3435 	lda	sp,5(sp)
   0B85 C9                 3436 	ret
   0B86                    3437 ___init_background_end:
                           3438 ;	background.c 33
                           3439 ;	genLabel
                           3440 ;	genFunction
                           3441 ;	---------------------------------
                           3442 ; Function update_background
                           3443 ; ---------------------------------
   0B86                    3444 ___update_background_start:
   0B86                    3445 _update_background:
   0B86 E8 CD              3446 	lda	sp,-51(sp)
                           3447 ;	background.c 38
                           3448 ;	genIpush
                           3449 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B88 21 B4 01           3450 	ld	hl,#_lazer_map
   0B8B E5                 3451 	push	hl
                           3452 ;	genIpush
                           3453 ;	AOP_STK for 
   0B8C F8 37              3454 	lda	hl,55(sp)
   0B8E 2A                 3455 	ld	a,(hl+)
   0B8F 66                 3456 	ld	h,(hl)
   0B90 6F                 3457 	ld	l,a
   0B91 E5                 3458 	push	hl
                           3459 ;	genCall
   0B92 CD D2 09           3460 	call	_project_lazer
   0B95 E8 04              3461 	lda	sp,4(sp)
                           3462 ;	background.c 63
                           3463 ;	genAssign
                           3464 ;	AOP_STK for _update_background_x_1_1
   0B97 F8 31              3465 	lda	hl,49(sp)
   0B99 36 00              3466 	ld	(hl),#0x00
   0B9B 23                 3467 	inc	hl
   0B9C 36 00              3468 	ld	(hl),#0x00
                           3469 ;	genLabel
   0B9E                    3470 00105$:
                           3471 ;	genCmpEq
                           3472 ;	AOP_STK for _update_background_x_1_1
                           3473 ; genCmpEq: left 2, right 2, result 0
   0B9E F8 31              3474 	lda	hl,49(sp)
   0BA0 7E                 3475 	ld	a,(hl)
   0BA1 FE 08              3476 	cp	a,#0x08
   0BA3 C2 AC 0B           3477 	jp	nz,00115$
   0BA6 23                 3478 	inc	hl
   0BA7 7E                 3479 	ld	a,(hl)
   0BA8 B7                 3480 	or	a,a
   0BA9 CA 73 0D           3481 	jp	z,00109$
   0BAC                    3482 00115$:
                           3483 ;	background.c 64
                           3484 ;	genAssign
                           3485 ;	AOP_STK for _update_background_y_1_1
   0BAC F8 2F              3486 	lda	hl,47(sp)
   0BAE 36 00              3487 	ld	(hl),#0x00
   0BB0 23                 3488 	inc	hl
   0BB1 36 00              3489 	ld	(hl),#0x00
                           3490 ;	genLabel
   0BB3                    3491 00101$:
                           3492 ;	genCmpEq
                           3493 ;	AOP_STK for _update_background_y_1_1
                           3494 ; genCmpEq: left 2, right 2, result 1
   0BB3 F8 2F              3495 	lda	hl,47(sp)
   0BB5 7E                 3496 	ld	a,(hl)
   0BB6 FE 09              3497 	cp	a,#0x09
   0BB8 C2 C5 0B           3498 	jp	nz,00116$
   0BBB 23                 3499 	inc	hl
   0BBC 7E                 3500 	ld	a,(hl)
   0BBD B7                 3501 	or	a,a
   0BBE C2 C5 0B           3502 	jp	nz,00116$
   0BC1 3E 01              3503 	ld	a,#0x01
   0BC3 18 01              3504 	jr	00117$
   0BC5                    3505 00116$:
   0BC5 AF                 3506 	xor	a,a
   0BC6                    3507 00117$:
                           3508 ;	genIfx
   0BC6 B7                 3509 	or	a,a
   0BC7 C2 69 0D           3510 	jp	nz,00107$
                           3511 ;	background.c 65
                           3512 ;	genLeftShift
                           3513 ;	AOP_STK for _update_background_x_1_1
                           3514 ;	AOP_STK for _update_background_sloc0_1_0
   0BCA F8 31              3515 	lda	hl,49(sp)
   0BCC 7E                 3516 	ld	a,(hl)
   0BCD F8 29              3517 	lda	hl,41(sp)
   0BCF 77                 3518 	ld	(hl),a
   0BD0 F8 32              3519 	lda	hl,50(sp)
   0BD2 7E                 3520 	ld	a,(hl)
   0BD3 F8 2A              3521 	lda	hl,42(sp)
   0BD5 77                 3522 	ld	(hl),a
   0BD6 3E 04              3523 	ld	a,#0x03+1
   0BD8 18 07              3524 	jr	00119$
   0BDA                    3525 00118$:
   0BDA F8 29              3526 	lda	hl,41(sp)
   0BDC CB 26              3527 	sla	(hl)
   0BDE 23                 3528 	inc	hl
   0BDF CB 16              3529 	rl	(hl)
   0BE1                    3530 00119$:
   0BE1 3D                 3531 	dec	a
   0BE2 20 F6              3532 	jr	nz,00118$
                           3533 ;	genPlus
                           3534 ;	AOP_STK for _update_background_y_1_1
                           3535 ;	AOP_STK for _update_background_sloc0_1_0
                           3536 ;	AOP_STK for _update_background_sloc2_1_0
                           3537 ;	Can't optimise plus by inc, falling back to the normal way
   0BE4 F8 2F              3538 	lda	hl,47(sp)
   0BE6 5E                 3539 	ld	e,(hl)
   0BE7 23                 3540 	inc	hl
   0BE8 56                 3541 	ld	d,(hl)
   0BE9 F8 29              3542 	lda	hl,41(sp)
   0BEB 2A                 3543 	ld	a,(hl+)
   0BEC 66                 3544 	ld	h,(hl)
   0BED 6F                 3545 	ld	l,a
   0BEE 19                 3546 	add	hl,de
   0BEF 7D                 3547 	ld	a,l
   0BF0 54                 3548 	ld	d,h
   0BF1 F8 25              3549 	lda	hl,37(sp)
   0BF3 22                 3550 	ld	(hl+),a
   0BF4 72                 3551 	ld	(hl),d
                           3552 ;	genPlus
                           3553 ;	AOP_STK for _update_background_sloc2_1_0
                           3554 ;	AOP_STK for _update_background_x_1_1
                           3555 ;	AOP_STK for _update_background_sloc1_1_0
                           3556 ;	Can't optimise plus by inc, falling back to the normal way
   0BF5 2B                 3557 	dec	hl
   0BF6 5E                 3558 	ld	e,(hl)
   0BF7 23                 3559 	inc	hl
   0BF8 56                 3560 	ld	d,(hl)
   0BF9 F8 31              3561 	lda	hl,49(sp)
   0BFB 2A                 3562 	ld	a,(hl+)
   0BFC 66                 3563 	ld	h,(hl)
   0BFD 6F                 3564 	ld	l,a
   0BFE 19                 3565 	add	hl,de
   0BFF 7D                 3566 	ld	a,l
   0C00 54                 3567 	ld	d,h
   0C01 F8 27              3568 	lda	hl,39(sp)
   0C03 22                 3569 	ld	(hl+),a
   0C04 72                 3570 	ld	(hl),d
                           3571 ;	genAssign
                           3572 ;	AOP_STK for _update_background_sloc1_1_0
                           3573 ;	AOP_STK for _update_background_offset_1_1
   0C05 2B                 3574 	dec	hl
   0C06 2A                 3575 	ld	a,(hl+)
   0C07 5E                 3576 	ld	e,(hl)
   0C08 F8 2D              3577 	lda	hl,45(sp)
   0C0A 22                 3578 	ld	(hl+),a
   0C0B 73                 3579 	ld	(hl),e
                           3580 ;	background.c 66
                           3581 ;	genPlus
                           3582 ;	AOP_STK for 
                           3583 ;	AOP_STK for _update_background_offset_1_1
                           3584 ;	AOP_STK for _update_background_sloc3_1_0
                           3585 ;	Can't optimise plus by inc, falling back to the normal way
   0C0C F8 35              3586 	lda	hl,53(sp)
   0C0E 5E                 3587 	ld	e,(hl)
   0C0F 23                 3588 	inc	hl
   0C10 56                 3589 	ld	d,(hl)
   0C11 F8 2D              3590 	lda	hl,45(sp)
   0C13 2A                 3591 	ld	a,(hl+)
   0C14 66                 3592 	ld	h,(hl)
   0C15 6F                 3593 	ld	l,a
   0C16 19                 3594 	add	hl,de
   0C17 7D                 3595 	ld	a,l
   0C18 54                 3596 	ld	d,h
   0C19 F8 23              3597 	lda	hl,35(sp)
                           3598 ;	genPointerGet
                           3599 ;	AOP_STK for _update_background_sloc3_1_0
                           3600 ;	AOP_STK for _update_background_sloc7_1_0
   0C1B 22                 3601 	ld	(hl+),a
   0C1C 72                 3602 	ld	(hl),d
   0C1D 5F                 3603 	ld	e,a
   0C1E 1A                 3604 	ld	a,(de)
   0C1F F8 1E              3605 	lda	hl,30(sp)
   0C21 77                 3606 	ld	(hl),a
                           3607 ;	genPlus
                           3608 ;	AOP_STK for _update_background_offset_1_1
                           3609 ;	AOP_STK for _update_background_sloc4_1_0
                           3610 ;	Can't optimise plus by inc, falling back to the normal way
   0C22 11 B4 01           3611 	ld	de,#_lazer_map
   0C25 F8 2D              3612 	lda	hl,45(sp)
   0C27 2A                 3613 	ld	a,(hl+)
   0C28 66                 3614 	ld	h,(hl)
   0C29 6F                 3615 	ld	l,a
   0C2A 19                 3616 	add	hl,de
   0C2B 7D                 3617 	ld	a,l
   0C2C 54                 3618 	ld	d,h
   0C2D F8 21              3619 	lda	hl,33(sp)
                           3620 ;	genPointerGet
                           3621 ;	AOP_STK for _update_background_sloc4_1_0
                           3622 ;	AOP_STK for _update_background_sloc6_1_0
   0C2F 22                 3623 	ld	(hl+),a
   0C30 72                 3624 	ld	(hl),d
   0C31 5F                 3625 	ld	e,a
   0C32 1A                 3626 	ld	a,(de)
   0C33 F8 1F              3627 	lda	hl,31(sp)
                           3628 ;	genPlus
                           3629 ;	AOP_STK for _update_background_sloc7_1_0
                           3630 ;	AOP_STK for _update_background_sloc6_1_0
                           3631 ;	AOP_STK for _update_background_sloc5_1_0
                           3632 ;	Can't optimise plus by inc, falling back to the normal way
   0C35 32                 3633 	ld      (hl-),a
   0C36 2A                 3634 	ld	a,(hl+)
   0C37 86                 3635 	add	a,(hl)
   0C38 23                 3636 	inc	hl
                           3637 ;	genCast
                           3638 ;	AOP_STK for _update_background_sloc5_1_0
                           3639 ;	AOP_STK for _update_background_tile_1_1
   0C39 77                 3640 	ld      (hl),a
                           3641 ; Removed redundent load
   0C3A F8 2B              3642 	lda	hl,43(sp)
   0C3C 22                 3643 	ld	(hl+),a
   0C3D 36 00              3644 	ld	(hl),#0x00
                           3645 ;	genAssign
                           3646 ;	AOP_STK for _update_background_tile_1_1
                           3647 ;	(registers are the same)
                           3648 ;	background.c 67
                           3649 ;	genLeftShift
                           3650 ;	AOP_STK for _update_background_y_1_1
   0C3F F8 2F              3651 	lda	hl,47(sp)
   0C41 4E                 3652 	ld	c,(hl)
   0C42 23                 3653 	inc	hl
   0C43 46                 3654 	ld	b,(hl)
   0C44 CB 21              3655 	sla	c
   0C46 CB 10              3656 	rl	b
                           3657 ;	genPlus
                           3658 ;	AOP_STK for _update_background_sloc0_1_0
                           3659 ;	AOP_STK for _update_background_sloc8_1_0
                           3660 ;	Can't optimise plus by inc, falling back to the normal way
   0C48 F8 29              3661 	lda	hl,41(sp)
   0C4A 2A                 3662 	ld	a,(hl+)
   0C4B 66                 3663 	ld	h,(hl)
   0C4C 6F                 3664 	ld	l,a
   0C4D 09                 3665 	add	hl,bc
   0C4E 7D                 3666 	ld	a,l
   0C4F 54                 3667 	ld	d,h
   0C50 F8 1C              3668 	lda	hl,28(sp)
   0C52 22                 3669 	ld	(hl+),a
   0C53 72                 3670 	ld	(hl),d
                           3671 ;	genLeftShift
                           3672 ;	AOP_STK for _update_background_x_1_1
                           3673 ;	AOP_STK for _update_background_sloc9_1_0
   0C54 F8 31              3674 	lda	hl,49(sp)
   0C56 7E                 3675 	ld	a,(hl)
   0C57 F8 1A              3676 	lda	hl,26(sp)
   0C59 77                 3677 	ld	(hl),a
   0C5A F8 32              3678 	lda	hl,50(sp)
   0C5C 7E                 3679 	ld	a,(hl)
   0C5D F8 1B              3680 	lda	hl,27(sp)
   0C5F 77                 3681 	ld	(hl),a
   0C60 3E 06              3682 	ld	a,#0x05+1
   0C62 18 07              3683 	jr	00123$
   0C64                    3684 00122$:
   0C64 F8 1A              3685 	lda	hl,26(sp)
   0C66 CB 26              3686 	sla	(hl)
   0C68 23                 3687 	inc	hl
   0C69 CB 16              3688 	rl	(hl)
   0C6B                    3689 00123$:
   0C6B 3D                 3690 	dec	a
   0C6C 20 F6              3691 	jr	nz,00122$
                           3692 ;	genPlus
                           3693 ;	AOP_STK for _update_background_sloc8_1_0
                           3694 ;	AOP_STK for _update_background_sloc9_1_0
                           3695 ;	AOP_STK for _update_background_sloc10_1_0
                           3696 ;	Can't optimise plus by inc, falling back to the normal way
   0C6E F8 1C              3697 	lda	hl,28(sp)
   0C70 5E                 3698 	ld	e,(hl)
   0C71 23                 3699 	inc	hl
   0C72 56                 3700 	ld	d,(hl)
   0C73 F8 1A              3701 	lda	hl,26(sp)
   0C75 2A                 3702 	ld	a,(hl+)
   0C76 66                 3703 	ld	h,(hl)
   0C77 6F                 3704 	ld	l,a
   0C78 19                 3705 	add	hl,de
   0C79 7D                 3706 	ld	a,l
   0C7A 54                 3707 	ld	d,h
   0C7B F8 18              3708 	lda	hl,24(sp)
   0C7D 22                 3709 	ld	(hl+),a
   0C7E 72                 3710 	ld	(hl),d
                           3711 ;	genPlus
                           3712 ;	AOP_STK for _update_background_sloc10_1_0
                           3713 ;	AOP_STK for _update_background_sloc11_1_0
                           3714 ;	genPlusIncr
                           3715 ;	Can't optimise plus by inc, falling back to the normal way
   0C7F 2B                 3716 	dec	hl
   0C80 5E                 3717 	ld	e,(hl)
   0C81 23                 3718 	inc	hl
   0C82 56                 3719 	ld	d,(hl)
   0C83 21 15 00           3720 	ld	hl,#0x0015
   0C86 19                 3721 	add	hl,de
   0C87 7D                 3722 	ld	a,l
   0C88 54                 3723 	ld	d,h
   0C89 F8 16              3724 	lda	hl,22(sp)
   0C8B 22                 3725 	ld	(hl+),a
   0C8C 72                 3726 	ld	(hl),d
                           3727 ;	genAssign
                           3728 ;	AOP_STK for _update_background_sloc11_1_0
                           3729 ;	AOP_STK for _update_background_offset_1_1
   0C8D 2B                 3730 	dec	hl
   0C8E 2A                 3731 	ld	a,(hl+)
   0C8F 5E                 3732 	ld	e,(hl)
   0C90 F8 2D              3733 	lda	hl,45(sp)
   0C92 22                 3734 	ld	(hl+),a
   0C93 73                 3735 	ld	(hl),e
                           3736 ;	background.c 69
                           3737 ;	genPlus
                           3738 ;	AOP_STK for 
                           3739 ;	AOP_STK for _update_background_offset_1_1
                           3740 ;	AOP_STK for _update_background_sloc12_1_0
                           3741 ;	Can't optimise plus by inc, falling back to the normal way
   0C94 F8 37              3742 	lda	hl,55(sp)
   0C96 5E                 3743 	ld	e,(hl)
   0C97 23                 3744 	inc	hl
   0C98 56                 3745 	ld	d,(hl)
   0C99 F8 2D              3746 	lda	hl,45(sp)
   0C9B 2A                 3747 	ld	a,(hl+)
   0C9C 66                 3748 	ld	h,(hl)
   0C9D 6F                 3749 	ld	l,a
   0C9E 19                 3750 	add	hl,de
   0C9F 7D                 3751 	ld	a,l
   0CA0 54                 3752 	ld	d,h
   0CA1 F8 14              3753 	lda	hl,20(sp)
   0CA3 22                 3754 	ld	(hl+),a
   0CA4 72                 3755 	ld	(hl),d
                           3756 ;	genCast
                           3757 ;	AOP_STK for _update_background_tile_1_1
   0CA5 F8 2B              3758 	lda	hl,43(sp)
   0CA7 7E                 3759 	ld	a,(hl)
                           3760 ;	genAssign (pointer)
                           3761 ;	AOP_STK for _update_background_sloc12_1_0
   0CA8 F8 14              3762 	lda	hl,20(sp)
   0CAA 5E                 3763 	ld	e,(hl)
   0CAB 23                 3764 	inc	hl
   0CAC 56                 3765 	ld	d,(hl)
   0CAD 12                 3766 	ld	(de),a
                           3767 ;	background.c 70
                           3768 ;	genPlus
                           3769 ;	AOP_STK for _update_background_offset_1_1
                           3770 ;	AOP_STK for _update_background_sloc13_1_0
                           3771 ;	genPlusIncr
                           3772 ;	Can't optimise plus by inc, falling back to the normal way
   0CAE F8 2D              3773 	lda	hl,45(sp)
   0CB0 5E                 3774 	ld	e,(hl)
   0CB1 23                 3775 	inc	hl
   0CB2 56                 3776 	ld	d,(hl)
   0CB3 21 01 00           3777 	ld	hl,#0x0001
   0CB6 19                 3778 	add	hl,de
   0CB7 7D                 3779 	ld	a,l
   0CB8 54                 3780 	ld	d,h
   0CB9 F8 12              3781 	lda	hl,18(sp)
   0CBB 22                 3782 	ld	(hl+),a
   0CBC 72                 3783 	ld	(hl),d
                           3784 ;	genPlus
                           3785 ;	AOP_STK for 
                           3786 ;	AOP_STK for _update_background_sloc13_1_0
                           3787 ;	AOP_STK for _update_background_sloc14_1_0
                           3788 ;	Can't optimise plus by inc, falling back to the normal way
   0CBD F8 37              3789 	lda	hl,55(sp)
   0CBF 5E                 3790 	ld	e,(hl)
   0CC0 23                 3791 	inc	hl
   0CC1 56                 3792 	ld	d,(hl)
   0CC2 F8 12              3793 	lda	hl,18(sp)
   0CC4 2A                 3794 	ld	a,(hl+)
   0CC5 66                 3795 	ld	h,(hl)
   0CC6 6F                 3796 	ld	l,a
   0CC7 19                 3797 	add	hl,de
   0CC8 7D                 3798 	ld	a,l
   0CC9 54                 3799 	ld	d,h
   0CCA F8 10              3800 	lda	hl,16(sp)
   0CCC 22                 3801 	ld	(hl+),a
   0CCD 72                 3802 	ld	(hl),d
                           3803 ;	genPlus
                           3804 ;	AOP_STK for _update_background_tile_1_1
                           3805 ;	AOP_STK for _update_background_sloc15_1_0
                           3806 ;	genPlusIncr
                           3807 ;	Can't optimise plus by inc, falling back to the normal way
   0CCE F8 2B              3808 	lda	hl,43(sp)
   0CD0 5E                 3809 	ld	e,(hl)
   0CD1 23                 3810 	inc	hl
   0CD2 56                 3811 	ld	d,(hl)
   0CD3 21 01 00           3812 	ld	hl,#0x0001
   0CD6 19                 3813 	add	hl,de
   0CD7 7D                 3814 	ld	a,l
   0CD8 54                 3815 	ld	d,h
   0CD9 F8 0E              3816 	lda	hl,14(sp)
   0CDB 22                 3817 	ld	(hl+),a
   0CDC 72                 3818 	ld	(hl),d
                           3819 ;	genCast
                           3820 ;	AOP_STK for _update_background_sloc15_1_0
   0CDD 2B                 3821 	dec	hl
                           3822 ;	genAssign (pointer)
                           3823 ;	AOP_STK for _update_background_sloc14_1_0
   0CDE 2A                 3824 	ld	a,(hl+)
   0CDF 23                 3825 	inc	hl
   0CE0 5E                 3826 	ld	e,(hl)
   0CE1 23                 3827 	inc	hl
   0CE2 56                 3828 	ld	d,(hl)
   0CE3 12                 3829 	ld	(de),a
                           3830 ;	background.c 71
                           3831 ;	genPlus
                           3832 ;	AOP_STK for _update_background_offset_1_1
                           3833 ;	AOP_STK for _update_background_sloc16_1_0
                           3834 ;	genPlusIncr
                           3835 ;	Can't optimise plus by inc, falling back to the normal way
   0CE4 F8 2D              3836 	lda	hl,45(sp)
   0CE6 5E                 3837 	ld	e,(hl)
   0CE7 23                 3838 	inc	hl
   0CE8 56                 3839 	ld	d,(hl)
   0CE9 21 14 00           3840 	ld	hl,#0x0014
   0CEC 19                 3841 	add	hl,de
   0CED 7D                 3842 	ld	a,l
   0CEE 54                 3843 	ld	d,h
   0CEF F8 0C              3844 	lda	hl,12(sp)
   0CF1 22                 3845 	ld	(hl+),a
   0CF2 72                 3846 	ld	(hl),d
                           3847 ;	genPlus
                           3848 ;	AOP_STK for 
                           3849 ;	AOP_STK for _update_background_sloc16_1_0
                           3850 ;	AOP_STK for _update_background_sloc17_1_0
                           3851 ;	Can't optimise plus by inc, falling back to the normal way
   0CF3 F8 37              3852 	lda	hl,55(sp)
   0CF5 5E                 3853 	ld	e,(hl)
   0CF6 23                 3854 	inc	hl
   0CF7 56                 3855 	ld	d,(hl)
   0CF8 F8 0C              3856 	lda	hl,12(sp)
   0CFA 2A                 3857 	ld	a,(hl+)
   0CFB 66                 3858 	ld	h,(hl)
   0CFC 6F                 3859 	ld	l,a
   0CFD 19                 3860 	add	hl,de
   0CFE 7D                 3861 	ld	a,l
   0CFF 54                 3862 	ld	d,h
   0D00 F8 0A              3863 	lda	hl,10(sp)
   0D02 22                 3864 	ld	(hl+),a
   0D03 72                 3865 	ld	(hl),d
                           3866 ;	genPlus
                           3867 ;	AOP_STK for _update_background_tile_1_1
                           3868 ;	AOP_STK for _update_background_sloc18_1_0
                           3869 ;	genPlusIncr
                           3870 ;	Can't optimise plus by inc, falling back to the normal way
   0D04 F8 2B              3871 	lda	hl,43(sp)
   0D06 5E                 3872 	ld	e,(hl)
   0D07 23                 3873 	inc	hl
   0D08 56                 3874 	ld	d,(hl)
   0D09 21 02 00           3875 	ld	hl,#0x0002
   0D0C 19                 3876 	add	hl,de
   0D0D 7D                 3877 	ld	a,l
   0D0E 54                 3878 	ld	d,h
   0D0F F8 08              3879 	lda	hl,8(sp)
   0D11 22                 3880 	ld	(hl+),a
   0D12 72                 3881 	ld	(hl),d
                           3882 ;	genCast
                           3883 ;	AOP_STK for _update_background_sloc18_1_0
   0D13 2B                 3884 	dec	hl
                           3885 ;	genAssign (pointer)
                           3886 ;	AOP_STK for _update_background_sloc17_1_0
   0D14 2A                 3887 	ld	a,(hl+)
   0D15 23                 3888 	inc	hl
   0D16 5E                 3889 	ld	e,(hl)
   0D17 23                 3890 	inc	hl
   0D18 56                 3891 	ld	d,(hl)
   0D19 12                 3892 	ld	(de),a
                           3893 ;	background.c 72
                           3894 ;	genPlus
                           3895 ;	AOP_STK for _update_background_offset_1_1
                           3896 ;	AOP_STK for _update_background_sloc19_1_0
                           3897 ;	genPlusIncr
                           3898 ;	Can't optimise plus by inc, falling back to the normal way
   0D1A F8 2D              3899 	lda	hl,45(sp)
   0D1C 5E                 3900 	ld	e,(hl)
   0D1D 23                 3901 	inc	hl
   0D1E 56                 3902 	ld	d,(hl)
   0D1F 21 15 00           3903 	ld	hl,#0x0015
   0D22 19                 3904 	add	hl,de
   0D23 7D                 3905 	ld	a,l
   0D24 54                 3906 	ld	d,h
   0D25 F8 06              3907 	lda	hl,6(sp)
   0D27 22                 3908 	ld	(hl+),a
   0D28 72                 3909 	ld	(hl),d
                           3910 ;	genPlus
                           3911 ;	AOP_STK for 
                           3912 ;	AOP_STK for _update_background_sloc19_1_0
                           3913 ;	AOP_STK for _update_background_sloc20_1_0
                           3914 ;	Can't optimise plus by inc, falling back to the normal way
   0D29 F8 37              3915 	lda	hl,55(sp)
   0D2B 5E                 3916 	ld	e,(hl)
   0D2C 23                 3917 	inc	hl
   0D2D 56                 3918 	ld	d,(hl)
   0D2E F8 06              3919 	lda	hl,6(sp)
   0D30 2A                 3920 	ld	a,(hl+)
   0D31 66                 3921 	ld	h,(hl)
   0D32 6F                 3922 	ld	l,a
   0D33 19                 3923 	add	hl,de
   0D34 7D                 3924 	ld	a,l
   0D35 54                 3925 	ld	d,h
   0D36 F8 04              3926 	lda	hl,4(sp)
   0D38 22                 3927 	ld	(hl+),a
   0D39 72                 3928 	ld	(hl),d
                           3929 ;	genPlus
                           3930 ;	AOP_STK for _update_background_tile_1_1
                           3931 ;	AOP_STK for _update_background_sloc21_1_0
                           3932 ;	genPlusIncr
                           3933 ;	Can't optimise plus by inc, falling back to the normal way
   0D3A F8 2B              3934 	lda	hl,43(sp)
   0D3C 5E                 3935 	ld	e,(hl)
   0D3D 23                 3936 	inc	hl
   0D3E 56                 3937 	ld	d,(hl)
   0D3F 21 03 00           3938 	ld	hl,#0x0003
   0D42 19                 3939 	add	hl,de
   0D43 7D                 3940 	ld	a,l
   0D44 54                 3941 	ld	d,h
   0D45 F8 02              3942 	lda	hl,2(sp)
   0D47 22                 3943 	ld	(hl+),a
   0D48 72                 3944 	ld	(hl),d
                           3945 ;	genCast
                           3946 ;	AOP_STK for _update_background_sloc21_1_0
   0D49 2B                 3947 	dec	hl
                           3948 ;	genAssign (pointer)
                           3949 ;	AOP_STK for _update_background_sloc20_1_0
   0D4A 2A                 3950 	ld	a,(hl+)
   0D4B 23                 3951 	inc	hl
   0D4C 5E                 3952 	ld	e,(hl)
   0D4D 23                 3953 	inc	hl
   0D4E 56                 3954 	ld	d,(hl)
   0D4F 12                 3955 	ld	(de),a
                           3956 ;	background.c 64
                           3957 ;	genPlus
                           3958 ;	AOP_STK for _update_background_y_1_1
                           3959 ;	AOP_STK for _update_background_sloc22_1_0
                           3960 ;	genPlusIncr
                           3961 ;	Can't optimise plus by inc, falling back to the normal way
   0D50 F8 2F              3962 	lda	hl,47(sp)
   0D52 5E                 3963 	ld	e,(hl)
   0D53 23                 3964 	inc	hl
   0D54 56                 3965 	ld	d,(hl)
   0D55 21 01 00           3966 	ld	hl,#0x0001
   0D58 19                 3967 	add	hl,de
   0D59 7D                 3968 	ld	a,l
   0D5A 54                 3969 	ld	d,h
   0D5B F8 00              3970 	lda	hl,0(sp)
   0D5D 22                 3971 	ld	(hl+),a
   0D5E 72                 3972 	ld	(hl),d
                           3973 ;	genAssign
                           3974 ;	AOP_STK for _update_background_sloc22_1_0
                           3975 ;	AOP_STK for _update_background_y_1_1
   0D5F 2B                 3976 	dec	hl
   0D60 2A                 3977 	ld	a,(hl+)
   0D61 5E                 3978 	ld	e,(hl)
   0D62 F8 2F              3979 	lda	hl,47(sp)
   0D64 22                 3980 	ld	(hl+),a
   0D65 73                 3981 	ld	(hl),e
                           3982 ;	genGoto
   0D66 C3 B3 0B           3983 	jp	00101$
                           3984 ;	genLabel
   0D69                    3985 00107$:
                           3986 ;	background.c 63
                           3987 ;	genPlus
                           3988 ;	AOP_STK for _update_background_x_1_1
                           3989 ;	genPlusIncr
   0D69 F8 31              3990 	lda	hl,49(sp)
   0D6B 34                 3991 	inc	(hl)
   0D6C 20 02              3992 	jr	nz,00124$
   0D6E 23                 3993 	inc	hl
   0D6F 34                 3994 	inc	(hl)
   0D70                    3995 00124$:
                           3996 ;	genGoto
   0D70 C3 9E 0B           3997 	jp	00105$
                           3998 ;	genLabel
   0D73                    3999 00109$:
                           4000 ;	genEndFunction
   0D73 E8 33              4001 	lda	sp,51(sp)
   0D75 C9                 4002 	ret
   0D76                    4003 ___update_background_end:
                           4004 ;	transition.c 1
                           4005 ;	genLabel
                           4006 ;	genFunction
                           4007 ;	---------------------------------
                           4008 ; Function check_transition
                           4009 ; ---------------------------------
   0D76                    4010 ___check_transition_start:
   0D76                    4011 _check_transition:
   0D76 E8 F9              4012 	lda	sp,-7(sp)
                           4013 ;	transition.c 2
                           4014 ;	genAssign
                           4015 ;	AOP_STK for _check_transition_objectives_1_1
   0D78 F8 03              4016 	lda	hl,3(sp)
   0D7A 36 00              4017 	ld	(hl),#0x00
   0D7C 23                 4018 	inc	hl
   0D7D 36 00              4019 	ld	(hl),#0x00
                           4020 ;	transition.c 5
                           4021 ;	genIfx
                           4022 ;	AOP_HL for _defeat
   0D7F AF                 4023 	xor	a,a
   0D80 21 B3 01           4024 	ld	hl,#_defeat
   0D83 B6                 4025 	or	a,(hl)
   0D84 C2 09 0E           4026 	jp	nz,00112$
                           4027 ;	transition.c 6
                           4028 ;	genAssign
                           4029 ;	AOP_STK for _check_transition_x_1_1
   0D87 F8 05              4030 	lda	hl,5(sp)
   0D89 36 00              4031 	ld	(hl),#0x00
   0D8B 23                 4032 	inc	hl
   0D8C 36 00              4033 	ld	(hl),#0x00
                           4034 ;	genLabel
   0D8E                    4035 00107$:
                           4036 ;	genCmpEq
                           4037 ;	AOP_STK for _check_transition_x_1_1
                           4038 ; genCmpEq: left 2, right 2, result 0
   0D8E F8 05              4039 	lda	hl,5(sp)
   0D90 7E                 4040 	ld	a,(hl)
   0D91 FE 48              4041 	cp	a,#0x48
   0D93 C2 9C 0D           4042 	jp	nz,00145$
   0D96 23                 4043 	inc	hl
   0D97 7E                 4044 	ld	a,(hl)
   0D98 B7                 4045 	or	a,a
   0D99 CA 09 0E           4046 	jp	z,00112$
   0D9C                    4047 00145$:
                           4048 ;	transition.c 7
                           4049 ;	genPlus
                           4050 ;	AOP_STK for _check_transition_x_1_1
                           4051 ;	AOP_STK for _check_transition_sloc0_1_0
                           4052 ;	Can't optimise plus by inc, falling back to the normal way
   0D9C 11 02 00           4053 	ld	de,#_level_objects
   0D9F F8 05              4054 	lda	hl,5(sp)
   0DA1 2A                 4055 	ld	a,(hl+)
   0DA2 66                 4056 	ld	h,(hl)
   0DA3 6F                 4057 	ld	l,a
   0DA4 19                 4058 	add	hl,de
   0DA5 7D                 4059 	ld	a,l
   0DA6 54                 4060 	ld	d,h
   0DA7 F8 00              4061 	lda	hl,0(sp)
                           4062 ;	genPointerGet
                           4063 ;	AOP_STK for _check_transition_sloc0_1_0
                           4064 ;	AOP_STK for _check_transition_tile_1_1
   0DA9 22                 4065 	ld	(hl+),a
   0DAA 72                 4066 	ld	(hl),d
   0DAB 5F                 4067 	ld	e,a
   0DAC 1A                 4068 	ld	a,(de)
   0DAD 23                 4069 	inc	hl
                           4070 ;	genAssign
                           4071 ;	AOP_STK for _check_transition_tile_1_1
                           4072 ;	(registers are the same)
                           4073 ;	transition.c 8
                           4074 ;	genCmpEq
                           4075 ;	AOP_STK for _check_transition_tile_1_1
                           4076 ; genCmpEq: left 1, right 1, result 0
   0DAE 77                 4077 	ld      (hl),a
                           4078 ; Removed redundent load
   0DAF FE 68              4079 	cp	a,#0x68
   0DB1 C2 D5 0D           4080 	jp	nz,00102$
   0DB4 18 03              4081 	jr	00147$
   0DB6                    4082 00146$:
   0DB6 C3 D5 0D           4083 	jp	00102$
   0DB9                    4084 00147$:
                           4085 ;	genPlus
                           4086 ;	AOP_STK for _check_transition_x_1_1
                           4087 ;	AOP_STK for _check_transition_sloc0_1_0
                           4088 ;	Can't optimise plus by inc, falling back to the normal way
   0DB9 11 B4 01           4089 	ld	de,#_lazer_map
   0DBC F8 05              4090 	lda	hl,5(sp)
   0DBE 2A                 4091 	ld	a,(hl+)
   0DBF 66                 4092 	ld	h,(hl)
   0DC0 6F                 4093 	ld	l,a
   0DC1 19                 4094 	add	hl,de
   0DC2 7D                 4095 	ld	a,l
   0DC3 54                 4096 	ld	d,h
   0DC4 F8 00              4097 	lda	hl,0(sp)
                           4098 ;	genPointerGet
                           4099 ;	AOP_STK for _check_transition_sloc0_1_0
   0DC6 22                 4100 	ld	(hl+),a
   0DC7 72                 4101 	ld	(hl),d
   0DC8 5F                 4102 	ld	e,a
   0DC9 1A                 4103 	ld	a,(de)
                           4104 ;	genIfx
   0DCA B7                 4105 	or	a,a
   0DCB C2 D5 0D           4106 	jp	nz,00102$
                           4107 ;	transition.c 9
                           4108 ;	genPlus
                           4109 ;	AOP_STK for _check_transition_objectives_1_1
                           4110 ;	genPlusIncr
   0DCE 23                 4111 	inc	hl
   0DCF 23                 4112 	inc	hl
   0DD0 34                 4113 	inc	(hl)
   0DD1 20 02              4114 	jr	nz,00148$
   0DD3 23                 4115 	inc	hl
   0DD4 34                 4116 	inc	(hl)
   0DD5                    4117 00148$:
                           4118 ;	genLabel
   0DD5                    4119 00102$:
                           4120 ;	transition.c 10
                           4121 ;	genCmpEq
                           4122 ;	AOP_STK for _check_transition_tile_1_1
                           4123 ; genCmpEq: left 1, right 1, result 0
   0DD5 F8 02              4124 	lda	hl,2(sp)
   0DD7 7E                 4125 	ld	a,(hl)
   0DD8 FE 84              4126 	cp	a,#0x84
   0DDA C2 FF 0D           4127 	jp	nz,00109$
   0DDD 18 03              4128 	jr	00150$
   0DDF                    4129 00149$:
   0DDF C3 FF 0D           4130 	jp	00109$
   0DE2                    4131 00150$:
                           4132 ;	genPlus
                           4133 ;	AOP_STK for _check_transition_x_1_1
                           4134 ;	AOP_STK for _check_transition_sloc0_1_0
                           4135 ;	Can't optimise plus by inc, falling back to the normal way
   0DE2 11 B4 01           4136 	ld	de,#_lazer_map
   0DE5 F8 05              4137 	lda	hl,5(sp)
   0DE7 2A                 4138 	ld	a,(hl+)
   0DE8 66                 4139 	ld	h,(hl)
   0DE9 6F                 4140 	ld	l,a
   0DEA 19                 4141 	add	hl,de
   0DEB 7D                 4142 	ld	a,l
   0DEC 54                 4143 	ld	d,h
   0DED F8 00              4144 	lda	hl,0(sp)
                           4145 ;	genPointerGet
                           4146 ;	AOP_STK for _check_transition_sloc0_1_0
   0DEF 22                 4147 	ld	(hl+),a
   0DF0 72                 4148 	ld	(hl),d
   0DF1 5F                 4149 	ld	e,a
   0DF2 1A                 4150 	ld	a,(de)
                           4151 ;	genIfx
   0DF3 B7                 4152 	or	a,a
   0DF4 CA FF 0D           4153 	jp	z,00109$
                           4154 ;	transition.c 11
                           4155 ;	genAssign
                           4156 ;	AOP_HL for _defeat
   0DF7 21 B3 01           4157 	ld	hl,#_defeat
   0DFA 36 01              4158 	ld	(hl),#0x01
                           4159 ;	transition.c 12
                           4160 ;	genGoto
   0DFC C3 09 0E           4161 	jp	00112$
                           4162 ;	genLabel
   0DFF                    4163 00109$:
                           4164 ;	transition.c 6
                           4165 ;	genPlus
                           4166 ;	AOP_STK for _check_transition_x_1_1
                           4167 ;	genPlusIncr
   0DFF F8 05              4168 	lda	hl,5(sp)
   0E01 34                 4169 	inc	(hl)
   0E02 20 02              4170 	jr	nz,00151$
   0E04 23                 4171 	inc	hl
   0E05 34                 4172 	inc	(hl)
   0E06                    4173 00151$:
                           4174 ;	genGoto
   0E06 C3 8E 0D           4175 	jp	00107$
                           4176 ;	genLabel
   0E09                    4177 00112$:
                           4178 ;	transition.c 18
                           4179 ;	genCmpEq
                           4180 ;	AOP_HL for _defeat
                           4181 ; genCmpEq: left 1, right 1, result 0
   0E09 21 B3 01           4182 	ld	hl,#_defeat
   0E0C 7E                 4183 	ld	a,(hl)
   0E0D FE 01              4184 	cp	a,#0x01
   0E0F C2 1A 0E           4185 	jp	nz,00114$
   0E12 18 03              4186 	jr	00153$
   0E14                    4187 00152$:
   0E14 C3 1A 0E           4188 	jp	00114$
   0E17                    4189 00153$:
                           4190 ;	transition.c 19
                           4191 ;	genCall
                           4192 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E17 CD 8B 03           4193 	call	_explosion_sound
                           4194 ;	genLabel
   0E1A                    4195 00114$:
                           4196 ;	transition.c 22
                           4197 ;	genIfx
                           4198 ;	AOP_HL for _defeat
   0E1A AF                 4199 	xor	a,a
   0E1B 21 B3 01           4200 	ld	hl,#_defeat
   0E1E B6                 4201 	or	a,(hl)
   0E1F CA 10 0F           4202 	jp	z,00123$
                           4203 ;	transition.c 23
                           4204 ;	genPlus
                           4205 ;	AOP_HL for _defeat
                           4206 ;	genPlusIncr
   0E22 34                 4207 	inc	(hl)
                           4208 ;	transition.c 25
                           4209 ;	genIpush
                           4210 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E23 3E 0A              4211 	ld	a,#0x0A
   0E25 F5                 4212 	push	af
   0E26 33                 4213 	inc	sp
                           4214 ;	genIpush
                           4215 ;	AOP_HL for _defeat
   0E27 7E                 4216 	ld	a,(hl)
   0E28 F5                 4217 	push	af
   0E29 33                 4218 	inc	sp
                           4219 ;	genCall
   0E2A CD 00 00           4220 	call	__moduchar_rrx_s
   0E2D 4B                 4221 	ld	c,e
   0E2E E8 02              4222 	lda	sp,2(sp)
                           4223 ;	genCmpEq
                           4224 ; genCmpEq: left 1, right 1, result 0
   0E30 79                 4225 	ld	a,c
   0E31 B7                 4226 	or	a,a
   0E32 C2 10 0F           4227 	jp	nz,00123$
   0E35 18 03              4228 	jr	00155$
   0E37                    4229 00154$:
   0E37 C3 10 0F           4230 	jp	00123$
   0E3A                    4231 00155$:
                           4232 ;	transition.c 26
                           4233 ;	genIpush
                           4234 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E3A 3E 0A              4235 	ld	a,#0x0A
   0E3C F5                 4236 	push	af
   0E3D 33                 4237 	inc	sp
                           4238 ;	genIpush
                           4239 ;	AOP_HL for _defeat
   0E3E 21 B3 01           4240 	ld	hl,#_defeat
   0E41 7E                 4241 	ld	a,(hl)
   0E42 F5                 4242 	push	af
   0E43 33                 4243 	inc	sp
                           4244 ;	genCall
   0E44 CD 00 00           4245 	call	__divuchar_rrx_s
   0E47 4B                 4246 	ld	c,e
   0E48 E8 02              4247 	lda	sp,2(sp)
                           4248 ;	genIpush
                           4249 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E4A 3E 04              4250 	ld	a,#0x04
   0E4C F5                 4251 	push	af
   0E4D 33                 4252 	inc	sp
                           4253 ;	genIpush
   0E4E 79                 4254 	ld	a,c
   0E4F F5                 4255 	push	af
   0E50 33                 4256 	inc	sp
                           4257 ;	genCall
   0E51 CD 00 00           4258 	call	__moduchar_rrx_s
   0E54 4B                 4259 	ld	c,e
   0E55 E8 02              4260 	lda	sp,2(sp)
                           4261 ;	genCast
                           4262 ;	AOP_STK for _check_transition_x_1_1
   0E57 F8 05              4263 	lda	hl,5(sp)
   0E59 71                 4264 	ld	(hl),c
   0E5A 23                 4265 	inc	hl
   0E5B 36 00              4266 	ld	(hl),#0x00
                           4267 ;	transition.c 27
                           4268 ;	genPlus
                           4269 ;	AOP_STK for _check_transition_x_1_1
                           4270 ;	genPlusIncr
                           4271 ;	Can't optimise plus by inc, falling back to the normal way
   0E5D 2B                 4272 	dec	hl
   0E5E 5E                 4273 	ld	e,(hl)
   0E5F 23                 4274 	inc	hl
   0E60 56                 4275 	ld	d,(hl)
   0E61 21 9C 00           4276 	ld	hl,#0x009C
   0E64 19                 4277 	add	hl,de
   0E65 4D                 4278 	ld	c,l
   0E66 44                 4279 	ld	b,h
                           4280 ;	genCast
                           4281 ; Removed redundent load
                           4282 ;	genIpush
                           4283 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E67 79                 4284 	ld	a,c
   0E68 F5                 4285 	push	af
   0E69 33                 4286 	inc	sp
                           4287 ;	genIpush
   0E6A 3E 10              4288 	ld	a,#0x10
   0E6C F5                 4289 	push	af
   0E6D 33                 4290 	inc	sp
                           4291 ;	genCall
   0E6E CD 00 00           4292 	call	_set_sprite_tile
   0E71 E8 02              4293 	lda	sp,2(sp)
                           4294 ;	transition.c 28
                           4295 ;	genIpush
                           4296 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E73 21 44 1C           4297 	ld	hl,#0x1C44
   0E76 E5                 4298 	push	hl
                           4299 ;	genIpush
   0E77 3E 10              4300 	ld	a,#0x10
   0E79 F5                 4301 	push	af
   0E7A 33                 4302 	inc	sp
                           4303 ;	genCall
   0E7B CD 00 00           4304 	call	_move_sprite
   0E7E E8 03              4305 	lda	sp,3(sp)
                           4306 ;	transition.c 29
                           4307 ;	genIpush
                           4308 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E80 21 11 A0           4309 	ld	hl,#0xA011
   0E83 E5                 4310 	push	hl
                           4311 ;	genCall
   0E84 CD 00 00           4312 	call	_set_sprite_tile
   0E87 E8 02              4313 	lda	sp,2(sp)
                           4314 ;	transition.c 30
                           4315 ;	genCall
                           4316 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E89 CD 8B 03           4317 	call	_explosion_sound
                           4318 ;	transition.c 32
                           4319 ;	genCmpGt
                           4320 ;	AOP_STK for _check_transition_x_1_1
   0E8C 3E 03              4321 	ld	a,#0x03
   0E8E F8 05              4322 	lda	hl,5(sp)
   0E90 96                 4323 	sub	a,(hl)
   0E91 3E 00              4324 	ld	a,#0x00
   0E93 23                 4325 	inc	hl
   0E94 9E                 4326 	sbc	a,(hl)
   0E95 DA 10 0F           4327 	jp	c,00123$
                           4328 ;	genJumpTab
                           4329 ;	AOP_STK for _check_transition_x_1_1
   0E98 2B                 4330 	dec	hl
   0E99 5E                 4331 	ld	e,(hl)
   0E9A 16 00              4332 	ld	d,#0x00
   0E9C 21 A3 0E           4333 	ld	hl,#00156$
   0E9F 19                 4334 	add	hl,de
   0EA0 19                 4335 	add	hl,de
   0EA1 19                 4336 	add	hl,de
   0EA2 E9                 4337 	jp	(hl)
   0EA3                    4338 00156$:
   0EA3 C3 AF 0E           4339 	jp	00115$
   0EA6 C3 C8 0E           4340 	jp	00116$
   0EA9 C3 E1 0E           4341 	jp	00117$
   0EAC C3 FA 0E           4342 	jp	00118$
                           4343 ;	transition.c 34
                           4344 ;	genLabel
   0EAF                    4345 00115$:
                           4346 ;	genIpush
                           4347 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EAF 21 11 00           4348 	ld	hl,#0x0011
   0EB2 E5                 4349 	push	hl
                           4350 ;	genCall
   0EB3 CD 00 00           4351 	call	_set_sprite_prop
   0EB6 E8 02              4352 	lda	sp,2(sp)
                           4353 ;	transition.c 36
                           4354 ;	genIpush
                           4355 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EB8 21 40 18           4356 	ld	hl,#0x1840
   0EBB E5                 4357 	push	hl
                           4358 ;	genIpush
   0EBC 3E 11              4359 	ld	a,#0x11
   0EBE F5                 4360 	push	af
   0EBF 33                 4361 	inc	sp
                           4362 ;	genCall
   0EC0 CD 00 00           4363 	call	_move_sprite
   0EC3 E8 03              4364 	lda	sp,3(sp)
                           4365 ;	transition.c 37
                           4366 ;	genGoto
   0EC5 C3 10 0F           4367 	jp	00123$
                           4368 ;	transition.c 40
                           4369 ;	genLabel
   0EC8                    4370 00116$:
                           4371 ;	genIpush
                           4372 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EC8 21 11 20           4373 	ld	hl,#0x2011
   0ECB E5                 4374 	push	hl
                           4375 ;	genCall
   0ECC CD 00 00           4376 	call	_set_sprite_prop
   0ECF E8 02              4377 	lda	sp,2(sp)
                           4378 ;	transition.c 41
                           4379 ;	genIpush
                           4380 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0ED1 21 48 18           4381 	ld	hl,#0x1848
   0ED4 E5                 4382 	push	hl
                           4383 ;	genIpush
   0ED5 3E 11              4384 	ld	a,#0x11
   0ED7 F5                 4385 	push	af
   0ED8 33                 4386 	inc	sp
                           4387 ;	genCall
   0ED9 CD 00 00           4388 	call	_move_sprite
   0EDC E8 03              4389 	lda	sp,3(sp)
                           4390 ;	transition.c 42
                           4391 ;	genGoto
   0EDE C3 10 0F           4392 	jp	00123$
                           4393 ;	transition.c 44
                           4394 ;	genLabel
   0EE1                    4395 00117$:
                           4396 ;	genIpush
                           4397 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EE1 21 11 60           4398 	ld	hl,#0x6011
   0EE4 E5                 4399 	push	hl
                           4400 ;	genCall
   0EE5 CD 00 00           4401 	call	_set_sprite_prop
   0EE8 E8 02              4402 	lda	sp,2(sp)
                           4403 ;	transition.c 45
                           4404 ;	genIpush
                           4405 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EEA 21 48 20           4406 	ld	hl,#0x2048
   0EED E5                 4407 	push	hl
                           4408 ;	genIpush
   0EEE 3E 11              4409 	ld	a,#0x11
   0EF0 F5                 4410 	push	af
   0EF1 33                 4411 	inc	sp
                           4412 ;	genCall
   0EF2 CD 00 00           4413 	call	_move_sprite
   0EF5 E8 03              4414 	lda	sp,3(sp)
                           4415 ;	transition.c 46
                           4416 ;	genGoto
   0EF7 C3 10 0F           4417 	jp	00123$
                           4418 ;	transition.c 48
                           4419 ;	genLabel
   0EFA                    4420 00118$:
                           4421 ;	genIpush
                           4422 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EFA 21 11 40           4423 	ld	hl,#0x4011
   0EFD E5                 4424 	push	hl
                           4425 ;	genCall
   0EFE CD 00 00           4426 	call	_set_sprite_prop
   0F01 E8 02              4427 	lda	sp,2(sp)
                           4428 ;	transition.c 49
                           4429 ;	genIpush
                           4430 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F03 21 40 20           4431 	ld	hl,#0x2040
   0F06 E5                 4432 	push	hl
                           4433 ;	genIpush
   0F07 3E 11              4434 	ld	a,#0x11
   0F09 F5                 4435 	push	af
   0F0A 33                 4436 	inc	sp
                           4437 ;	genCall
   0F0B CD 00 00           4438 	call	_move_sprite
   0F0E E8 03              4439 	lda	sp,3(sp)
                           4440 ;	transition.c 52
                           4441 ;	genLabel
   0F10                    4442 00123$:
                           4443 ;	transition.c 59
                           4444 ;	genCmpEq
                           4445 ;	AOP_HL for _defeat
                           4446 ; genCmpEq: left 1, right 1, result 0
   0F10 21 B3 01           4447 	ld	hl,#_defeat
   0F13 7E                 4448 	ld	a,(hl)
   0F14 FE C8              4449 	cp	a,#0xC8
   0F16 C2 33 0F           4450 	jp	nz,00125$
   0F19 18 03              4451 	jr	00158$
   0F1B                    4452 00157$:
   0F1B C3 33 0F           4453 	jp	00125$
   0F1E                    4454 00158$:
                           4455 ;	transition.c 60
                           4456 ;	genCall
                           4457 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F1E CD 2B 15           4458 	call	_display_defeat
                           4459 ;	transition.c 61
                           4460 ;	genCall
                           4461 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F21 CD 81 04           4462 	call	_game_over_sound
                           4463 ;	transition.c 62
                           4464 ;	genIpush
                           4465 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F24 3E FF              4466 	ld	a,#0xFF
   0F26 F5                 4467 	push	af
   0F27 33                 4468 	inc	sp
                           4469 ;	genCall
   0F28 CD 00 00           4470 	call	_waitpad
   0F2B E8 01              4471 	lda	sp,1(sp)
                           4472 ;	transition.c 63
                           4473 ;	genCall
                           4474 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F2D CD BF 14           4475 	call	_display_level
                           4476 ;	transition.c 64
                           4477 ;	genRet
   0F30 C3 61 0F           4478 	jp	00129$
                           4479 ;	genLabel
   0F33                    4480 00125$:
                           4481 ;	transition.c 67
                           4482 ;	genIfx
                           4483 ;	AOP_HL for _defeat
   0F33 AF                 4484 	xor	a,a
   0F34 21 B3 01           4485 	ld	hl,#_defeat
   0F37 B6                 4486 	or	a,(hl)
   0F38 C2 61 0F           4487 	jp	nz,00129$
                           4488 ;	genIfx
                           4489 ;	AOP_STK for _check_transition_objectives_1_1
   0F3B F8 03              4490 	lda	hl,3(sp)
   0F3D 2A                 4491 	ld	a,(hl+)
   0F3E B6                 4492 	or	a,(hl)
   0F3F C2 61 0F           4493 	jp	nz,00129$
                           4494 ;	transition.c 68
                           4495 ;	genIpush
                           4496 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F42 21 F4 01           4497 	ld	hl,#0x01F4
   0F45 E5                 4498 	push	hl
                           4499 ;	genCall
   0F46 CD 00 00           4500 	call	_delay
   0F49 E8 02              4501 	lda	sp,2(sp)
                           4502 ;	transition.c 69
                           4503 ;	genPlus
                           4504 ;	AOP_HL for _level
                           4505 ;	genPlusIncr
   0F4B 21 B2 01           4506 	ld	hl,#_level
   0F4E 34                 4507 	inc	(hl)
                           4508 ;	transition.c 70
                           4509 ;	genCall
                           4510 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F4F CD 21 15           4511 	call	_display_victory
                           4512 ;	transition.c 71
                           4513 ;	genCall
                           4514 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F52 CD 14 04           4515 	call	_victory_sound
                           4516 ;	transition.c 72
                           4517 ;	genIpush
                           4518 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F55 3E FF              4519 	ld	a,#0xFF
   0F57 F5                 4520 	push	af
   0F58 33                 4521 	inc	sp
                           4522 ;	genCall
   0F59 CD 00 00           4523 	call	_waitpad
   0F5C E8 01              4524 	lda	sp,1(sp)
                           4525 ;	transition.c 73
                           4526 ;	genCall
                           4527 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F5E CD BF 14           4528 	call	_display_level
                           4529 ;	genLabel
   0F61                    4530 00129$:
                           4531 ;	genEndFunction
   0F61 E8 07              4532 	lda	sp,7(sp)
   0F63 C9                 4533 	ret
   0F64                    4534 ___check_transition_end:
                           4535 ;	cursor.c 17
                           4536 ;	genLabel
                           4537 ;	genFunction
                           4538 ;	---------------------------------
                           4539 ; Function cursor_toggle
                           4540 ; ---------------------------------
   0F64                    4541 ___cursor_toggle_start:
   0F64                    4542 _cursor_toggle:
   0F64 E8 FC              4543 	lda	sp,-4(sp)
                           4544 ;	cursor.c 19
                           4545 ;	genPointerGet
   0F66 11 FC 01           4546 	ld	de,#_cursor
   0F69 1A                 4547 	ld	a,(de)
                           4548 ;	genMinus
   0F6A 4F                 4549 	ld	c,a
   0F6B C6 F8              4550 	add	a,#0xF8
                           4551 ;	genRightShift
                           4552 ;	AOP_STK for _cursor_toggle_x_1_1
   0F6D 4F                 4553 	ld	c,a
   0F6E CB 3F              4554 	srl	a
   0F70 CB 3F              4555 	srl	a
   0F72 CB 3F              4556 	srl	a
   0F74 CB 3F              4557 	srl	a
   0F76 F8 02              4558 	lda	hl,2(sp)
   0F78 77                 4559 	ld	(hl),a
                           4560 ;	cursor.c 20
                           4561 ;	genPlus
                           4562 ;	genPlusIncr
                           4563 ;	Can't optimise plus by inc, falling back to the normal way
   0F79 3E FC              4564 	ld	a,#<_cursor
   0F7B C6 01              4565 	add	a,#0x01
   0F7D 47                 4566 	ld	b,a
   0F7E 3E 01              4567 	ld	a,#>_cursor
   0F80 CE 00              4568 	adc	a,#0x00
   0F82 4F                 4569 	ld	c,a
                           4570 ;	genPointerGet
   0F83 58                 4571 	ld	e,b
   0F84 51                 4572 	ld	d,c
   0F85 1A                 4573 	ld	a,(de)
                           4574 ;	genMinus
   0F86 47                 4575 	ld	b,a
   0F87 C6 F0              4576 	add	a,#0xF0
   0F89 47                 4577 	ld	b,a
                           4578 ;	genRightShift
                           4579 ; Removed redundent load
   0F8A CB 38              4580 	srl	b
   0F8C CB 38              4581 	srl	b
   0F8E CB 38              4582 	srl	b
   0F90 CB 38              4583 	srl	b
                           4584 ;	cursor.c 21
                           4585 ;	genMult
   0F92 58                 4586 	ld	e,b
   0F93 16 00              4587 	ld	d,#0x00
   0F95 6B                 4588 	ld	l,e
   0F96 62                 4589 	ld	h,d
   0F97 29                 4590 	add	hl,hl
   0F98 29                 4591 	add	hl,hl
   0F99 29                 4592 	add	hl,hl
   0F9A 19                 4593 	add	hl,de
   0F9B 45                 4594 	ld	b,l
   0F9C 4C                 4595 	ld	c,h
                           4596 ;	genCast
                           4597 ;	AOP_STK for _cursor_toggle_x_1_1
                           4598 ;	AOP_STK for _cursor_toggle_sloc0_1_0
   0F9D F8 02              4599 	lda	hl,2(sp)
   0F9F 7E                 4600 	ld	a,(hl)
   0FA0 2B                 4601 	dec	hl
   0FA1 2B                 4602 	dec	hl
   0FA2 22                 4603 	ld	(hl+),a
   0FA3 36 00              4604 	ld	(hl),#0x00
                           4605 ;	genPlus
                           4606 ;	AOP_STK for _cursor_toggle_sloc0_1_0
                           4607 ;	Can't optimise plus by inc, falling back to the normal way
   0FA5 2B                 4608 	dec	hl
   0FA6 5E                 4609 	ld	e,(hl)
   0FA7 23                 4610 	inc	hl
   0FA8 56                 4611 	ld	d,(hl)
   0FA9 68                 4612 	ld	l,b
   0FAA 61                 4613 	ld	h,c
   0FAB 19                 4614 	add	hl,de
   0FAC 45                 4615 	ld	b,l
   0FAD 4C                 4616 	ld	c,h
                           4617 ;	genCast
                           4618 ; Removed redundent load
                           4619 ;	cursor.c 23
                           4620 ;	genPlus
                           4621 ;	genPlusIncr
   0FAE 21 FE 01           4622 	ld	hl,#_cursor + 2
                           4623 ;	genAssign (pointer)
   0FB1 36 00              4624 	ld	(hl),#0x00
                           4625 ;	cursor.c 24
                           4626 ;	genPlus
                           4627 ;	genPlusIncr
   0FB3 23                 4628 	inc	hl
                           4629 ;	genAssign (pointer)
   0FB4 36 00              4630 	ld	(hl),#0x00
                           4631 ;	cursor.c 25
                           4632 ;	genAssign
                           4633 ;	AOP_HL for _counter
   0FB6 21 01 02           4634 	ld	hl,#_counter
   0FB9 36 08              4635 	ld	(hl),#0x08
                           4636 ;	cursor.c 27
                           4637 ;	genPlus
                           4638 ;	AOP_STK for _cursor_toggle_sloc0_1_0
                           4639 ;	Can't optimise plus by inc, falling back to the normal way
   0FBB 11 02 00           4640 	ld	de,#_level_objects
   0FBE 68                 4641 	ld	l,b
   0FBF 26 00              4642 	ld	h,#0x00
   0FC1 19                 4643 	add	hl,de
   0FC2 7D                 4644 	ld	a,l
   0FC3 54                 4645 	ld	d,h
   0FC4 F8 00              4646 	lda	hl,0(sp)
                           4647 ;	genPointerGet
                           4648 ;	AOP_STK for _cursor_toggle_sloc0_1_0
                           4649 ;	AOP_STK for _cursor_toggle_currentObject_1_1
   0FC6 22                 4650 	ld	(hl+),a
   0FC7 72                 4651 	ld	(hl),d
   0FC8 5F                 4652 	ld	e,a
   0FC9 1A                 4653 	ld	a,(de)
   0FCA 23                 4654 	inc	hl
   0FCB 23                 4655 	inc	hl
                           4656 ;	genAssign
                           4657 ;	AOP_STK for _cursor_toggle_currentObject_1_1
   0FCC 77                 4658 	ld      (hl),a
   0FCD 4F                 4659 	ld      c,a
                           4660 ;	cursor.c 28
                           4661 ;	genIfx
                           4662 ;	AOP_HL for _selected
   0FCE AF                 4663 	xor	a,a
   0FCF 21 00 02           4664 	ld	hl,#_selected
   0FD2 B6                 4665 	or	a,(hl)
   0FD3 CA 48 10           4666 	jp	z,00113$
                           4667 ;	cursor.c 29
                           4668 ;	genCmpEq
                           4669 ; genCmpEq: left 1, right 1, result 0
   0FD6 79                 4670 	ld	a,c
   0FD7 FE 08              4671 	cp	a,#0x08
                           4672 ;	cursor.c 30
                           4673 ;	genRet
                           4674 ;	genLabel
   0FD9 CA DF 0F           4675 	jp	z,00102$
   0FDC                    4676 00127$:
   0FDC C3 ED 10           4677 	jp	00115$
   0FDF                    4678 00102$:
                           4679 ;	cursor.c 32
                           4680 ;	genIpush
                           4681 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0FDF C5                 4682 	push	bc
   0FE0 21 05 00           4683 	ld	hl,#0x0005
   0FE3 E5                 4684 	push	hl
                           4685 ;	genCall
   0FE4 CD 00 00           4686 	call	_set_sprite_tile
   0FE7 E8 02              4687 	lda	sp,2(sp)
   0FE9 E1                 4688 	pop	hl
   0FEA 4D                 4689 	ld	c,l
                           4690 ;	cursor.c 33
                           4691 ;	genIpush
                           4692 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0FEB C5                 4693 	push	bc
   0FEC 21 06 00           4694 	ld	hl,#0x0006
   0FEF E5                 4695 	push	hl
                           4696 ;	genCall
   0FF0 CD 00 00           4697 	call	_set_sprite_tile
   0FF3 E8 02              4698 	lda	sp,2(sp)
   0FF5 E1                 4699 	pop	hl
   0FF6 4D                 4700 	ld	c,l
                           4701 ;	cursor.c 34
                           4702 ;	genIpush
                           4703 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0FF7 C5                 4704 	push	bc
   0FF8 21 09 00           4705 	ld	hl,#0x0009
   0FFB E5                 4706 	push	hl
                           4707 ;	genCall
   0FFC CD 00 00           4708 	call	_set_sprite_tile
   0FFF E8 02              4709 	lda	sp,2(sp)
   1001 E1                 4710 	pop	hl
   1002 4D                 4711 	ld	c,l
                           4712 ;	cursor.c 35
                           4713 ;	genIpush
                           4714 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1003 C5                 4715 	push	bc
   1004 21 0A 00           4716 	ld	hl,#0x000A
   1007 E5                 4717 	push	hl
                           4718 ;	genCall
   1008 CD 00 00           4719 	call	_set_sprite_tile
   100B E8 02              4720 	lda	sp,2(sp)
   100D E1                 4721 	pop	hl
   100E 4D                 4722 	ld	c,l
                           4723 ;	cursor.c 38
                           4724 ;	genAssign (pointer)
                           4725 ;	AOP_STK for _cursor_toggle_sloc0_1_0
                           4726 ;	AOP_HL for _selected
   100F F8 00              4727 	lda	hl,0(sp)
   1011 5E                 4728 	ld	e,(hl)
   1012 23                 4729 	inc	hl
   1013 56                 4730 	ld	d,(hl)
   1014 21 00 02           4731 	ld	hl,#_selected
   1017 7E                 4732 	ld	a,(hl)
   1018 12                 4733 	ld	(de),a
                           4734 ;	cursor.c 39
                           4735 ;	genAssign
                           4736 ;	AOP_HL for _selected
   1019 36 00              4737 	ld	(hl),#0x00
                           4738 ;	cursor.c 41
                           4739 ;	genIpush
                           4740 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   101B C5                 4741 	push	bc
   101C 21 4A 00           4742 	ld	hl,#_current_level
   101F E5                 4743 	push	hl
                           4744 ;	genIpush
   1020 21 02 00           4745 	ld	hl,#_level_objects
   1023 E5                 4746 	push	hl
                           4747 ;	genCall
   1024 CD 86 0B           4748 	call	_update_background
   1027 E8 04              4749 	lda	sp,4(sp)
   1029 E1                 4750 	pop	hl
   102A 4D                 4751 	ld	c,l
                           4752 ;	cursor.c 42
                           4753 ;	genIpush
                           4754 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   102B C5                 4755 	push	bc
   102C 21 4A 00           4756 	ld	hl,#_current_level
   102F E5                 4757 	push	hl
                           4758 ;	genIpush
   1030 21 14 12           4759 	ld	hl,#0x1214
   1033 E5                 4760 	push	hl
                           4761 ;	genIpush
   1034 21 00 00           4762 	ld	hl,#0x0000
   1037 E5                 4763 	push	hl
                           4764 ;	genCall
   1038 CD 00 00           4765 	call	_set_bkg_tiles
   103B E8 06              4766 	lda	sp,6(sp)
   103D E1                 4767 	pop	hl
   103E 4D                 4768 	ld	c,l
                           4769 ;	cursor.c 43
                           4770 ;	genCall
                           4771 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   103F C5                 4772 	push	bc
   1040 CD 76 0D           4773 	call	_check_transition
   1043 E1                 4774 	pop	hl
   1044 4D                 4775 	ld	c,l
                           4776 ;	genGoto
   1045 C3 ED 10           4777 	jp	00115$
                           4778 ;	genLabel
   1048                    4779 00113$:
                           4780 ;	cursor.c 46
                           4781 ;	genCmpEq
                           4782 ; genCmpEq: left 1, right 1, result 0
   1048 79                 4783 	ld	a,c
   1049 FE 28              4784 	cp	a,#0x28
   104B CA 7B 10           4785 	jp	z,00104$
   104E                    4786 00128$:
                           4787 ;	cursor.c 47
                           4788 ;	genCmpEq
                           4789 ; genCmpEq: left 1, right 1, result 0
   104E 79                 4790 	ld	a,c
   104F FE 18              4791 	cp	a,#0x18
   1051 CA 7B 10           4792 	jp	z,00104$
   1054                    4793 00129$:
                           4794 ;	cursor.c 48
                           4795 ;	genCmpEq
                           4796 ; genCmpEq: left 1, right 1, result 0
   1054 79                 4797 	ld	a,c
   1055 FE 48              4798 	cp	a,#0x48
   1057 CA 7B 10           4799 	jp	z,00104$
   105A                    4800 00130$:
                           4801 ;	cursor.c 49
                           4802 ;	genCmpEq
                           4803 ; genCmpEq: left 1, right 1, result 0
   105A 79                 4804 	ld	a,c
   105B FE 38              4805 	cp	a,#0x38
   105D CA 7B 10           4806 	jp	z,00104$
   1060                    4807 00131$:
                           4808 ;	cursor.c 50
                           4809 ;	genCmpEq
                           4810 ; genCmpEq: left 1, right 1, result 0
   1060 79                 4811 	ld	a,c
   1061 FE 58              4812 	cp	a,#0x58
   1063 CA 7B 10           4813 	jp	z,00104$
   1066                    4814 00132$:
                           4815 ;	cursor.c 51
                           4816 ;	genCmpEq
                           4817 ; genCmpEq: left 1, right 1, result 0
   1066 79                 4818 	ld	a,c
   1067 FE 70              4819 	cp	a,#0x70
   1069 CA 7B 10           4820 	jp	z,00104$
   106C                    4821 00133$:
                           4822 ;	cursor.c 52
                           4823 ;	genCmpEq
                           4824 ; genCmpEq: left 1, right 1, result 0
   106C 79                 4825 	ld	a,c
   106D FE 60              4826 	cp	a,#0x60
   106F CA 7B 10           4827 	jp	z,00104$
   1072                    4828 00134$:
                           4829 ;	cursor.c 54
                           4830 ;	genCmpEq
                           4831 ; genCmpEq: left 1, right 1, result 0
   1072 79                 4832 	ld	a,c
   1073 FE 78              4833 	cp	a,#0x78
                           4834 ;	genRet
                           4835 ;	genLabel
   1075 CA 7B 10           4836 	jp	z,00104$
   1078                    4837 00135$:
   1078 C3 ED 10           4838 	jp	00115$
   107B                    4839 00104$:
                           4840 ;	cursor.c 56
                           4841 ;	genAssign
                           4842 ;	AOP_HL for _selected
   107B 21 00 02           4843 	ld	hl,#_selected
   107E 71                 4844 	ld	(hl),c
                           4845 ;	cursor.c 57
                           4846 ;	genAssign (pointer)
                           4847 ;	AOP_STK for _cursor_toggle_sloc0_1_0
   107F F8 00              4848 	lda	hl,0(sp)
   1081 5E                 4849 	ld	e,(hl)
   1082 23                 4850 	inc	hl
   1083 56                 4851 	ld	d,(hl)
   1084 3E 08              4852 	ld	a,#0x08
   1086 12                 4853 	ld	(de),a
                           4854 ;	cursor.c 59
                           4855 ;	genIpush
                           4856 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4857 ;	AOP_HL for _selected
   1087 21 00 02           4858 	ld	hl,#_selected
   108A 7E                 4859 	ld	a,(hl)
   108B F5                 4860 	push	af
   108C 33                 4861 	inc	sp
                           4862 ;	genIpush
   108D 3E 05              4863 	ld	a,#0x05
   108F F5                 4864 	push	af
   1090 33                 4865 	inc	sp
                           4866 ;	genCall
   1091 CD 00 00           4867 	call	_set_sprite_tile
   1094 E8 02              4868 	lda	sp,2(sp)
                           4869 ;	cursor.c 60
                           4870 ;	genPlus
                           4871 ;	AOP_HL for _selected
                           4872 ;	genPlusIncr
   1096 21 00 02           4873 	ld	hl,#_selected
   1099 4E                 4874 	ld	c,(hl)
   109A 0C                 4875 	inc	c
                           4876 ;	genIpush
                           4877 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   109B 79                 4878 	ld	a,c
   109C F5                 4879 	push	af
   109D 33                 4880 	inc	sp
                           4881 ;	genIpush
   109E 3E 06              4882 	ld	a,#0x06
   10A0 F5                 4883 	push	af
   10A1 33                 4884 	inc	sp
                           4885 ;	genCall
   10A2 CD 00 00           4886 	call	_set_sprite_tile
   10A5 E8 02              4887 	lda	sp,2(sp)
                           4888 ;	cursor.c 61
                           4889 ;	genPlus
                           4890 ;	AOP_HL for _selected
                           4891 ;	genPlusIncr
   10A7 21 00 02           4892 	ld	hl,#_selected
   10AA 4E                 4893 	ld	c,(hl)
   10AB 0C                 4894 	inc	c
   10AC 0C                 4895 	inc	c
                           4896 ;	genIpush
                           4897 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10AD 79                 4898 	ld	a,c
   10AE F5                 4899 	push	af
   10AF 33                 4900 	inc	sp
                           4901 ;	genIpush
   10B0 3E 09              4902 	ld	a,#0x09
   10B2 F5                 4903 	push	af
   10B3 33                 4904 	inc	sp
                           4905 ;	genCall
   10B4 CD 00 00           4906 	call	_set_sprite_tile
   10B7 E8 02              4907 	lda	sp,2(sp)
                           4908 ;	cursor.c 62
                           4909 ;	genPlus
                           4910 ;	AOP_HL for _selected
                           4911 ;	genPlusIncr
   10B9 21 00 02           4912 	ld	hl,#_selected
   10BC 4E                 4913 	ld	c,(hl)
   10BD 0C                 4914 	inc	c
   10BE 0C                 4915 	inc	c
   10BF 0C                 4916 	inc	c
                           4917 ;	genIpush
                           4918 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10C0 79                 4919 	ld	a,c
   10C1 F5                 4920 	push	af
   10C2 33                 4921 	inc	sp
                           4922 ;	genIpush
   10C3 3E 0A              4923 	ld	a,#0x0A
   10C5 F5                 4924 	push	af
   10C6 33                 4925 	inc	sp
                           4926 ;	genCall
   10C7 CD 00 00           4927 	call	_set_sprite_tile
   10CA E8 02              4928 	lda	sp,2(sp)
                           4929 ;	cursor.c 64
                           4930 ;	genIpush
                           4931 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10CC 21 4A 00           4932 	ld	hl,#_current_level
   10CF E5                 4933 	push	hl
                           4934 ;	genIpush
   10D0 21 02 00           4935 	ld	hl,#_level_objects
   10D3 E5                 4936 	push	hl
                           4937 ;	genCall
   10D4 CD 86 0B           4938 	call	_update_background
   10D7 E8 04              4939 	lda	sp,4(sp)
                           4940 ;	cursor.c 65
                           4941 ;	genIpush
                           4942 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10D9 21 4A 00           4943 	ld	hl,#_current_level
   10DC E5                 4944 	push	hl
                           4945 ;	genIpush
   10DD 21 14 12           4946 	ld	hl,#0x1214
   10E0 E5                 4947 	push	hl
                           4948 ;	genIpush
   10E1 21 00 00           4949 	ld	hl,#0x0000
   10E4 E5                 4950 	push	hl
                           4951 ;	genCall
   10E5 CD 00 00           4952 	call	_set_bkg_tiles
   10E8 E8 06              4953 	lda	sp,6(sp)
                           4954 ;	cursor.c 66
                           4955 ;	genCall
                           4956 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10EA CD 76 0D           4957 	call	_check_transition
                           4958 ;	genLabel
   10ED                    4959 00115$:
                           4960 ;	genEndFunction
   10ED E8 04              4961 	lda	sp,4(sp)
   10EF C9                 4962 	ret
   10F0                    4963 ___cursor_toggle_end:
                           4964 ;	cursor.c 70
                           4965 ;	genLabel
                           4966 ;	genFunction
                           4967 ;	---------------------------------
                           4968 ; Function cursor_move
                           4969 ; ---------------------------------
   10F0                    4970 ___cursor_move_start:
   10F0                    4971 _cursor_move:
   10F0 E8 FA              4972 	lda	sp,-6(sp)
                           4973 ;	cursor.c 71
                           4974 ;	genPointerGet
   10F2 11 FC 01           4975 	ld	de,#_cursor
   10F5 1A                 4976 	ld	a,(de)
   10F6 4F                 4977 	ld	c,a
                           4978 ;	genLeftShift
                           4979 ;	AOP_STK for 
                           4980 ;	AOP_STK for _cursor_move_sloc0_1_0
   10F7 F8 08              4981 	lda	hl,8(sp)
   10F9 7E                 4982 	ld	a,(hl)
   10FA F8 00              4983 	lda	hl,0(sp)
   10FC 77                 4984 	ld	(hl),a
   10FD F8 09              4985 	lda	hl,9(sp)
   10FF 7E                 4986 	ld	a,(hl)
   1100 F8 01              4987 	lda	hl,1(sp)
   1102 77                 4988 	ld	(hl),a
   1103 3E 04              4989 	ld	a,#0x03+1
   1105 18 07              4990 	jr	00117$
   1107                    4991 00116$:
   1107 F8 00              4992 	lda	hl,0(sp)
   1109 CB 26              4993 	sla	(hl)
   110B 23                 4994 	inc	hl
   110C CB 16              4995 	rl	(hl)
   110E                    4996 00117$:
   110E 3D                 4997 	dec	a
   110F 20 F6              4998 	jr	nz,00116$
                           4999 ;	genCast
                           5000 ; Removed redundent load
   1111 06 00              5001 	ld	b,#0x00
                           5002 ;	genPlus
                           5003 ;	AOP_STK for _cursor_move_sloc0_1_0
                           5004 ;	Can't optimise plus by inc, falling back to the normal way
   1113 F8 00              5005 	lda	hl,0(sp)
   1115 2A                 5006 	ld	a,(hl+)
   1116 66                 5007 	ld	h,(hl)
   1117 6F                 5008 	ld	l,a
   1118 09                 5009 	add	hl,bc
   1119 4D                 5010 	ld	c,l
   111A 44                 5011 	ld	b,h
                           5012 ;	genAssign
                           5013 ;	AOP_STK for _cursor_move_destx_1_1
   111B F8 04              5014 	lda	hl,4(sp)
   111D 71                 5015 	ld	(hl),c
   111E 23                 5016 	inc	hl
   111F 70                 5017 	ld	(hl),b
                           5018 ;	cursor.c 72
                           5019 ;	genPlus
                           5020 ;	genPlusIncr
   1120 01 FD 01           5021 	ld	bc,#_cursor + 1
                           5022 ;	genPointerGet
   1123 0A                 5023 	ld	a,(bc)
   1124 4F                 5024 	ld	c,a
                           5025 ;	genLeftShift
                           5026 ;	AOP_STK for 
                           5027 ;	AOP_STK for _cursor_move_sloc0_1_0
   1125 F8 0A              5028 	lda	hl,10(sp)
   1127 7E                 5029 	ld	a,(hl)
   1128 F8 00              5030 	lda	hl,0(sp)
   112A 77                 5031 	ld	(hl),a
   112B F8 0B              5032 	lda	hl,11(sp)
   112D 7E                 5033 	ld	a,(hl)
   112E F8 01              5034 	lda	hl,1(sp)
   1130 77                 5035 	ld	(hl),a
   1131 3E 04              5036 	ld	a,#0x03+1
   1133 18 07              5037 	jr	00119$
   1135                    5038 00118$:
   1135 F8 00              5039 	lda	hl,0(sp)
   1137 CB 26              5040 	sla	(hl)
   1139 23                 5041 	inc	hl
   113A CB 16              5042 	rl	(hl)
   113C                    5043 00119$:
   113C 3D                 5044 	dec	a
   113D 20 F6              5045 	jr	nz,00118$
                           5046 ;	genCast
                           5047 ; Removed redundent load
   113F 06 00              5048 	ld	b,#0x00
                           5049 ;	genPlus
                           5050 ;	AOP_STK for _cursor_move_sloc0_1_0
                           5051 ;	Can't optimise plus by inc, falling back to the normal way
   1141 F8 00              5052 	lda	hl,0(sp)
   1143 2A                 5053 	ld	a,(hl+)
   1144 66                 5054 	ld	h,(hl)
   1145 6F                 5055 	ld	l,a
   1146 09                 5056 	add	hl,bc
   1147 4D                 5057 	ld	c,l
   1148 44                 5058 	ld	b,h
                           5059 ;	genAssign
                           5060 ;	(registers are the same)
                           5061 ;	cursor.c 76
                           5062 ;	genCmpLt
                           5063 ;	AOP_STK for _cursor_move_destx_1_1
   1149 F8 05              5064 	lda	hl,5(sp)
   114B 7E                 5065 	ld	a,(hl)
   114C EE 80              5066 	xor	a,#0x80
   114E 5F                 5067 	ld	e,a
   114F 16 80              5068 	ld	d,#0x80
   1151 2B                 5069 	dec	hl
   1152 7E                 5070 	ld	a,(hl)
   1153 D6 08              5071 	sub	a,#0x08
   1155 7B                 5072 	ld	a,e
   1156 9A                 5073 	sbc	a,d
   1157 DA 86 11           5074 	jp	c,00101$
                           5075 ;	genCmpGt
                           5076 ;	AOP_STK for _cursor_move_destx_1_1
   115A 1E 80              5077 	ld	e,#0x80
   115C 23                 5078 	inc	hl
   115D 7E                 5079 	ld	a,(hl)
   115E EE 80              5080 	xor	a,#0x80
   1160 57                 5081 	ld	d,a
   1161 3E 88              5082 	ld	a,#0x88
   1163 2B                 5083 	dec	hl
   1164 96                 5084 	sub	a,(hl)
   1165 7B                 5085 	ld	a,e
   1166 9A                 5086 	sbc	a,d
   1167 DA 86 11           5087 	jp	c,00101$
                           5088 ;	genCmpLt
   116A 78                 5089 	ld	a,b
   116B EE 80              5090 	xor	a,#0x80
   116D 5F                 5091 	ld	e,a
   116E 16 80              5092 	ld	d,#0x80
   1170 79                 5093 	ld	a,c
   1171 D6 10              5094 	sub	a,#0x10
   1173 7B                 5095 	ld	a,e
   1174 9A                 5096 	sbc	a,d
   1175 DA 86 11           5097 	jp	c,00101$
                           5098 ;	genCmpGt
   1178 1E 80              5099 	ld	e,#0x80
   117A 78                 5100 	ld	a,b
   117B EE 80              5101 	xor	a,#0x80
   117D 57                 5102 	ld	d,a
   117E 3E 80              5103 	ld	a,#0x80
   1180 91                 5104 	sub	a,c
   1181 7B                 5105 	ld	a,e
   1182 9A                 5106 	sbc	a,d
   1183 D2 89 11           5107 	jp	nc,00102$
                           5108 ;	genLabel
   1186                    5109 00101$:
                           5110 ;	cursor.c 77
                           5111 ;	genRet
   1186 C3 2D 12           5112 	jp	00109$
                           5113 ;	genLabel
   1189                    5114 00102$:
                           5115 ;	cursor.c 81
                           5116 ;	genMinus
   1189 79                 5117 	ld	a,c
   118A C6 F0              5118 	add	a,#0xF0
   118C 4F                 5119 	ld	c,a
   118D 78                 5120 	ld	a,b
   118E CE FF              5121 	adc	a,#0xFF
   1190 47                 5122 	ld	b,a
                           5123 ;	genRightShift
                           5124 ;	AOP_STK for _cursor_move_destindex_1_1
   1191 F8 02              5125 	lda	hl,2(sp)
   1193 71                 5126 	ld	(hl),c
   1194 23                 5127 	inc	hl
   1195 70                 5128 	ld	(hl),b
   1196 CB 2E              5129 	sra	(hl)
   1198 2B                 5130 	dec	hl
   1199 CB 1E              5131 	rr	(hl)
   119B 23                 5132 	inc	hl
   119C CB 2E              5133 	sra	(hl)
   119E 2B                 5134 	dec	hl
   119F CB 1E              5135 	rr	(hl)
   11A1 23                 5136 	inc	hl
   11A2 CB 2E              5137 	sra	(hl)
   11A4 2B                 5138 	dec	hl
   11A5 CB 1E              5139 	rr	(hl)
   11A7 23                 5140 	inc	hl
   11A8 CB 2E              5141 	sra	(hl)
   11AA 2B                 5142 	dec	hl
   11AB CB 1E              5143 	rr	(hl)
                           5144 ;	cursor.c 82
                           5145 ;	genMinus
                           5146 ;	AOP_STK for _cursor_move_destx_1_1
   11AD 23                 5147 	inc	hl
   11AE 23                 5148 	inc	hl
   11AF 5E                 5149 	ld	e,(hl)
   11B0 23                 5150 	inc	hl
   11B1 56                 5151 	ld	d,(hl)
   11B2 21 08 00           5152 	ld	hl,#0x0008
   11B5 7B                 5153 	ld	a,e
   11B6 95                 5154 	sub	a,l
   11B7 5F                 5155 	ld	e,a
   11B8 7A                 5156 	ld	a,d
   11B9 9C                 5157 	sbc	a,h
   11BA 47                 5158 	ld	b,a
   11BB 4B                 5159 	ld	c,e
                           5160 ;	genRightShift
   11BC CB 28              5161 	sra	b
   11BE CB 19              5162 	rr	c
   11C0 CB 28              5163 	sra	b
   11C2 CB 19              5164 	rr	c
   11C4 CB 28              5165 	sra	b
   11C6 CB 19              5166 	rr	c
   11C8 CB 28              5167 	sra	b
   11CA CB 19              5168 	rr	c
                           5169 ;	genLeftShift
                           5170 ;	AOP_STK for _cursor_move_destindex_1_1
                           5171 ;	AOP_STK for _cursor_move_sloc0_1_0
   11CC F8 02              5172 	lda	hl,2(sp)
   11CE 7E                 5173 	ld	a,(hl)
   11CF 2B                 5174 	dec	hl
   11D0 2B                 5175 	dec	hl
   11D1 77                 5176 	ld	(hl),a
   11D2 F8 03              5177 	lda	hl,3(sp)
   11D4 7E                 5178 	ld	a,(hl)
   11D5 2B                 5179 	dec	hl
   11D6 2B                 5180 	dec	hl
   11D7 77                 5181 	ld	(hl),a
   11D8 3E 04              5182 	ld	a,#0x03+1
   11DA 18 07              5183 	jr	00125$
   11DC                    5184 00124$:
   11DC F8 00              5185 	lda	hl,0(sp)
   11DE CB 26              5186 	sla	(hl)
   11E0 23                 5187 	inc	hl
   11E1 CB 16              5188 	rl	(hl)
   11E3                    5189 00125$:
   11E3 3D                 5190 	dec	a
   11E4 20 F6              5191 	jr	nz,00124$
                           5192 ;	genPlus
                           5193 ;	AOP_STK for _cursor_move_sloc0_1_0
                           5194 ;	Can't optimise plus by inc, falling back to the normal way
   11E6 F8 00              5195 	lda	hl,0(sp)
   11E8 2A                 5196 	ld	a,(hl+)
   11E9 66                 5197 	ld	h,(hl)
   11EA 6F                 5198 	ld	l,a
   11EB 09                 5199 	add	hl,bc
   11EC 4D                 5200 	ld	c,l
   11ED 44                 5201 	ld	b,h
                           5202 ;	genPlus
                           5203 ;	AOP_STK for _cursor_move_destindex_1_1
                           5204 ;	Can't optimise plus by inc, falling back to the normal way
   11EE F8 02              5205 	lda	hl,2(sp)
   11F0 2A                 5206 	ld	a,(hl+)
   11F1 66                 5207 	ld	h,(hl)
   11F2 6F                 5208 	ld	l,a
   11F3 09                 5209 	add	hl,bc
   11F4 7D                 5210 	ld	a,l
   11F5 54                 5211 	ld	d,h
   11F6 F8 02              5212 	lda	hl,2(sp)
   11F8 22                 5213 	ld	(hl+),a
   11F9 72                 5214 	ld	(hl),d
                           5215 ;	cursor.c 83
                           5216 ;	genIfx
                           5217 ;	AOP_HL for _selected
   11FA AF                 5218 	xor	a,a
   11FB 21 00 02           5219 	ld	hl,#_selected
   11FE B6                 5220 	or	a,(hl)
   11FF CA 17 12           5221 	jp	z,00107$
                           5222 ;	genPlus
                           5223 ;	AOP_STK for _cursor_move_destindex_1_1
                           5224 ;	Can't optimise plus by inc, falling back to the normal way
   1202 11 02 00           5225 	ld	de,#_level_objects
   1205 F8 02              5226 	lda	hl,2(sp)
   1207 2A                 5227 	ld	a,(hl+)
   1208 66                 5228 	ld	h,(hl)
   1209 6F                 5229 	ld	l,a
   120A 19                 5230 	add	hl,de
   120B 4D                 5231 	ld	c,l
   120C 44                 5232 	ld	b,h
                           5233 ;	genPointerGet
   120D 0A                 5234 	ld	a,(bc)
                           5235 ;	genCmpEq
                           5236 ; genCmpEq: left 1, right 1, result 0
   120E 4F                 5237 	ld	c,a
   120F FE 08              5238 	cp	a,#0x08
                           5239 ;	cursor.c 84
                           5240 ;	genRet
                           5241 ;	genLabel
   1211 CA 17 12           5242 	jp	z,00107$
   1214                    5243 00126$:
   1214 C3 2D 12           5244 	jp	00109$
   1217                    5245 00107$:
                           5246 ;	cursor.c 86
                           5247 ;	genPlus
                           5248 ;	genPlusIncr
   1217 01 FE 01           5249 	ld	bc,#_cursor + 2
                           5250 ;	genCast
                           5251 ;	AOP_STK for 
   121A F8 08              5252 	lda	hl,8(sp)
   121C 7E                 5253 	ld	a,(hl)
                           5254 ;	genAssign (pointer)
   121D 02                 5255 	ld	(bc),a
                           5256 ;	cursor.c 87
                           5257 ;	genPlus
                           5258 ;	genPlusIncr
   121E 01 FF 01           5259 	ld	bc,#_cursor + 3
                           5260 ;	genCast
                           5261 ;	AOP_STK for 
   1221 23                 5262 	inc	hl
   1222 23                 5263 	inc	hl
   1223 7E                 5264 	ld	a,(hl)
                           5265 ;	genAssign (pointer)
   1224 02                 5266 	ld	(bc),a
                           5267 ;	cursor.c 88
                           5268 ;	genAssign
                           5269 ;	AOP_HL for _counter
   1225 21 01 02           5270 	ld	hl,#_counter
   1228 36 08              5271 	ld	(hl),#0x08
                           5272 ;	cursor.c 89
                           5273 ;	genCall
                           5274 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   122A CD 6C 03           5275 	call	_move_cursor_sound
                           5276 ;	genLabel
   122D                    5277 00109$:
                           5278 ;	genEndFunction
   122D E8 06              5279 	lda	sp,6(sp)
   122F C9                 5280 	ret
   1230                    5281 ___cursor_move_end:
                           5282 ;	cursor.c 92
                           5283 ;	genLabel
                           5284 ;	genFunction
                           5285 ;	---------------------------------
                           5286 ; Function cursor_update
                           5287 ; ---------------------------------
   1230                    5288 ___cursor_update_start:
   1230                    5289 _cursor_update:
   1230 E8 F3              5290 	lda	sp,-13(sp)
                           5291 ;	cursor.c 95
                           5292 ;	genIfx
                           5293 ;	AOP_HL for _defeat
   1232 AF                 5294 	xor	a,a
   1233 21 B3 01           5295 	ld	hl,#_defeat
   1236 B6                 5296 	or	a,(hl)
                           5297 ;	cursor.c 96
                           5298 ;	genRet
                           5299 ;	genLabel
   1237 C2 8D 13           5300 	jp	nz,00121$
   123A                    5301 00102$:
                           5302 ;	cursor.c 98
                           5303 ;	genCall
                           5304 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   123A CD 00 00           5305 	call	_joypad
   123D 4B                 5306 	ld	c,e
                           5307 ;	genAssign
                           5308 ;	(registers are the same)
                           5309 ;	cursor.c 100
                           5310 ;	genCmpEq
                           5311 ;	AOP_HL for _counter
                           5312 ; genCmpEq: left 1, right 1, result 0
   123E 21 01 02           5313 	ld	hl,#_counter
   1241 7E                 5314 	ld	a,(hl)
   1242 B7                 5315 	or	a,a
   1243 C2 C2 12           5316 	jp	nz,00111$
   1246 18 03              5317 	jr	00136$
   1248                    5318 00135$:
   1248 C3 C2 12           5319 	jp	00111$
   124B                    5320 00136$:
                           5321 ;	cursor.c 101
                           5322 ;	genCmpEq
                           5323 ; genCmpEq: left 1, right 1, result 0
   124B 79                 5324 	ld	a,c
   124C FE 01              5325 	cp	a,#0x01
   124E CA A2 12           5326 	jp	z,00106$
   1251                    5327 00137$:
                           5328 ;	genCmpEq
                           5329 ; genCmpEq: left 1, right 1, result 0
   1251 79                 5330 	ld	a,c
   1252 FE 02              5331 	cp	a,#0x02
   1254 CA 92 12           5332 	jp	z,00105$
   1257                    5333 00138$:
                           5334 ;	genCmpEq
                           5335 ; genCmpEq: left 1, right 1, result 0
   1257 79                 5336 	ld	a,c
   1258 FE 04              5337 	cp	a,#0x04
   125A CA 72 12           5338 	jp	z,00103$
   125D                    5339 00139$:
                           5340 ;	genCmpEq
                           5341 ; genCmpEq: left 1, right 1, result 0
   125D 79                 5342 	ld	a,c
   125E FE 08              5343 	cp	a,#0x08
   1260 CA 82 12           5344 	jp	z,00104$
   1263                    5345 00140$:
                           5346 ;	genCmpEq
                           5347 ; genCmpEq: left 1, right 1, result 0
   1263 79                 5348 	ld	a,c
   1264 FE 10              5349 	cp	a,#0x10
   1266 CA B2 12           5350 	jp	z,00107$
   1269                    5351 00141$:
                           5352 ;	genCmpEq
                           5353 ; genCmpEq: left 1, right 1, result 0
   1269 79                 5354 	ld	a,c
   126A FE 40              5355 	cp	a,#0x40
   126C CA B8 12           5356 	jp	z,00108$
   126F                    5357 00142$:
                           5358 ;	genGoto
   126F C3 00 13           5359 	jp	00112$
                           5360 ;	cursor.c 102
                           5361 ;	genLabel
   1272                    5362 00103$:
                           5363 ;	genIpush
                           5364 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1272 21 FE FF           5365 	ld	hl,#0xFFFFFFFE
   1275 E5                 5366 	push	hl
                           5367 ;	genIpush
   1276 21 00 00           5368 	ld	hl,#0x0000
   1279 E5                 5369 	push	hl
                           5370 ;	genCall
   127A CD F0 10           5371 	call	_cursor_move
   127D E8 04              5372 	lda	sp,4(sp)
                           5373 ;	genGoto
   127F C3 00 13           5374 	jp	00112$
                           5375 ;	cursor.c 103
                           5376 ;	genLabel
   1282                    5377 00104$:
                           5378 ;	genIpush
                           5379 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1282 21 02 00           5380 	ld	hl,#0x0002
   1285 E5                 5381 	push	hl
                           5382 ;	genIpush
   1286 21 00 00           5383 	ld	hl,#0x0000
   1289 E5                 5384 	push	hl
                           5385 ;	genCall
   128A CD F0 10           5386 	call	_cursor_move
   128D E8 04              5387 	lda	sp,4(sp)
                           5388 ;	genGoto
   128F C3 00 13           5389 	jp	00112$
                           5390 ;	cursor.c 104
                           5391 ;	genLabel
   1292                    5392 00105$:
                           5393 ;	genIpush
                           5394 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1292 21 00 00           5395 	ld	hl,#0x0000
   1295 E5                 5396 	push	hl
                           5397 ;	genIpush
   1296 21 FE FF           5398 	ld	hl,#0xFFFFFFFE
   1299 E5                 5399 	push	hl
                           5400 ;	genCall
   129A CD F0 10           5401 	call	_cursor_move
   129D E8 04              5402 	lda	sp,4(sp)
                           5403 ;	genGoto
   129F C3 00 13           5404 	jp	00112$
                           5405 ;	cursor.c 105
                           5406 ;	genLabel
   12A2                    5407 00106$:
                           5408 ;	genIpush
                           5409 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12A2 21 00 00           5410 	ld	hl,#0x0000
   12A5 E5                 5411 	push	hl
                           5412 ;	genIpush
   12A6 21 02 00           5413 	ld	hl,#0x0002
   12A9 E5                 5414 	push	hl
                           5415 ;	genCall
   12AA CD F0 10           5416 	call	_cursor_move
   12AD E8 04              5417 	lda	sp,4(sp)
                           5418 ;	genGoto
   12AF C3 00 13           5419 	jp	00112$
                           5420 ;	cursor.c 106
                           5421 ;	genLabel
   12B2                    5422 00107$:
                           5423 ;	genCall
                           5424 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12B2 CD 64 0F           5425 	call	_cursor_toggle
                           5426 ;	genGoto
   12B5 C3 00 13           5427 	jp	00112$
                           5428 ;	cursor.c 108
                           5429 ;	genLabel
   12B8                    5430 00108$:
                           5431 ;	genPlus
                           5432 ;	AOP_HL for _level
                           5433 ;	genPlusIncr
   12B8 21 B2 01           5434 	ld	hl,#_level
   12BB 34                 5435 	inc	(hl)
                           5436 ;	cursor.c 109
                           5437 ;	genCall
                           5438 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12BC CD BF 14           5439 	call	_display_level
                           5440 ;	cursor.c 111
                           5441 ;	genGoto
   12BF C3 00 13           5442 	jp	00112$
                           5443 ;	genLabel
   12C2                    5444 00111$:
                           5445 ;	cursor.c 113
                           5446 ;	genPointerGet
   12C2 11 FC 01           5447 	ld	de,#_cursor
   12C5 1A                 5448 	ld	a,(de)
   12C6 4F                 5449 	ld	c,a
                           5450 ;	genPlus
                           5451 ;	AOP_STK for _cursor_update_sloc0_1_0
                           5452 ;	genPlusIncr
                           5453 ;	Can't optimise plus by inc, falling back to the normal way
   12C7 11 FC 01           5454 	ld	de,#_cursor
   12CA 21 02 00           5455 	ld	hl,#0x0002
   12CD 19                 5456 	add	hl,de
   12CE 7D                 5457 	ld	a,l
   12CF 54                 5458 	ld	d,h
   12D0 F8 09              5459 	lda	hl,9(sp)
                           5460 ;	genPointerGet
                           5461 ;	AOP_STK for _cursor_update_sloc0_1_0
   12D2 22                 5462 	ld	(hl+),a
   12D3 72                 5463 	ld	(hl),d
   12D4 5F                 5464 	ld	e,a
   12D5 1A                 5465 	ld	a,(de)
   12D6 47                 5466 	ld	b,a
                           5467 ;	genPlus
                           5468 ;	Can't optimise plus by inc, falling back to the normal way
   12D7 79                 5469 	ld	a,c
   12D8 80                 5470 	add	a,b
                           5471 ;	genAssign (pointer)
   12D9 11 FC 01           5472 	ld	de,#_cursor
   12DC 12                 5473 	ld	(de),a
                           5474 ;	cursor.c 114
                           5475 ;	genPlus
                           5476 ;	genPlusIncr
   12DD 01 FD 01           5477 	ld	bc,#_cursor + 1
                           5478 ;	genPointerGet
                           5479 ;	AOP_STK for _cursor_update_sloc0_1_0
   12E0 0A                 5480 	ld	a,(bc)
   12E1 2B                 5481 	dec	hl
   12E2 77                 5482 	ld	(hl),a
                           5483 ;	genPlus
                           5484 ;	AOP_STK for _cursor_update_sloc1_1_0
                           5485 ;	genPlusIncr
                           5486 ;	Can't optimise plus by inc, falling back to the normal way
   12E3 11 FC 01           5487 	ld	de,#_cursor
   12E6 21 03 00           5488 	ld	hl,#0x0003
   12E9 19                 5489 	add	hl,de
   12EA 7D                 5490 	ld	a,l
   12EB 54                 5491 	ld	d,h
   12EC F8 07              5492 	lda	hl,7(sp)
                           5493 ;	genPointerGet
                           5494 ;	AOP_STK for _cursor_update_sloc1_1_0
                           5495 ;	AOP_STK for _cursor_update_sloc2_1_0
   12EE 22                 5496 	ld	(hl+),a
   12EF 72                 5497 	ld	(hl),d
   12F0 5F                 5498 	ld	e,a
   12F1 1A                 5499 	ld	a,(de)
   12F2 2B                 5500 	dec	hl
   12F3 2B                 5501 	dec	hl
   12F4 77                 5502 	ld	(hl),a
                           5503 ;	genPlus
                           5504 ;	AOP_STK for _cursor_update_sloc0_1_0
                           5505 ;	AOP_STK for _cursor_update_sloc2_1_0
                           5506 ;	Can't optimise plus by inc, falling back to the normal way
   12F5 F8 09              5507 	lda	hl,9(sp)
   12F7 7E                 5508 	ld	a,(hl)
   12F8 F8 06              5509 	lda	hl,6(sp)
   12FA 86                 5510 	add	a,(hl)
                           5511 ;	genAssign (pointer)
   12FB 02                 5512 	ld	(bc),a
                           5513 ;	cursor.c 115
                           5514 ;	genMinus
                           5515 ;	AOP_HL for _counter
   12FC 21 01 02           5516 	ld	hl,#_counter
   12FF 35                 5517 	dec	(hl)
                           5518 ;	genLabel
   1300                    5519 00112$:
                           5520 ;	cursor.c 118
                           5521 ;	genAssign
                           5522 ;	AOP_STK for _cursor_update_i_1_1
   1300 F8 0C              5523 	lda	hl,12(sp)
   1302 36 00              5524 	ld	(hl),#0x00
                           5525 ;	genLabel
   1304                    5526 00117$:
                           5527 ;	genCmpEq
                           5528 ;	AOP_STK for _cursor_update_i_1_1
                           5529 ; genCmpEq: left 1, right 1, result 0
   1304 F8 0C              5530 	lda	hl,12(sp)
   1306 7E                 5531 	ld	a,(hl)
   1307 FE 04              5532 	cp	a,#0x04
   1309 CA 8D 13           5533 	jp	z,00121$
   130C                    5534 00143$:
                           5535 ;	cursor.c 119
                           5536 ;	genAssign
                           5537 ;	AOP_STK for _cursor_update_j_1_1
   130C F8 0B              5538 	lda	hl,11(sp)
   130E 36 00              5539 	ld	(hl),#0x00
                           5540 ;	genLabel
   1310                    5541 00113$:
                           5542 ;	genCmpEq
                           5543 ;	AOP_STK for _cursor_update_j_1_1
                           5544 ; genCmpEq: left 1, right 1, result 1
   1310 F8 0B              5545 	lda	hl,11(sp)
   1312 7E                 5546 	ld	a,(hl)
   1313 FE 04              5547 	cp	a,#0x04
   1315 C2 1C 13           5548 	jp	nz,00144$
   1318 3E 01              5549 	ld	a,#0x01
   131A 18 01              5550 	jr	00145$
   131C                    5551 00144$:
   131C AF                 5552 	xor	a,a
   131D                    5553 00145$:
                           5554 ;	genIfx
   131D B7                 5555 	or	a,a
   131E C2 87 13           5556 	jp	nz,00119$
                           5557 ;	cursor.c 121
                           5558 ;	genPlus
                           5559 ;	genPlusIncr
   1321 01 FD 01           5560 	ld	bc,#_cursor + 1
                           5561 ;	genPointerGet
                           5562 ;	AOP_STK for _cursor_update_sloc2_1_0
   1324 0A                 5563 	ld	a,(bc)
   1325 F8 06              5564 	lda	hl,6(sp)
   1327 77                 5565 	ld	(hl),a
                           5566 ;	genLeftShift
                           5567 ;	AOP_STK for _cursor_update_i_1_1
                           5568 ;	AOP_STK for _cursor_update_sloc1_1_0
   1328 F8 0C              5569 	lda	hl,12(sp)
   132A 7E                 5570 	ld	a,(hl)
   132B CB 27              5571 	sla	a
   132D CB 17              5572 	rl	a
   132F CB 17              5573 	rl	a
   1331 E6 F8              5574 	and	a,#0xF8
   1333 F8 07              5575 	lda	hl,7(sp)
                           5576 ;	genPlus
                           5577 ;	AOP_STK for _cursor_update_sloc2_1_0
                           5578 ;	AOP_STK for _cursor_update_sloc1_1_0
                           5579 ;	AOP_STK for _cursor_update_sloc0_1_0
                           5580 ;	Can't optimise plus by inc, falling back to the normal way
   1335 32                 5581 	ld      (hl-),a
   1336 2A                 5582 	ld	a,(hl+)
   1337 86                 5583 	add	a,(hl)
   1338 23                 5584 	inc	hl
   1339 23                 5585 	inc	hl
   133A 77                 5586 	ld	(hl),a
                           5587 ;	genPointerGet
                           5588 ;	AOP_STK for _cursor_update_sloc3_1_0
   133B 11 FC 01           5589 	ld	de,#_cursor
   133E 1A                 5590 	ld	a,(de)
   133F F8 05              5591 	lda	hl,5(sp)
   1341 77                 5592 	ld	(hl),a
                           5593 ;	genLeftShift
                           5594 ;	AOP_STK for _cursor_update_j_1_1
                           5595 ;	AOP_STK for _cursor_update_sloc4_1_0
   1342 F8 0B              5596 	lda	hl,11(sp)
   1344 7E                 5597 	ld	a,(hl)
   1345 CB 27              5598 	sla	a
   1347 CB 17              5599 	rl	a
   1349 CB 17              5600 	rl	a
   134B E6 F8              5601 	and	a,#0xF8
   134D F8 04              5602 	lda	hl,4(sp)
                           5603 ;	genPlus
                           5604 ;	AOP_STK for _cursor_update_sloc3_1_0
                           5605 ;	AOP_STK for _cursor_update_sloc4_1_0
                           5606 ;	AOP_STK for _cursor_update_sloc5_1_0
                           5607 ;	Can't optimise plus by inc, falling back to the normal way
   134F 22                 5608 	ld	(hl+),a
   1350 7E                 5609 	ld	a,(hl)
   1351 2B                 5610 	dec	hl
   1352 86                 5611 	add	a,(hl)
   1353 2B                 5612 	dec	hl
   1354 77                 5613 	ld	(hl),a
                           5614 ;	genLeftShift
                           5615 ;	AOP_STK for _cursor_update_i_1_1
                           5616 ;	AOP_STK for _cursor_update_sloc6_1_0
   1355 F8 0C              5617 	lda	hl,12(sp)
   1357 7E                 5618 	ld	a,(hl)
   1358 87                 5619 	add	a,a
   1359 87                 5620 	add	a,a
   135A F8 02              5621 	lda	hl,2(sp)
                           5622 ;	genPlus
                           5623 ;	AOP_STK for _cursor_update_sloc6_1_0
                           5624 ;	AOP_STK for _cursor_update_j_1_1
                           5625 ;	AOP_STK for _cursor_update_sloc7_1_0
                           5626 ;	Can't optimise plus by inc, falling back to the normal way
   135C 77                 5627 	ld      (hl),a
                           5628 ; Removed redundent load
   135D F8 0B              5629 	lda	hl,11(sp)
   135F 86                 5630 	add	a,(hl)
   1360 F8 01              5631 	lda	hl,1(sp)
   1362 77                 5632 	ld	(hl),a
                           5633 ;	genIpush
                           5634 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1363 C5                 5635 	push	bc
                           5636 ;	AOP_STK for _cursor_update_sloc0_1_0
   1364 F8 0B              5637 	lda	hl,11(sp)
   1366 7E                 5638 	ld	a,(hl)
   1367 F5                 5639 	push	af
   1368 33                 5640 	inc	sp
                           5641 ;	genIpush
                           5642 ;	AOP_STK for _cursor_update_sloc5_1_0
   1369 F8 06              5643 	lda	hl,6(sp)
   136B 7E                 5644 	ld	a,(hl)
   136C F5                 5645 	push	af
   136D 33                 5646 	inc	sp
                           5647 ;	genIpush
                           5648 ;	AOP_STK for _cursor_update_sloc7_1_0
   136E 2B                 5649 	dec	hl
   136F 2B                 5650 	dec	hl
   1370 7E                 5651 	ld	a,(hl)
   1371 F5                 5652 	push	af
   1372 33                 5653 	inc	sp
                           5654 ;	genCall
   1373 CD 00 00           5655 	call	_move_sprite
   1376 E8 03              5656 	lda	sp,3(sp)
   1378 C1                 5657 	pop	bc
                           5658 ;	cursor.c 119
                           5659 ;	genPlus
                           5660 ;	AOP_STK for _cursor_update_j_1_1
                           5661 ;	AOP_STK for _cursor_update_sloc8_1_0
                           5662 ;	genPlusIncr
                           5663 ;	Can't optimise plus by inc, falling back to the normal way
   1379 F8 0B              5664 	lda	hl,11(sp)
   137B 7E                 5665 	ld	a,(hl)
   137C C6 01              5666 	add	a,#0x01
   137E F8 00              5667 	lda	hl,0(sp)
                           5668 ;	genAssign
                           5669 ;	AOP_STK for _cursor_update_sloc8_1_0
                           5670 ;	AOP_STK for _cursor_update_j_1_1
   1380 77                 5671 	ld      (hl),a
                           5672 ; Removed redundent load
   1381 F8 0B              5673 	lda	hl,11(sp)
   1383 77                 5674 	ld	(hl),a
                           5675 ;	genGoto
   1384 C3 10 13           5676 	jp	00113$
                           5677 ;	genLabel
   1387                    5678 00119$:
                           5679 ;	cursor.c 118
                           5680 ;	genPlus
                           5681 ;	AOP_STK for _cursor_update_i_1_1
                           5682 ;	genPlusIncr
   1387 F8 0C              5683 	lda	hl,12(sp)
   1389 34                 5684 	inc	(hl)
                           5685 ;	genGoto
   138A C3 04 13           5686 	jp	00117$
                           5687 ;	genLabel
   138D                    5688 00121$:
                           5689 ;	genEndFunction
   138D E8 0D              5690 	lda	sp,13(sp)
   138F C9                 5691 	ret
   1390                    5692 ___cursor_update_end:
                           5693 ;	cursor.c 126
                           5694 ;	genLabel
                           5695 ;	genFunction
                           5696 ;	---------------------------------
                           5697 ; Function cursor_reset
                           5698 ; ---------------------------------
   1390                    5699 ___cursor_reset_start:
   1390                    5700 _cursor_reset:
                           5701 	
                           5702 ;	cursor.c 127
                           5703 ;	genIpush
                           5704 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1390 21 05 00           5705 	ld	hl,#0x0005
   1393 E5                 5706 	push	hl
                           5707 ;	genCall
   1394 CD 00 00           5708 	call	_set_sprite_tile
   1397 E8 02              5709 	lda	sp,2(sp)
                           5710 ;	cursor.c 128
                           5711 ;	genIpush
                           5712 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1399 21 06 00           5713 	ld	hl,#0x0006
   139C E5                 5714 	push	hl
                           5715 ;	genCall
   139D CD 00 00           5716 	call	_set_sprite_tile
   13A0 E8 02              5717 	lda	sp,2(sp)
                           5718 ;	cursor.c 129
                           5719 ;	genIpush
                           5720 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13A2 21 09 00           5721 	ld	hl,#0x0009
   13A5 E5                 5722 	push	hl
                           5723 ;	genCall
   13A6 CD 00 00           5724 	call	_set_sprite_tile
   13A9 E8 02              5725 	lda	sp,2(sp)
                           5726 ;	cursor.c 130
                           5727 ;	genIpush
                           5728 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13AB 21 0A 00           5729 	ld	hl,#0x000A
   13AE E5                 5730 	push	hl
                           5731 ;	genCall
   13AF CD 00 00           5732 	call	_set_sprite_tile
   13B2 E8 02              5733 	lda	sp,2(sp)
                           5734 ;	cursor.c 132
                           5735 ;	genAssign
                           5736 ;	AOP_HL for _counter
   13B4 21 01 02           5737 	ld	hl,#_counter
   13B7 36 00              5738 	ld	(hl),#0x00
                           5739 ;	cursor.c 133
                           5740 ;	genAssign
                           5741 ;	AOP_HL for _selected
   13B9 21 00 02           5742 	ld	hl,#_selected
   13BC 36 00              5743 	ld	(hl),#0x00
                           5744 ;	cursor.c 134
                           5745 ;	genAssign (pointer)
   13BE 11 FC 01           5746 	ld	de,#_cursor
   13C1 3E 08              5747 	ld	a,#0x08
   13C3 12                 5748 	ld	(de),a
                           5749 ;	cursor.c 135
                           5750 ;	genPlus
                           5751 ;	genPlusIncr
   13C4 21 FD 01           5752 	ld	hl,#_cursor + 1
                           5753 ;	genAssign (pointer)
   13C7 36 10              5754 	ld	(hl),#0x10
                           5755 ;	cursor.c 136
                           5756 ;	genPlus
                           5757 ;	genPlusIncr
   13C9 23                 5758 	inc	hl
                           5759 ;	genAssign (pointer)
   13CA 36 00              5760 	ld	(hl),#0x00
                           5761 ;	cursor.c 137
                           5762 ;	genPlus
                           5763 ;	genPlusIncr
   13CC 23                 5764 	inc	hl
                           5765 ;	genAssign (pointer)
   13CD 36 00              5766 	ld	(hl),#0x00
                           5767 ;	genLabel
   13CF                    5768 00101$:
                           5769 ;	genEndFunction
                           5770 	
   13CF C9                 5771 	ret
   13D0                    5772 ___cursor_reset_end:
                           5773 ;	cursor.c 140
                           5774 ;	genLabel
                           5775 ;	genFunction
                           5776 ;	---------------------------------
                           5777 ; Function cursor_init
                           5778 ; ---------------------------------
   13D0                    5779 ___cursor_init_start:
   13D0                    5780 _cursor_init:
                           5781 	
                           5782 ;	cursor.c 142
                           5783 ;	genIpush
                           5784 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13D0 21 00 01           5785 	ld	hl,#0x0100
   13D3 E5                 5786 	push	hl
                           5787 ;	genCall
   13D4 CD 00 00           5788 	call	_set_sprite_tile
   13D7 E8 02              5789 	lda	sp,2(sp)
                           5790 ;	cursor.c 143
                           5791 ;	genIpush
                           5792 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13D9 21 01 02           5793 	ld	hl,#0x0201
   13DC E5                 5794 	push	hl
                           5795 ;	genCall
   13DD CD 00 00           5796 	call	_set_sprite_tile
   13E0 E8 02              5797 	lda	sp,2(sp)
                           5798 ;	cursor.c 144
                           5799 ;	genIpush
                           5800 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13E2 21 04 03           5801 	ld	hl,#0x0304
   13E5 E5                 5802 	push	hl
                           5803 ;	genCall
   13E6 CD 00 00           5804 	call	_set_sprite_tile
   13E9 E8 02              5805 	lda	sp,2(sp)
                           5806 ;	cursor.c 147
                           5807 ;	genIpush
                           5808 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13EB 21 02 02           5809 	ld	hl,#0x0202
   13EE E5                 5810 	push	hl
                           5811 ;	genCall
   13EF CD 00 00           5812 	call	_set_sprite_tile
   13F2 E8 02              5813 	lda	sp,2(sp)
                           5814 ;	cursor.c 148
                           5815 ;	genIpush
                           5816 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13F4 21 02 20           5817 	ld	hl,#0x2002
   13F7 E5                 5818 	push	hl
                           5819 ;	genCall
   13F8 CD 00 00           5820 	call	_set_sprite_prop
   13FB E8 02              5821 	lda	sp,2(sp)
                           5822 ;	cursor.c 149
                           5823 ;	genIpush
                           5824 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13FD 21 03 01           5825 	ld	hl,#0x0103
   1400 E5                 5826 	push	hl
                           5827 ;	genCall
   1401 CD 00 00           5828 	call	_set_sprite_tile
   1404 E8 02              5829 	lda	sp,2(sp)
                           5830 ;	cursor.c 150
                           5831 ;	genIpush
                           5832 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1406 21 03 20           5833 	ld	hl,#0x2003
   1409 E5                 5834 	push	hl
                           5835 ;	genCall
   140A CD 00 00           5836 	call	_set_sprite_prop
   140D E8 02              5837 	lda	sp,2(sp)
                           5838 ;	cursor.c 151
                           5839 ;	genIpush
                           5840 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   140F 21 07 03           5841 	ld	hl,#0x0307
   1412 E5                 5842 	push	hl
                           5843 ;	genCall
   1413 CD 00 00           5844 	call	_set_sprite_tile
   1416 E8 02              5845 	lda	sp,2(sp)
                           5846 ;	cursor.c 152
                           5847 ;	genIpush
                           5848 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1418 21 07 20           5849 	ld	hl,#0x2007
   141B E5                 5850 	push	hl
                           5851 ;	genCall
   141C CD 00 00           5852 	call	_set_sprite_prop
   141F E8 02              5853 	lda	sp,2(sp)
                           5854 ;	cursor.c 155
                           5855 ;	genIpush
                           5856 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1421 21 08 03           5857 	ld	hl,#0x0308
   1424 E5                 5858 	push	hl
                           5859 ;	genCall
   1425 CD 00 00           5860 	call	_set_sprite_tile
   1428 E8 02              5861 	lda	sp,2(sp)
                           5862 ;	cursor.c 156
                           5863 ;	genIpush
                           5864 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   142A 21 08 40           5865 	ld	hl,#0x4008
   142D E5                 5866 	push	hl
                           5867 ;	genCall
   142E CD 00 00           5868 	call	_set_sprite_prop
   1431 E8 02              5869 	lda	sp,2(sp)
                           5870 ;	cursor.c 157
                           5871 ;	genIpush
                           5872 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1433 21 0C 01           5873 	ld	hl,#0x010C
   1436 E5                 5874 	push	hl
                           5875 ;	genCall
   1437 CD 00 00           5876 	call	_set_sprite_tile
   143A E8 02              5877 	lda	sp,2(sp)
                           5878 ;	cursor.c 158
                           5879 ;	genIpush
                           5880 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   143C 21 0C 40           5881 	ld	hl,#0x400C
   143F E5                 5882 	push	hl
                           5883 ;	genCall
   1440 CD 00 00           5884 	call	_set_sprite_prop
   1443 E8 02              5885 	lda	sp,2(sp)
                           5886 ;	cursor.c 159
                           5887 ;	genIpush
                           5888 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1445 21 0D 02           5889 	ld	hl,#0x020D
   1448 E5                 5890 	push	hl
                           5891 ;	genCall
   1449 CD 00 00           5892 	call	_set_sprite_tile
   144C E8 02              5893 	lda	sp,2(sp)
                           5894 ;	cursor.c 160
                           5895 ;	genIpush
                           5896 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   144E 21 0D 40           5897 	ld	hl,#0x400D
   1451 E5                 5898 	push	hl
                           5899 ;	genCall
   1452 CD 00 00           5900 	call	_set_sprite_prop
   1455 E8 02              5901 	lda	sp,2(sp)
                           5902 ;	cursor.c 163
                           5903 ;	genIpush
                           5904 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1457 21 0B 03           5905 	ld	hl,#0x030B
   145A E5                 5906 	push	hl
                           5907 ;	genCall
   145B CD 00 00           5908 	call	_set_sprite_tile
   145E E8 02              5909 	lda	sp,2(sp)
                           5910 ;	cursor.c 164
                           5911 ;	genIpush
                           5912 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1460 21 0B 60           5913 	ld	hl,#0x600B
   1463 E5                 5914 	push	hl
                           5915 ;	genCall
   1464 CD 00 00           5916 	call	_set_sprite_prop
   1467 E8 02              5917 	lda	sp,2(sp)
                           5918 ;	cursor.c 165
                           5919 ;	genIpush
                           5920 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1469 21 0E 02           5921 	ld	hl,#0x020E
   146C E5                 5922 	push	hl
                           5923 ;	genCall
   146D CD 00 00           5924 	call	_set_sprite_tile
   1470 E8 02              5925 	lda	sp,2(sp)
                           5926 ;	cursor.c 166
                           5927 ;	genIpush
                           5928 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1472 21 0E 60           5929 	ld	hl,#0x600E
   1475 E5                 5930 	push	hl
                           5931 ;	genCall
   1476 CD 00 00           5932 	call	_set_sprite_prop
   1479 E8 02              5933 	lda	sp,2(sp)
                           5934 ;	cursor.c 167
                           5935 ;	genIpush
                           5936 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   147B 21 0F 01           5937 	ld	hl,#0x010F
   147E E5                 5938 	push	hl
                           5939 ;	genCall
   147F CD 00 00           5940 	call	_set_sprite_tile
   1482 E8 02              5941 	lda	sp,2(sp)
                           5942 ;	cursor.c 168
                           5943 ;	genIpush
                           5944 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1484 21 0F 60           5945 	ld	hl,#0x600F
   1487 E5                 5946 	push	hl
                           5947 ;	genCall
   1488 CD 00 00           5948 	call	_set_sprite_prop
   148B E8 02              5949 	lda	sp,2(sp)
                           5950 ;	cursor.c 171
                           5951 ;	genIpush
                           5952 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   148D 21 05 00           5953 	ld	hl,#0x0005
   1490 E5                 5954 	push	hl
                           5955 ;	genCall
   1491 CD 00 00           5956 	call	_set_sprite_tile
   1494 E8 02              5957 	lda	sp,2(sp)
                           5958 ;	cursor.c 172
                           5959 ;	genIpush
                           5960 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1496 21 06 00           5961 	ld	hl,#0x0006
   1499 E5                 5962 	push	hl
                           5963 ;	genCall
   149A CD 00 00           5964 	call	_set_sprite_tile
   149D E8 02              5965 	lda	sp,2(sp)
                           5966 ;	cursor.c 173
                           5967 ;	genIpush
                           5968 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   149F 21 09 00           5969 	ld	hl,#0x0009
   14A2 E5                 5970 	push	hl
                           5971 ;	genCall
   14A3 CD 00 00           5972 	call	_set_sprite_tile
   14A6 E8 02              5973 	lda	sp,2(sp)
                           5974 ;	cursor.c 174
                           5975 ;	genIpush
                           5976 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14A8 21 0A 00           5977 	ld	hl,#0x000A
   14AB E5                 5978 	push	hl
                           5979 ;	genCall
   14AC CD 00 00           5980 	call	_set_sprite_tile
   14AF E8 02              5981 	lda	sp,2(sp)
                           5982 ;	cursor.c 176
                           5983 ;	genCall
                           5984 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14B1 CD 30 12           5985 	call	_cursor_update
                           5986 ;	genLabel
   14B4                    5987 00101$:
                           5988 ;	genEndFunction
                           5989 	
   14B4 C9                 5990 	ret
   14B5                    5991 ___cursor_init_end:
                           5992 ;	LazerMaze.c 30
                           5993 ;	genLabel
                           5994 ;	genFunction
                           5995 ;	---------------------------------
                           5996 ; Function display_title
                           5997 ; ---------------------------------
   14B5                    5998 ___display_title_start:
   14B5                    5999 _display_title:
                           6000 	
                           6001 ;	LazerMaze.c 31
                           6002 ;	genAssign
   14B5 01 00 20           6003 	ld	bc,#0x2000
                           6004 ;	genAssign (pointer)
   14B8 3E 01              6005 	ld	a,#0x01
   14BA 02                 6006 	ld	(bc),a
                           6007 ;	LazerMaze.c 32
                           6008 ;	genCall
                           6009 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14BB CD 00 00           6010 	call	_show_title
                           6011 ;	genLabel
   14BE                    6012 00101$:
                           6013 ;	genEndFunction
                           6014 	
   14BE C9                 6015 	ret
   14BF                    6016 ___display_title_end:
                           6017 ;	LazerMaze.c 35
                           6018 ;	genLabel
                           6019 ;	genFunction
                           6020 ;	---------------------------------
                           6021 ; Function display_level
                           6022 ; ---------------------------------
   14BF                    6023 ___display_level_start:
   14BF                    6024 _display_level:
   14BF E8 FD              6025 	lda	sp,-3(sp)
                           6026 ;	LazerMaze.c 36
                           6027 ;	genAssign
   14C1 01 00 20           6028 	ld	bc,#0x2000
                           6029 ;	genAssign (pointer)
   14C4 3E 02              6030 	ld	a,#0x02
   14C6 02                 6031 	ld	(bc),a
                           6032 ;	LazerMaze.c 37
                           6033 ;	genCall
                           6034 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14C7 CD 00 00           6035 	call	_display_off
                           6036 ;	LazerMaze.c 38
                           6037 ;	genAssign
                           6038 ;	AOP_HL for _defeat
   14CA 21 B3 01           6039 	ld	hl,#_defeat
   14CD 36 00              6040 	ld	(hl),#0x00
                           6041 ;	LazerMaze.c 40
                           6042 ;	genIpush
                           6043 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14CF 21 4A 00           6044 	ld	hl,#_current_level
   14D2 E5                 6045 	push	hl
                           6046 ;	genCall
   14D3 CD 88 0A           6047 	call	_init_background
   14D6 E8 02              6048 	lda	sp,2(sp)
                           6049 ;	LazerMaze.c 41
                           6050 ;	genIpush
                           6051 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14D8 21 02 00           6052 	ld	hl,#_level_objects
   14DB E5                 6053 	push	hl
                           6054 ;	genIpush
                           6055 ;	AOP_HL for _level
   14DC 21 B2 01           6056 	ld	hl,#_level
   14DF 7E                 6057 	ld	a,(hl)
   14E0 F5                 6058 	push	af
   14E1 33                 6059 	inc	sp
                           6060 ;	genCall
   14E2 CD 00 00           6061 	call	_show_level
   14E5 E8 03              6062 	lda	sp,3(sp)
                           6063 ;	LazerMaze.c 43
                           6064 ;	genIpush
                           6065 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14E7 21 4A 00           6066 	ld	hl,#_current_level
   14EA E5                 6067 	push	hl
                           6068 ;	genIpush
   14EB 21 02 00           6069 	ld	hl,#_level_objects
   14EE E5                 6070 	push	hl
                           6071 ;	genCall
   14EF CD 86 0B           6072 	call	_update_background
   14F2 E8 04              6073 	lda	sp,4(sp)
                           6074 ;	LazerMaze.c 44
                           6075 ;	genIpush
                           6076 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14F4 21 4A 00           6077 	ld	hl,#_current_level
   14F7 E5                 6078 	push	hl
                           6079 ;	genIpush
   14F8 21 14 12           6080 	ld	hl,#0x1214
   14FB E5                 6081 	push	hl
                           6082 ;	genIpush
   14FC 21 00 00           6083 	ld	hl,#0x0000
   14FF E5                 6084 	push	hl
                           6085 ;	genCall
   1500 CD 00 00           6086 	call	_set_bkg_tiles
   1503 E8 06              6087 	lda	sp,6(sp)
                           6088 ;	LazerMaze.c 46
                           6089 ;	genCall
                           6090 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1505 CD 90 13           6091 	call	_cursor_reset
                           6092 ;	LazerMaze.c 47
                           6093 ;	genAssign
   1508 01 40 FF           6094 	ld	bc,#0xFF40
                           6095 ;	genAssign
                           6096 ;	AOP_STK for _display_level_sloc0_1_0
   150B F8 01              6097 	lda	hl,1(sp)
   150D 36 40              6098 	ld	(hl),#0x40
   150F 23                 6099 	inc	hl
   1510 36 FF              6100 	ld	(hl),#0xFF
                           6101 ;	genPointerGet
                           6102 ;	AOP_STK for _display_level_sloc0_1_0
                           6103 ;	AOP_STK for _display_level_sloc1_1_0
   1512 2B                 6104 	dec	hl
   1513 5E                 6105 	ld	e,(hl)
   1514 23                 6106 	inc	hl
   1515 56                 6107 	ld	d,(hl)
   1516 1A                 6108 	ld	a,(de)
   1517 2B                 6109 	dec	hl
   1518 2B                 6110 	dec	hl
                           6111 ;	genOr
                           6112 ;	AOP_STK for _display_level_sloc1_1_0
   1519 77                 6113 	ld      (hl),a
   151A 7F                 6114 	ld      a,a
   151B F6 80              6115 	or	a,#0x80
                           6116 ;	genAssign (pointer)
   151D 02                 6117 	ld	(bc),a
                           6118 ;	genLabel
   151E                    6119 00101$:
                           6120 ;	genEndFunction
   151E E8 03              6121 	lda	sp,3(sp)
   1520 C9                 6122 	ret
   1521                    6123 ___display_level_end:
                           6124 ;	LazerMaze.c 50
                           6125 ;	genLabel
                           6126 ;	genFunction
                           6127 ;	---------------------------------
                           6128 ; Function display_victory
                           6129 ; ---------------------------------
   1521                    6130 ___display_victory_start:
   1521                    6131 _display_victory:
                           6132 	
                           6133 ;	LazerMaze.c 51
                           6134 ;	genAssign
   1521 01 00 20           6135 	ld	bc,#0x2000
                           6136 ;	genAssign (pointer)
   1524 3E 01              6137 	ld	a,#0x01
   1526 02                 6138 	ld	(bc),a
                           6139 ;	LazerMaze.c 52
                           6140 ;	genCall
                           6141 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1527 CD 00 00           6142 	call	_show_victory
                           6143 ;	genLabel
   152A                    6144 00101$:
                           6145 ;	genEndFunction
                           6146 	
   152A C9                 6147 	ret
   152B                    6148 ___display_victory_end:
                           6149 ;	LazerMaze.c 55
                           6150 ;	genLabel
                           6151 ;	genFunction
                           6152 ;	---------------------------------
                           6153 ; Function display_defeat
                           6154 ; ---------------------------------
   152B                    6155 ___display_defeat_start:
   152B                    6156 _display_defeat:
                           6157 	
                           6158 ;	LazerMaze.c 56
                           6159 ;	genAssign
   152B 01 00 20           6160 	ld	bc,#0x2000
                           6161 ;	genAssign (pointer)
   152E 3E 01              6162 	ld	a,#0x01
   1530 02                 6163 	ld	(bc),a
                           6164 ;	LazerMaze.c 57
                           6165 ;	genCall
                           6166 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1531 CD 00 00           6167 	call	_show_defeat
                           6168 ;	genLabel
   1534                    6169 00101$:
                           6170 ;	genEndFunction
                           6171 	
   1534 C9                 6172 	ret
   1535                    6173 ___display_defeat_end:
                           6174 ;	LazerMaze.c 60
                           6175 ;	genLabel
                           6176 ;	genFunction
                           6177 ;	---------------------------------
                           6178 ; Function main
                           6179 ; ---------------------------------
   1535                    6180 ___main_start:
   1535                    6181 _main:
   1535 E8 FD              6182 	lda	sp,-3(sp)
                           6183 ;	LazerMaze.c 62
                           6184 ;	genAssign
   1537 01 40 FF           6185 	ld	bc,#0xFF40
                           6186 ;	genAssign
                           6187 ;	AOP_STK for _main_sloc0_1_0
   153A F8 01              6188 	lda	hl,1(sp)
   153C 36 40              6189 	ld	(hl),#0x40
   153E 23                 6190 	inc	hl
   153F 36 FF              6191 	ld	(hl),#0xFF
                           6192 ;	genPointerGet
                           6193 ;	AOP_STK for _main_sloc0_1_0
                           6194 ;	AOP_STK for _main_sloc1_1_0
   1541 2B                 6195 	dec	hl
   1542 5E                 6196 	ld	e,(hl)
   1543 23                 6197 	inc	hl
   1544 56                 6198 	ld	d,(hl)
   1545 1A                 6199 	ld	a,(de)
   1546 2B                 6200 	dec	hl
   1547 2B                 6201 	dec	hl
                           6202 ;	genAnd
                           6203 ;	AOP_STK for _main_sloc1_1_0
   1548 77                 6204 	ld      (hl),a
                           6205 ; Removed redundent load
   1549 E6 FB              6206 	and	a,#0xFB
                           6207 ;	genAssign (pointer)
   154B 02                 6208 	ld	(bc),a
                           6209 ;	LazerMaze.c 63
                           6210 ;	genAssign
   154C 01 4F FF           6211 	ld	bc,#0xFF4F
                           6212 ;	genAssign (pointer)
   154F 3E 01              6213 	ld	a,#0x01
   1551 02                 6214 	ld	(bc),a
                           6215 ;	LazerMaze.c 64
                           6216 ;	genAssign
   1552 01 4F FF           6217 	ld	bc,#0xFF4F
                           6218 ;	genAssign (pointer)
   1555 3E 00              6219 	ld	a,#0x00
   1557 02                 6220 	ld	(bc),a
                           6221 ;	LazerMaze.c 66
                           6222 ;	genAssign
   1558 01 40 FF           6223 	ld	bc,#0xFF40
                           6224 ;	genAssign
                           6225 ;	AOP_STK for _main_sloc0_1_0
   155B 23                 6226 	inc	hl
   155C 36 40              6227 	ld	(hl),#0x40
   155E 23                 6228 	inc	hl
   155F 36 FF              6229 	ld	(hl),#0xFF
                           6230 ;	genPointerGet
                           6231 ;	AOP_STK for _main_sloc0_1_0
                           6232 ;	AOP_STK for _main_sloc1_1_0
   1561 2B                 6233 	dec	hl
   1562 5E                 6234 	ld	e,(hl)
   1563 23                 6235 	inc	hl
   1564 56                 6236 	ld	d,(hl)
   1565 1A                 6237 	ld	a,(de)
   1566 2B                 6238 	dec	hl
   1567 2B                 6239 	dec	hl
                           6240 ;	genOr
                           6241 ;	AOP_STK for _main_sloc1_1_0
   1568 77                 6242 	ld      (hl),a
                           6243 ; Removed redundent load
   1569 F6 01              6244 	or	a,#0x01
                           6245 ;	genAssign (pointer)
   156B 02                 6246 	ld	(bc),a
                           6247 ;	LazerMaze.c 67
                           6248 ;	genCall
                           6249 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   156C CD 00 00           6250 	call	_init_sound
                           6251 ;	LazerMaze.c 69
                           6252 ;	genCall
                           6253 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   156F CD B5 14           6254 	call	_display_title
                           6255 ;	LazerMaze.c 70
                           6256 ;	genAssign
   1572 01 40 FF           6257 	ld	bc,#0xFF40
                           6258 ;	genAssign
                           6259 ;	AOP_STK for _main_sloc0_1_0
   1575 F8 01              6260 	lda	hl,1(sp)
   1577 36 40              6261 	ld	(hl),#0x40
   1579 23                 6262 	inc	hl
   157A 36 FF              6263 	ld	(hl),#0xFF
                           6264 ;	genPointerGet
                           6265 ;	AOP_STK for _main_sloc0_1_0
                           6266 ;	AOP_STK for _main_sloc1_1_0
   157C 2B                 6267 	dec	hl
   157D 5E                 6268 	ld	e,(hl)
   157E 23                 6269 	inc	hl
   157F 56                 6270 	ld	d,(hl)
   1580 1A                 6271 	ld	a,(de)
   1581 2B                 6272 	dec	hl
   1582 2B                 6273 	dec	hl
                           6274 ;	genOr
                           6275 ;	AOP_STK for _main_sloc1_1_0
   1583 77                 6276 	ld      (hl),a
                           6277 ; Removed redundent load
   1584 F6 80              6278 	or	a,#0x80
                           6279 ;	genAssign (pointer)
   1586 02                 6280 	ld	(bc),a
                           6281 ;	LazerMaze.c 71
                           6282 ;	genCall
                           6283 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1587 CD A4 03           6284 	call	_title_sound
                           6285 ;	LazerMaze.c 72
                           6286 ;	genIpush
                           6287 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   158A 3E FF              6288 	ld	a,#0xFF
   158C F5                 6289 	push	af
   158D 33                 6290 	inc	sp
                           6291 ;	genCall
   158E CD 00 00           6292 	call	_waitpad
   1591 E8 01              6293 	lda	sp,1(sp)
                           6294 ;	LazerMaze.c 73
                           6295 ;	genCall
                           6296 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1593 CD 8B 03           6297 	call	_explosion_sound
                           6298 ;	LazerMaze.c 75
                           6299 ;	genIpush
                           6300 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1596 21 F8 15           6301 	ld	hl,#__str_0
   1599 E5                 6302 	push	hl
                           6303 ;	genCall
   159A CD 00 00           6304 	call	_printf
   159D E8 02              6305 	lda	sp,2(sp)
                           6306 ;	LazerMaze.c 76
                           6307 ;	genIpush
                           6308 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   159F 21 45 16           6309 	ld	hl,#__str_1
   15A2 E5                 6310 	push	hl
                           6311 ;	genCall
   15A3 CD 00 00           6312 	call	_printf
   15A6 E8 02              6313 	lda	sp,2(sp)
                           6314 ;	LazerMaze.c 77
                           6315 ;	genIpush
                           6316 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15A8 21 6B 16           6317 	ld	hl,#__str_2
   15AB E5                 6318 	push	hl
                           6319 ;	genCall
   15AC CD 00 00           6320 	call	_printf
   15AF E8 02              6321 	lda	sp,2(sp)
                           6322 ;	LazerMaze.c 78
                           6323 ;	genIpush
                           6324 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15B1 21 AE 16           6325 	ld	hl,#__str_3
   15B4 E5                 6326 	push	hl
                           6327 ;	genCall
   15B5 CD 00 00           6328 	call	_printf
   15B8 E8 02              6329 	lda	sp,2(sp)
                           6330 ;	LazerMaze.c 80
                           6331 ;	genIpush
                           6332 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15BA 3E 80              6333 	ld	a,#0x80
   15BC F5                 6334 	push	af
   15BD 33                 6335 	inc	sp
                           6336 ;	genCall
   15BE CD 00 00           6337 	call	_waitpad
   15C1 E8 01              6338 	lda	sp,1(sp)
                           6339 ;	LazerMaze.c 82
                           6340 ;	genAssign
   15C3 01 40 FF           6341 	ld	bc,#0xFF40
                           6342 ;	genAssign
                           6343 ;	AOP_STK for _main_sloc0_1_0
   15C6 F8 01              6344 	lda	hl,1(sp)
   15C8 36 40              6345 	ld	(hl),#0x40
   15CA 23                 6346 	inc	hl
   15CB 36 FF              6347 	ld	(hl),#0xFF
                           6348 ;	genPointerGet
                           6349 ;	AOP_STK for _main_sloc0_1_0
                           6350 ;	AOP_STK for _main_sloc1_1_0
   15CD 2B                 6351 	dec	hl
   15CE 5E                 6352 	ld	e,(hl)
   15CF 23                 6353 	inc	hl
   15D0 56                 6354 	ld	d,(hl)
   15D1 1A                 6355 	ld	a,(de)
   15D2 2B                 6356 	dec	hl
   15D3 2B                 6357 	dec	hl
                           6358 ;	genOr
                           6359 ;	AOP_STK for _main_sloc1_1_0
   15D4 77                 6360 	ld      (hl),a
                           6361 ; Removed redundent load
   15D5 F6 02              6362 	or	a,#0x02
                           6363 ;	genAssign (pointer)
   15D7 02                 6364 	ld	(bc),a
                           6365 ;	LazerMaze.c 83
                           6366 ;	genCall
                           6367 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15D8 CD BF 14           6368 	call	_display_level
                           6369 ;	LazerMaze.c 84
                           6370 ;	genCall
                           6371 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15DB CD D0 13           6372 	call	_cursor_init
                           6373 ;	LazerMaze.c 87
                           6374 ;	genLabel
   15DE                    6375 00104$:
                           6376 ;	LazerMaze.c 88
                           6377 ;	genIfx
                           6378 ;	AOP_HL for _defeat
   15DE AF                 6379 	xor	a,a
   15DF 21 B3 01           6380 	ld	hl,#_defeat
   15E2 B6                 6381 	or	a,(hl)
   15E3 CA E9 15           6382 	jp	z,00102$
                           6383 ;	LazerMaze.c 89
                           6384 ;	genCall
                           6385 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15E6 CD 76 0D           6386 	call	_check_transition
                           6387 ;	genLabel
   15E9                    6388 00102$:
                           6389 ;	LazerMaze.c 92
                           6390 ;	genCall
                           6391 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15E9 CD 30 12           6392 	call	_cursor_update
                           6393 ;	LazerMaze.c 94
                           6394 ;	genCall
                           6395 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15EC CD 47 03           6396 	call	_update_music
                           6397 ;	LazerMaze.c 95
                           6398 ;	genCall
                           6399 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15EF CD 00 00           6400 	call	_wait_vbl_done
                           6401 ;	genGoto
   15F2 C3 DE 15           6402 	jp	00104$
                           6403 ;	genLabel
   15F5                    6404 00106$:
                           6405 ;	genEndFunction
   15F5 E8 03              6406 	lda	sp,3(sp)
   15F7 C9                 6407 	ret
   15F8                    6408 ___main_end:
   15F8                    6409 __str_0:
   15F8 20                 6410 	.ascii " "
   15F9 0A                 6411 	.db 0x0A
   15FA 20 4D 6F 76 65 20  6412 	.ascii " Move the elements"
        74 68 65 20 65 6C
        65 6D 65 6E 74 73
   160C 0A                 6413 	.db 0x0A
   160D 20 69 6E 20 74 68  6414 	.ascii " in the level to"
        65 20 6C 65 76 65
        6C 20 74 6F
   161D 0A                 6415 	.db 0x0A
   161E 20 68 69 74 20 61  6416 	.ascii " hit all objectives"
        6C 6C 20 6F 62 6A
        65 63 74 69 76 65
        73
   1631 0A                 6417 	.db 0x0A
   1632 20 77              6418 	.ascii " w"
   1634 69 74 68 20 74 68  6419 	.ascii "ith the laser."
        65 20 6C 61 73 65
        72 2E
   1642 0A                 6420 	.db 0x0A
   1643 0A                 6421 	.db 0x0A
   1644 00                 6422 	.db 0x00
   1645                    6423 __str_1:
   1645 20 55 73 65 20 74  6424 	.ascii " Use the arrors to"
        68 65 20 61 72 72
        6F 72 73 20 74 6F
   1657 0A                 6425 	.db 0x0A
   1658 20 6D 6F 76 65 74  6426 	.ascii " movethe cursor."
        68 65 20 63 75 72
        73 6F 72 2E
   1668 0A                 6427 	.db 0x0A
   1669 0A                 6428 	.db 0x0A
   166A 00                 6429 	.db 0x00
   166B                    6430 __str_2:
   166B 20 50 72 65 73 73  6431 	.ascii " Press A to move an"
        20 41 20 74 6F 20
        6D 6F 76 65 20 61
        6E
   167E 0A                 6432 	.db 0x0A
   167F 20 65 6C 65 6D 65  6433 	.ascii " element. Only some"
        6E 74 2E 20 4F 6E
        6C 79 20 73 6F 6D
        65
   1692 0A                 6434 	.db 0x0A
   1693 20 65 6C 65 6D 65  6435 	.ascii " elements can be"
        6E 74 73 20 63 61
        6E 20 62 65
   16A3 0A                 6436 	.db 0x0A
   16A4 20 6D 6F           6437 	.ascii " mo"
   16A7 76 65 64 2E        6438 	.ascii "ved."
   16AB 0A                 6439 	.db 0x0A
   16AC 0A                 6440 	.db 0x0A
   16AD 00                 6441 	.db 0x00
   16AE                    6442 __str_3:
   16AE 20 50 72 65 73 73  6443 	.ascii " Press start to"
        20 73 74 61 72 74
        20 74 6F
   16BD 0A                 6444 	.db 0x0A
   16BE 20 63 6F 6E 74 69  6445 	.ascii " continue"
        6E 75 65
   16C7 0A                 6446 	.db 0x0A
   16C8 00                 6447 	.db 0x00
                           6448 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___check_transition_end            0F64 R
  0 ___check_transition_start          0D76 R
  0 ___cursor_init_end                 14B5 R
  0 ___cursor_init_start               13D0 R
  0 ___cursor_move_end                 1230 R
  0 ___cursor_move_start               10F0 R
  0 ___cursor_reset_end                13D0 R
  0 ___cursor_reset_start              1390 R
  0 ___cursor_toggle_end               10F0 R
  0 ___cursor_toggle_start             0F64 R
  0 ___cursor_update_end               1390 R
  0 ___cursor_update_start             1230 R
  0 ___determine_lazer_path_end        09D2 R
  0 ___determine_lazer_path_start      07A2 R
  0 ___determine_next_direction_end    07A2 R
  0 ___determine_next_direction_star   0668 R
  0 ___determine_next_lazer_stat_end   0668 R
  0 ___determine_next_lazer_stat_sta   0511 R
  0 ___display_defeat_end              1535 R
  0 ___display_defeat_start            152B R
  0 ___display_level_end               1521 R
  0 ___display_level_start             14BF R
  0 ___display_title_end               14BF R
  0 ___display_title_start             14B5 R
  0 ___display_victory_end             152B R
  0 ___display_victory_start           1521 R
  0 ___explosion_sound_end             03A4 R
  0 ___explosion_sound_start           038B R
  0 ___game_over_sound_end             04EE R
  0 ___game_over_sound_start           0481 R
  0 ___init_background_end             0B86 R
  0 ___init_background_start           0A88 R
  0 ___init_sound_end                  001D R
  0 ___init_sound_start                0000 R
  0 ___main_end                        15F8 R
  0 ___main_start                      1535 R
  0 ___move_cursor_sound_end           038B R
  0 ___move_cursor_sound_start         036C R
  0 ___play_gameplay_music_end         0347 R
  0 ___play_gameplay_music_start       030F R
  0 ___project_lazer_end               0A88 R
  0 ___project_lazer_start             09D2 R
  0 ___row_col_to_cel_end              0511 R
  0 ___row_col_to_cel_start            04EE R
  0 ___setNote_end                     030F R
  0 ___setNote_start                   01AF R
  0 ___title_sound_end                 0414 R
  0 ___title_sound_start               03A4 R
  0 ___update_background_end           0D76 R
  0 ___update_background_start         0B86 R
  0 ___update_music_end                036C R
  0 ___update_music_start              0347 R
  0 ___victory_sound_end               0481 R
  0 ___victory_sound_start             0414 R
    __divuchar_rrx_s                   **** GX
    __divuint_rrx_s                    **** GX
    __moduchar_rrx_s                   **** GX
    __moduint_rrx_s                    **** GX
  0 __str_0                            15F8 R
  0 __str_1                            1645 R
  0 __str_2                            166B R
  0 __str_3                            16AE R
  0 _check_transition                  0D76 GR
  1 _counter                           0201 GR
  1 _currentBeat                       0001 GR
  1 _current_level                     004A GR
  1 _cursor                            01FC GR
  0 _cursor_init                       13D0 GR
  0 _cursor_move                       10F0 GR
  0 _cursor_reset                      1390 GR
  0 _cursor_toggle                     0F64 GR
  0 _cursor_update                     1230 GR
  1 _defeat                            01B3 GR
    _delay                             **** GX
  0 _determine_lazer_path              07A2 GR
  0 _determine_next_direction          0668 GR
  0 _determine_next_lazer_stat         0511 GR
  0 _display_defeat                    152B GR
  0 _display_level                     14BF GR
    _display_off                       **** GX
  0 _display_title                     14B5 GR
  0 _display_victory                   1521 GR
  0 _explosion_sound                   038B GR
  0 _frequencies                       001D GR
  0 _game_ch1                          00AF GR
  0 _game_ch2                          012F GR
  0 _game_over_sound                   0481 GR
  0 _init_background                   0A88 GR
  0 _init_sound                        0000 GR
    _joypad                            **** GX
  1 _lazer_map                         01B4 GR
  1 _level                             01B2 GR
  1 _level_objects                     0002 GR
  0 _main                              1535 GR
  0 _move_cursor_sound                 036C GR
    _move_sprite                       **** GX
  0 _play_gameplay_music               030F GR
    _printf                            **** GX
  0 _project_lazer                     09D2 GR
  0 _row_col_to_cel                    04EE GR
  1 _selected                          0200 GR
  0 _setNote                           01AF GR
    _set_bkg_tiles                     **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
    _show_defeat                       **** GX
    _show_level                        **** GX
    _show_title                        **** GX
    _show_victory                      **** GX
  1 _timerCounter                      0000 GR
  0 _title_sound                       03A4 GR
  0 _update_background                 0B86 GR
  0 _update_music                      0347 GR
  0 _victory_sound                     0414 GR
    _wait_vbl_done                     **** GX
    _waitpad                           **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 16C9   flags 0
   1 _DATA                              size  202   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    5   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
